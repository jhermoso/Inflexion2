
#region Copyright info
//-----------------------------------------------------------------------
// <copyright file="Persona" company="Atento">
//     Copyright (c) 2016. Atento. All Rights Reserved.
//     Copyright (c) 2016. Atento. Todos los derechos reservados.
//
//     .en This code has been generated by a tool, please don't modify this file or  
//     you will lost all your modifications in the next regeneration.
//      The original t4 template to get this file is " DomainBaseEntityCT.tt" with "public class DomainBaseEntityCT : Template"
// 
//     .es Este código ha sido generado por una herramienta, por favor no modifique este fichero
//     o perdera las modificaciones al regenerar este fichero.
//      La plantilla con que se ha generado este fichero es "DomainBaseEntityCT.tt" con "public class DomainBaseEntityCT : Template"
//
// </copyright>
//-----------------------------------------------------------------------
#endregion

namespace Atento.Suite.Shared.Domain
{

    #region usings
    using System;
    using System.Linq;

    using Atento.Suite.Shared.Domain.Data;
    using Atento.Suite.Shared.Infrastructure.Resources;
    using Inflexion2;
    using Inflexion2.Domain;

    using System.ComponentModel.DataAnnotations;
    #endregion

    /// <summary>
    /// <see cref="Persona".
    /// </summary>
    [Serializable]
    public partial class Persona : Inflexion2.Domain.AggregateRoot<Persona, Int32>, IPersona
    {

        #region Campos y constantes
        #endregion

        #region Constructors

        /// <summary>
        /// .en Empty Constructor for the class <see cref="Persona"/> it is required by nHibernate and EntityFramework.
        /// .es Constructor vacio de la clase <see cref="Persona"/> exigido por nHibernate o EntityFramework.
        /// </summary>
        /// <remarks>
        /// .en by convention the empty constructor initialize the default values and make the news for the collections.
        /// .es por convenicón el constructor vacio inizializa los valores por defecto y hace los news de las colecciones.
        /// </remarks>
        protected internal Persona()                
        {
        } // end empty constructor Persona

        /// <summary>
        /// Inicializa una nueva instancia de la clase <see cref="Persona"/>.
        /// con un constructor parametrizado con los campos de tipo mandatory.
        /// </summary>
        /// <remarks>
        /// Constructor de la clase <see cref="Persona"/>.
        /// </remarks>
        /// <param name="Id">
        /// Parámetro que indica el identificador raiz de la entidad.
        /// </param>
        /// <param name="nombre"> 
        /// Parametro <see cref="Persona.Nombre/> del constructor de campos mandatory de la clase <see cref="Persona"/>
        /// Propiedad deducida del rol source de una relación
        /// </param>
        protected internal Persona( string nombre ) :  this()  //cbc.isDerivedFromOneEntity ='False', IsDerived(cbc.entitySuperClass ) = ''
        {
            // .en the mandatory fields are inserted like parameters in the constructor.
            // If there are any property which are collections from relationship here  
            // is where insert the news o their injection.
            // Also is included the default values for the properties which has one.

            // .es Aqui introducimos los campos mandatory que intervienen en el constructor
            // si tiene atributos que son collecciones derivadas de relacionaes aqui es 
            // donde tenemos que hacer los news de dichas colecciones o su inyección.
            // También debemos incluir aquellos campos que tienen un valor por defecto.
            this.Nombre = nombre;


        }// Constructor
        #endregion

        #region Propiedades

        /// <summary>
        /// Propiedad pública que permite obtener Nombre.
        /// </summary>
        /// <remarks>
        /// Test with auto property and public setter.
        /// </remarks>
        /// <value>
        /// Valor que es utilizado para establecer y obtener Nombre.
        /// </value>
        [Required(ErrorMessageResourceType = typeof(Inflexion2.Resources.FrameworkResource), 
                  ErrorMessageResourceName = "FieldIsMandatory" )]
        [StringLength( 80, MinimumLength=3, ErrorMessageResourceType = typeof(SharedResources), ErrorMessageResourceName = "Persona_NombreRangeStringLengthError" )]
        public virtual string Nombre 
            {
                get;
                set;
            }


        /// <summary>
        /// Propiedad pública que permite obtener BooleanField.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <value>
        /// Valor que es utilizado para establecer y obtener BooleanField.
        /// </value>
        [Required(ErrorMessageResourceType = typeof(Inflexion2.Resources.FrameworkResource), 
                  ErrorMessageResourceName = "FieldIsMandatory" )]
        public virtual bool BooleanField 
            {
                get;
                set;
            }


        /// <summary>
        /// Propiedad pública que permite obtener DatetimeField.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <value>
        /// Valor que es utilizado para establecer y obtener DatetimeField.
        /// </value>
        [Required(ErrorMessageResourceType = typeof(Inflexion2.Resources.FrameworkResource), 
                  ErrorMessageResourceName = "FieldIsMandatory" )]
        public virtual DateTime DatetimeField 
            {
                get;
                set;
            }


        /// <summary>
        /// Propiedad pública que permite obtener ByteField.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <value>
        /// Valor que es utilizado para establecer y obtener ByteField.
        /// </value>
        [Required(ErrorMessageResourceType = typeof(Inflexion2.Resources.FrameworkResource), 
                  ErrorMessageResourceName = "FieldIsMandatory" )]
        public virtual byte ByteField 
            {
                get;
                set;
            }


        /// <summary>
        /// Propiedad pública que permite obtener GuidField.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <value>
        /// Valor que es utilizado para establecer y obtener GuidField.
        /// </value>
        [Required(ErrorMessageResourceType = typeof(Inflexion2.Resources.FrameworkResource), 
                  ErrorMessageResourceName = "FieldIsMandatory" )]
        public virtual Guid GuidField 
            {
                get;
                set;
            }


        /// <summary>
        /// Propiedad pública que permite obtener DecimalField.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <value>
        /// Valor que es utilizado para establecer y obtener DecimalField.
        /// </value>
        [Required(ErrorMessageResourceType = typeof(Inflexion2.Resources.FrameworkResource), 
                  ErrorMessageResourceName = "FieldIsMandatory" )]
        public virtual decimal DecimalField 
            {
                get;
                set;
            }


        /// <summary>
        /// Propiedad pública que permite obtener DobleField.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <value>
        /// Valor que es utilizado para establecer y obtener DobleField.
        /// </value>
        [Required(ErrorMessageResourceType = typeof(Inflexion2.Resources.FrameworkResource), 
                  ErrorMessageResourceName = "FieldIsMandatory" )]
        public virtual double DobleField 
            {
                get;
                set;
            }


        /// <summary>
        /// Propiedad pública que permite obtener FloatField.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <value>
        /// Valor que es utilizado para establecer y obtener FloatField.
        /// </value>
        [Required(ErrorMessageResourceType = typeof(Inflexion2.Resources.FrameworkResource), 
                  ErrorMessageResourceName = "FieldIsMandatory" )]
        public virtual float FloatField 
            {
                get;
                set;
            }


        /// <summary>
        /// Propiedad pública que permite obtener IntField.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <value>
        /// Valor que es utilizado para establecer y obtener IntField.
        /// </value>
        [Required(ErrorMessageResourceType = typeof(Inflexion2.Resources.FrameworkResource), 
                  ErrorMessageResourceName = "FieldIsMandatory" )]
        public virtual int IntField 
            {
                get;
                set;
            }


        /// <summary>
        /// Propiedad pública que permite obtener LongField.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <value>
        /// Valor que es utilizado para establecer y obtener LongField.
        /// </value>
        [Required(ErrorMessageResourceType = typeof(Inflexion2.Resources.FrameworkResource), 
                  ErrorMessageResourceName = "FieldIsMandatory" )]
        public virtual long LongField 
            {
                get;
                set;
            }


        /// <summary>
        /// Propiedad pública que permite obtener DateTimeOffsetField.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <value>
        /// Valor que es utilizado para establecer y obtener DateTimeOffsetField.
        /// </value>
        [Required(ErrorMessageResourceType = typeof(Inflexion2.Resources.FrameworkResource), 
                  ErrorMessageResourceName = "FieldIsMandatory" )]
        public virtual DateTimeOffset DateTimeOffsetField 
            {
                get;
                set;
            }


        /// <summary>
        /// Propiedad pública que permite obtener ShortField.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <value>
        /// Valor que es utilizado para establecer y obtener ShortField.
        /// </value>
        [Required(ErrorMessageResourceType = typeof(Inflexion2.Resources.FrameworkResource), 
                  ErrorMessageResourceName = "FieldIsMandatory" )]
        public virtual short ShortField 
            {
                get;
                set;
            }


        /// <summary>
        /// Propiedad pública que permite obtener TimeSpanField.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <value>
        /// Valor que es utilizado para establecer y obtener TimeSpanField.
        /// </value>
        [Required(ErrorMessageResourceType = typeof(Inflexion2.Resources.FrameworkResource), 
                  ErrorMessageResourceName = "FieldIsMandatory" )]
        public virtual TimeSpan TimeSpanField 
            {
                get;
                set;
            }


        /// <summary>
        /// Propiedad pública que permite obtener Int16Field.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <value>
        /// Valor que es utilizado para establecer y obtener Int16Field.
        /// </value>
        [Required(ErrorMessageResourceType = typeof(Inflexion2.Resources.FrameworkResource), 
                  ErrorMessageResourceName = "FieldIsMandatory" )]
        public virtual Int16 Int16Field 
            {
                get;
                set;
            }


        /// <summary>
        /// Propiedad pública que permite obtener Int32Field.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <value>
        /// Valor que es utilizado para establecer y obtener Int32Field.
        /// </value>
        [Required(ErrorMessageResourceType = typeof(Inflexion2.Resources.FrameworkResource), 
                  ErrorMessageResourceName = "FieldIsMandatory" )]
        public virtual Int32 Int32Field 
            {
                get;
                set;
            }


        /// <summary>
        /// Propiedad pública que permite obtener Int64Field.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <value>
        /// Valor que es utilizado para establecer y obtener Int64Field.
        /// </value>
        [Required(ErrorMessageResourceType = typeof(Inflexion2.Resources.FrameworkResource), 
                  ErrorMessageResourceName = "FieldIsMandatory" )]
        public virtual Int64 Int64Field 
            {
                get;
                set;
            }

        #endregion

        #region Métodos Set de propiedades comunes
        #endregion

    } // class Persona 

} //  Atento.Suite.Shared.Domain

