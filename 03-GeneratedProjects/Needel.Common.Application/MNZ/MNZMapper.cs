#region Copyright info
//-----------------------------------------------------------------------
// <copyright file="MNZ" company="Company">
//     Copyright (c) 2020. Company. All Rights Reserved.
//     Copyright (c) 2020. Company. Todos los derechos reservados.
//
//     .en This code has been generated by a tool, please don't modify this file or  
//     you will lost all your modifications in the next regeneration.
//      The original t4 template to get this file is " ApplicationEntityMapperCT.tt" with "public class ApplicationEntityMapperCT : Template"
// 
//     .es Este código ha sido generado por una herramienta, por favor no modifique este fichero
//     o perdera las modificaciones al regenerar este fichero.
//      La plantilla con que se ha generado este fichero es "ApplicationEntityMapperCT.tt" con "public class ApplicationEntityMapperCT : Template"
//
// </copyright>
//-----------------------------------------------------------------------
#endregion

namespace Needel.Common.Application
{

    #region usings
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using Inflexion2;

    using Needel.Common.Application.Dtos;
    using Needel.Common.Domain;
    #endregion

    /// <summary>
    /// .en mapping class from ValueObject to dto <see cref="MNZMapper"/>
    /// .es Clase pública encargada de mapear los datos de una entidad <see cref="MNZMapper"/>.
    /// </summary>
    public class MNZMapper : IMNZMapper
    {
        #region Fields parent mappers
        private Needel.Common.Application.IEntityMMapper entityMDtoMapper;
        private Needel.Common.Application.IEntityNMapper entityNDtoMapper;
        private Needel.Common.Application.IEntityZMapper entityZDtoMapper;
        #endregion

        #region Fields children mappers
        #endregion

        #region CONSTRUCTORS
        /// <summary>
        /// .en Get an instance of <see cref="MNZMapper"/>
        /// .es Inicializa una nueva instancia de la clase <see cref="MNZMapper"/>.
        /// </summary>
        public MNZMapper()
        {
        }
        #endregion

        #region Properties parent mappers
        /// <summary>
        /// Mapper for Parent
        /// </summary>
        protected Needel.Common.Application.IEntityMMapper EntityMDtoMapper
        {
            get
            {
                if (entityMDtoMapper == null) entityMDtoMapper = new EntityMMapper();
                return entityMDtoMapper;
            }
        }

        /// <summary>
        /// Mapper for Parent
        /// </summary>
        protected Needel.Common.Application.IEntityNMapper EntityNDtoMapper
        {
            get
            {
                if (entityNDtoMapper == null) entityNDtoMapper = new EntityNMapper();
                return entityNDtoMapper;
            }
        }

        /// <summary>
        /// Mapper for Parent
        /// </summary>
        protected Needel.Common.Application.IEntityZMapper EntityZDtoMapper
        {
            get
            {
                if (entityZDtoMapper == null) entityZDtoMapper = new EntityZMapper();
                return entityZDtoMapper;
            }
        }

        #endregion

        #region Properties children mappers
        #endregion

        #region FUNCTIONS
        /// <summary>
        /// Default constructor parameters
        /// </summary>
        /// <param name="valueObjectMNZ"></param>
        /// <returns></returns>
        public MNZDto ValueObjectMapping(MNZ valueObjectMNZ)
        {
            if (valueObjectMNZ == null)
            {
                return null;
            }

            return ValueObjectMapping(valueObjectMNZ, true, false);
        }

        /// <summary>
        /// .en public function mapping from ValueObject to dto
        /// </summary>
        /// <param name="valueObjectMNZ">
        /// </param>
        /// <param name="mapParents">
        /// .en option to map parent objects
        /// </param>
        /// <param name="mapChildren">
        /// .en option to map children objects
        /// </param>
        /// <returns>
        /// .en returns an DTO of type <see cref="MNZDto"/>
        /// </returns>
        public MNZDto ValueObjectMapping(MNZ valueObjectMNZ, bool mapParents , bool mapChildren)
        {
            if (valueObjectMNZ == null)
            {
                return null;
            }

            MNZDto dtoMNZ = new MNZDto();
            dtoMNZ.EntityM_Id = valueObjectMNZ.EntityM_Id;
            dtoMNZ.EntityN_Id = valueObjectMNZ.EntityN_Id;
            dtoMNZ.EntityZ_Id = valueObjectMNZ.EntityZ_Id;

            if (mapParents)
            {
                dtoMNZ.EntityM = EntityMDtoMapper.EntityMapping(valueObjectMNZ.EntityM, false, false);
                dtoMNZ.EntityN = EntityNDtoMapper.EntityMapping(valueObjectMNZ.EntityN, false, false);
                dtoMNZ.EntityZ = EntityZDtoMapper.EntityMapping(valueObjectMNZ.EntityZ, false, false);
            }

            return dtoMNZ;
        } // ValueObjectMapping
        #endregion
    } // end class MNZMapper
} //  Needel.Common.Application
