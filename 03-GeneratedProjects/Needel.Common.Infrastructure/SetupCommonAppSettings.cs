
#region Copyright info
//-----------------------------------------------------------------------
// <copyright file="User" company="Company">
//     Copyright (c) 2019. Company. All Rights Reserved.
//     Copyright (c) 2019. Company. Todos los derechos reservados.
//
//     .en This code has been generated by a tool, please don't modify this file or  
//     you will lost all your modifications in the next regeneration.
//      The original t4 template to get this file is " SetupAppSettingsCT.tt" with "public class SetupAppSettingsCT : Template"
// 
//     .es Este código ha sido generado por una herramienta, por favor no modifique este fichero
//     o perdera las modificaciones al regenerar este fichero.
//      La plantilla con que se ha generado este fichero es "SetupAppSettingsCT.tt" con "public class SetupAppSettingsCT : Template"
//
// </copyright>
//-----------------------------------------------------------------------
#endregion

namespace Needel.Common.Infrastructure
{

    #region Usings
    using System;
    using System.Collections.Generic;
    using System.Globalization;
    using System.Linq;
    using System.Text;
    using System.Threading.Tasks;
    #endregion

    /// <summary>
    /// Common funcionalities to read and setup application settings from
    /// diferent sources. app.config web.config, database or xml files
    /// </summary>
     public class SetupCommonAppSettings : Inflexion2.Infrastructure.ApplicationSettings
    {
        #region constructors
        /// <summary>
        /// constructor SetupCommonAppSettings
        /// </summary>
        /// <param name="nameOrConnectionString"></param>
        public SetupCommonAppSettings(string[] args = null)
            :base()
        {
            SetLogger(this.GetType());
            this.Logger.Debug(string.Format(CultureInfo.InvariantCulture, "Created SetupNeedelAppSettings"));
            this.userKey = "kbGtg5euTZPUtafUw"; // encripting key for user
            this.passwordKey = "t7SB5gftqkkdTgLdH"; // encripting key for password
            ReadBasicPropertiesFromConfig(args);
            LoadDatabaseProperties();
        }
        #endregion
    }
}
