//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Needel.Common.Application.WcfClient.MNZReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MNZReference.IMNZService")]
    public interface IMNZService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMNZService/Create", ReplyAction="http://tempuri.org/IMNZService/CreateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflexion2.Application.FaultObject), Action="http://tempuri.org/IMNZService/CreateFaultObjectFault", Name="FaultObject", Namespace="")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflexion2.Application.ValidationException), Action="http://tempuri.org/IMNZService/CreateValidationExceptionFault", Name="ValidationException", Namespace="")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflexion2.Application.InternalException), Action="http://tempuri.org/IMNZService/CreateInternalExceptionFault", Name="InternalException", Namespace="")]
        Needel.Common.Application.Dtos.MNZDto Create(Needel.Common.Application.Dtos.MNZDto mNZDto);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMNZService/Create", ReplyAction="http://tempuri.org/IMNZService/CreateResponse")]
        System.IAsyncResult BeginCreate(Needel.Common.Application.Dtos.MNZDto mNZDto, System.AsyncCallback callback, object asyncState);
        
        Needel.Common.Application.Dtos.MNZDto EndCreate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMNZService/Delete", ReplyAction="http://tempuri.org/IMNZService/DeleteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflexion2.Application.FaultObject), Action="http://tempuri.org/IMNZService/DeleteFaultObjectFault", Name="FaultObject", Namespace="")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflexion2.Application.ValidationException), Action="http://tempuri.org/IMNZService/DeleteValidationExceptionFault", Name="ValidationException", Namespace="")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflexion2.Application.InternalException), Action="http://tempuri.org/IMNZService/DeleteInternalExceptionFault", Name="InternalException", Namespace="")]
        bool Delete(Needel.Common.Application.Dtos.MNZDto mNZ);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMNZService/Delete", ReplyAction="http://tempuri.org/IMNZService/DeleteResponse")]
        System.IAsyncResult BeginDelete(Needel.Common.Application.Dtos.MNZDto mNZ, System.AsyncCallback callback, object asyncState);
        
        bool EndDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMNZService/GetAll", ReplyAction="http://tempuri.org/IMNZService/GetAllResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflexion2.Application.FaultObject), Action="http://tempuri.org/IMNZService/GetAllFaultObjectFault", Name="FaultObject", Namespace="")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflexion2.Application.ValidationException), Action="http://tempuri.org/IMNZService/GetAllValidationExceptionFault", Name="ValidationException", Namespace="")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflexion2.Application.InternalException), Action="http://tempuri.org/IMNZService/GetAllInternalExceptionFault", Name="InternalException", Namespace="")]
        System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> GetAll();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMNZService/GetAll", ReplyAction="http://tempuri.org/IMNZService/GetAllResponse")]
        System.IAsyncResult BeginGetAll(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> EndGetAll(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMNZService/GetPaged", ReplyAction="http://tempuri.org/IMNZService/GetPagedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflexion2.Application.FaultObject), Action="http://tempuri.org/IMNZService/GetPagedFaultObjectFault", Name="FaultObject", Namespace="")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflexion2.Application.ValidationException), Action="http://tempuri.org/IMNZService/GetPagedValidationExceptionFault", Name="ValidationException", Namespace="")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflexion2.Application.InternalException), Action="http://tempuri.org/IMNZService/GetPagedInternalExceptionFault", Name="InternalException", Namespace="")]
        Inflexion2.Domain.PagedElements<Needel.Common.Application.Dtos.MNZDto> GetPaged(Inflexion2.Application.SpecificationDto specificationDto);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMNZService/GetPaged", ReplyAction="http://tempuri.org/IMNZService/GetPagedResponse")]
        System.IAsyncResult BeginGetPaged(Inflexion2.Application.SpecificationDto specificationDto, System.AsyncCallback callback, object asyncState);
        
        Inflexion2.Domain.PagedElements<Needel.Common.Application.Dtos.MNZDto> EndGetPaged(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMNZService/DeleteAll", ReplyAction="http://tempuri.org/IMNZService/DeleteAllResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflexion2.Application.FaultObject), Action="http://tempuri.org/IMNZService/DeleteAllFaultObjectFault", Name="FaultObject", Namespace="")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflexion2.Application.ValidationException), Action="http://tempuri.org/IMNZService/DeleteAllValidationExceptionFault", Name="ValidationException", Namespace="")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflexion2.Application.InternalException), Action="http://tempuri.org/IMNZService/DeleteAllInternalExceptionFault", Name="InternalException", Namespace="")]
        System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> DeleteAll();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMNZService/DeleteAll", ReplyAction="http://tempuri.org/IMNZService/DeleteAllResponse")]
        System.IAsyncResult BeginDeleteAll(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> EndDeleteAll(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMNZService/GetAllExceptThis", ReplyAction="http://tempuri.org/IMNZService/GetAllExceptThisResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflexion2.Application.FaultObject), Action="http://tempuri.org/IMNZService/GetAllExceptThisFaultObjectFault", Name="FaultObject", Namespace="")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflexion2.Application.ValidationException), Action="http://tempuri.org/IMNZService/GetAllExceptThisValidationExceptionFault", Name="ValidationException", Namespace="")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflexion2.Application.InternalException), Action="http://tempuri.org/IMNZService/GetAllExceptThisInternalExceptionFault", Name="InternalException", Namespace="")]
        System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> GetAllExceptThis(Needel.Common.Application.Dtos.MNZDto mNZDto);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMNZService/GetAllExceptThis", ReplyAction="http://tempuri.org/IMNZService/GetAllExceptThisResponse")]
        System.IAsyncResult BeginGetAllExceptThis(Needel.Common.Application.Dtos.MNZDto mNZDto, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> EndGetAllExceptThis(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMNZService/GetAllExceptThese", ReplyAction="http://tempuri.org/IMNZService/GetAllExceptTheseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflexion2.Application.FaultObject), Action="http://tempuri.org/IMNZService/GetAllExceptTheseFaultObjectFault", Name="FaultObject", Namespace="")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflexion2.Application.ValidationException), Action="http://tempuri.org/IMNZService/GetAllExceptTheseValidationExceptionFault", Name="ValidationException", Namespace="")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflexion2.Application.InternalException), Action="http://tempuri.org/IMNZService/GetAllExceptTheseInternalExceptionFault", Name="InternalException", Namespace="")]
        System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> GetAllExceptThese(System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> mNZs);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMNZService/GetAllExceptThese", ReplyAction="http://tempuri.org/IMNZService/GetAllExceptTheseResponse")]
        System.IAsyncResult BeginGetAllExceptThese(System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> mNZs, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> EndGetAllExceptThese(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMNZService/GetFiltered", ReplyAction="http://tempuri.org/IMNZService/GetFilteredResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflexion2.Application.FaultObject), Action="http://tempuri.org/IMNZService/GetFilteredFaultObjectFault", Name="FaultObject", Namespace="")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflexion2.Application.ValidationException), Action="http://tempuri.org/IMNZService/GetFilteredValidationExceptionFault", Name="ValidationException", Namespace="")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflexion2.Application.InternalException), Action="http://tempuri.org/IMNZService/GetFilteredInternalExceptionFault", Name="InternalException", Namespace="")]
        System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> GetFiltered(Inflexion2.Application.SpecificationDto specificationDto);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMNZService/GetFiltered", ReplyAction="http://tempuri.org/IMNZService/GetFilteredResponse")]
        System.IAsyncResult BeginGetFiltered(Inflexion2.Application.SpecificationDto specificationDto, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> EndGetFiltered(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMNZServiceChannel : Needel.Common.Application.WcfClient.MNZReference.IMNZService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Needel.Common.Application.Dtos.MNZDto Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Needel.Common.Application.Dtos.MNZDto)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Inflexion2.Domain.PagedElements<Needel.Common.Application.Dtos.MNZDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Inflexion2.Domain.PagedElements<Needel.Common.Application.Dtos.MNZDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllExceptThisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllExceptThisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllExceptTheseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllExceptTheseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFilteredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFilteredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MNZServiceClient : System.ServiceModel.ClientBase<Needel.Common.Application.WcfClient.MNZReference.IMNZService>, Needel.Common.Application.WcfClient.MNZReference.IMNZService {
        
        private BeginOperationDelegate onBeginCreateDelegate;
        
        private EndOperationDelegate onEndCreateDelegate;
        
        private System.Threading.SendOrPostCallback onCreateCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDelegate;
        
        private EndOperationDelegate onEndDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllDelegate;
        
        private EndOperationDelegate onEndGetAllDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPagedDelegate;
        
        private EndOperationDelegate onEndGetPagedDelegate;
        
        private System.Threading.SendOrPostCallback onGetPagedCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteAllDelegate;
        
        private EndOperationDelegate onEndDeleteAllDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteAllCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllExceptThisDelegate;
        
        private EndOperationDelegate onEndGetAllExceptThisDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllExceptThisCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllExceptTheseDelegate;
        
        private EndOperationDelegate onEndGetAllExceptTheseDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllExceptTheseCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFilteredDelegate;
        
        private EndOperationDelegate onEndGetFilteredDelegate;
        
        private System.Threading.SendOrPostCallback onGetFilteredCompletedDelegate;
        
        public MNZServiceClient() {
        }
        
        public MNZServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MNZServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MNZServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MNZServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<CreateCompletedEventArgs> CreateCompleted;
        
        public event System.EventHandler<DeleteCompletedEventArgs> DeleteCompleted;
        
        public event System.EventHandler<GetAllCompletedEventArgs> GetAllCompleted;
        
        public event System.EventHandler<GetPagedCompletedEventArgs> GetPagedCompleted;
        
        public event System.EventHandler<DeleteAllCompletedEventArgs> DeleteAllCompleted;
        
        public event System.EventHandler<GetAllExceptThisCompletedEventArgs> GetAllExceptThisCompleted;
        
        public event System.EventHandler<GetAllExceptTheseCompletedEventArgs> GetAllExceptTheseCompleted;
        
        public event System.EventHandler<GetFilteredCompletedEventArgs> GetFilteredCompleted;
        
        public Needel.Common.Application.Dtos.MNZDto Create(Needel.Common.Application.Dtos.MNZDto mNZDto) {
            return base.Channel.Create(mNZDto);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreate(Needel.Common.Application.Dtos.MNZDto mNZDto, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreate(mNZDto, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Needel.Common.Application.Dtos.MNZDto EndCreate(System.IAsyncResult result) {
            return base.Channel.EndCreate(result);
        }
        
        private System.IAsyncResult OnBeginCreate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Needel.Common.Application.Dtos.MNZDto mNZDto = ((Needel.Common.Application.Dtos.MNZDto)(inValues[0]));
            return this.BeginCreate(mNZDto, callback, asyncState);
        }
        
        private object[] OnEndCreate(System.IAsyncResult result) {
            Needel.Common.Application.Dtos.MNZDto retVal = this.EndCreate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateCompleted(object state) {
            if ((this.CreateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateCompleted(this, new CreateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateAsync(Needel.Common.Application.Dtos.MNZDto mNZDto) {
            this.CreateAsync(mNZDto, null);
        }
        
        public void CreateAsync(Needel.Common.Application.Dtos.MNZDto mNZDto, object userState) {
            if ((this.onBeginCreateDelegate == null)) {
                this.onBeginCreateDelegate = new BeginOperationDelegate(this.OnBeginCreate);
            }
            if ((this.onEndCreateDelegate == null)) {
                this.onEndCreateDelegate = new EndOperationDelegate(this.OnEndCreate);
            }
            if ((this.onCreateCompletedDelegate == null)) {
                this.onCreateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateCompleted);
            }
            base.InvokeAsync(this.onBeginCreateDelegate, new object[] {
                        mNZDto}, this.onEndCreateDelegate, this.onCreateCompletedDelegate, userState);
        }
        
        public bool Delete(Needel.Common.Application.Dtos.MNZDto mNZ) {
            return base.Channel.Delete(mNZ);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDelete(Needel.Common.Application.Dtos.MNZDto mNZ, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDelete(mNZ, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndDelete(System.IAsyncResult result) {
            return base.Channel.EndDelete(result);
        }
        
        private System.IAsyncResult OnBeginDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Needel.Common.Application.Dtos.MNZDto mNZ = ((Needel.Common.Application.Dtos.MNZDto)(inValues[0]));
            return this.BeginDelete(mNZ, callback, asyncState);
        }
        
        private object[] OnEndDelete(System.IAsyncResult result) {
            bool retVal = this.EndDelete(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteCompleted(object state) {
            if ((this.DeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteCompleted(this, new DeleteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAsync(Needel.Common.Application.Dtos.MNZDto mNZ) {
            this.DeleteAsync(mNZ, null);
        }
        
        public void DeleteAsync(Needel.Common.Application.Dtos.MNZDto mNZ, object userState) {
            if ((this.onBeginDeleteDelegate == null)) {
                this.onBeginDeleteDelegate = new BeginOperationDelegate(this.OnBeginDelete);
            }
            if ((this.onEndDeleteDelegate == null)) {
                this.onEndDeleteDelegate = new EndOperationDelegate(this.OnEndDelete);
            }
            if ((this.onDeleteCompletedDelegate == null)) {
                this.onDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDelegate, new object[] {
                        mNZ}, this.onEndDeleteDelegate, this.onDeleteCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> GetAll() {
            return base.Channel.GetAll();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAll(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAll(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> EndGetAll(System.IAsyncResult result) {
            return base.Channel.EndGetAll(result);
        }
        
        private System.IAsyncResult OnBeginGetAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAll(callback, asyncState);
        }
        
        private object[] OnEndGetAll(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> retVal = this.EndGetAll(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllCompleted(object state) {
            if ((this.GetAllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllCompleted(this, new GetAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllAsync() {
            this.GetAllAsync(null);
        }
        
        public void GetAllAsync(object userState) {
            if ((this.onBeginGetAllDelegate == null)) {
                this.onBeginGetAllDelegate = new BeginOperationDelegate(this.OnBeginGetAll);
            }
            if ((this.onEndGetAllDelegate == null)) {
                this.onEndGetAllDelegate = new EndOperationDelegate(this.OnEndGetAll);
            }
            if ((this.onGetAllCompletedDelegate == null)) {
                this.onGetAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllDelegate, null, this.onEndGetAllDelegate, this.onGetAllCompletedDelegate, userState);
        }
        
        public Inflexion2.Domain.PagedElements<Needel.Common.Application.Dtos.MNZDto> GetPaged(Inflexion2.Application.SpecificationDto specificationDto) {
            return base.Channel.GetPaged(specificationDto);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPaged(Inflexion2.Application.SpecificationDto specificationDto, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPaged(specificationDto, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Inflexion2.Domain.PagedElements<Needel.Common.Application.Dtos.MNZDto> EndGetPaged(System.IAsyncResult result) {
            return base.Channel.EndGetPaged(result);
        }
        
        private System.IAsyncResult OnBeginGetPaged(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Inflexion2.Application.SpecificationDto specificationDto = ((Inflexion2.Application.SpecificationDto)(inValues[0]));
            return this.BeginGetPaged(specificationDto, callback, asyncState);
        }
        
        private object[] OnEndGetPaged(System.IAsyncResult result) {
            Inflexion2.Domain.PagedElements<Needel.Common.Application.Dtos.MNZDto> retVal = this.EndGetPaged(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPagedCompleted(object state) {
            if ((this.GetPagedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPagedCompleted(this, new GetPagedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPagedAsync(Inflexion2.Application.SpecificationDto specificationDto) {
            this.GetPagedAsync(specificationDto, null);
        }
        
        public void GetPagedAsync(Inflexion2.Application.SpecificationDto specificationDto, object userState) {
            if ((this.onBeginGetPagedDelegate == null)) {
                this.onBeginGetPagedDelegate = new BeginOperationDelegate(this.OnBeginGetPaged);
            }
            if ((this.onEndGetPagedDelegate == null)) {
                this.onEndGetPagedDelegate = new EndOperationDelegate(this.OnEndGetPaged);
            }
            if ((this.onGetPagedCompletedDelegate == null)) {
                this.onGetPagedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPagedCompleted);
            }
            base.InvokeAsync(this.onBeginGetPagedDelegate, new object[] {
                        specificationDto}, this.onEndGetPagedDelegate, this.onGetPagedCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> DeleteAll() {
            return base.Channel.DeleteAll();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteAll(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteAll(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> EndDeleteAll(System.IAsyncResult result) {
            return base.Channel.EndDeleteAll(result);
        }
        
        private System.IAsyncResult OnBeginDeleteAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginDeleteAll(callback, asyncState);
        }
        
        private object[] OnEndDeleteAll(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> retVal = this.EndDeleteAll(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteAllCompleted(object state) {
            if ((this.DeleteAllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteAllCompleted(this, new DeleteAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAllAsync() {
            this.DeleteAllAsync(null);
        }
        
        public void DeleteAllAsync(object userState) {
            if ((this.onBeginDeleteAllDelegate == null)) {
                this.onBeginDeleteAllDelegate = new BeginOperationDelegate(this.OnBeginDeleteAll);
            }
            if ((this.onEndDeleteAllDelegate == null)) {
                this.onEndDeleteAllDelegate = new EndOperationDelegate(this.OnEndDeleteAll);
            }
            if ((this.onDeleteAllCompletedDelegate == null)) {
                this.onDeleteAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteAllCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteAllDelegate, null, this.onEndDeleteAllDelegate, this.onDeleteAllCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> GetAllExceptThis(Needel.Common.Application.Dtos.MNZDto mNZDto) {
            return base.Channel.GetAllExceptThis(mNZDto);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllExceptThis(Needel.Common.Application.Dtos.MNZDto mNZDto, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllExceptThis(mNZDto, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> EndGetAllExceptThis(System.IAsyncResult result) {
            return base.Channel.EndGetAllExceptThis(result);
        }
        
        private System.IAsyncResult OnBeginGetAllExceptThis(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Needel.Common.Application.Dtos.MNZDto mNZDto = ((Needel.Common.Application.Dtos.MNZDto)(inValues[0]));
            return this.BeginGetAllExceptThis(mNZDto, callback, asyncState);
        }
        
        private object[] OnEndGetAllExceptThis(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> retVal = this.EndGetAllExceptThis(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllExceptThisCompleted(object state) {
            if ((this.GetAllExceptThisCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllExceptThisCompleted(this, new GetAllExceptThisCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllExceptThisAsync(Needel.Common.Application.Dtos.MNZDto mNZDto) {
            this.GetAllExceptThisAsync(mNZDto, null);
        }
        
        public void GetAllExceptThisAsync(Needel.Common.Application.Dtos.MNZDto mNZDto, object userState) {
            if ((this.onBeginGetAllExceptThisDelegate == null)) {
                this.onBeginGetAllExceptThisDelegate = new BeginOperationDelegate(this.OnBeginGetAllExceptThis);
            }
            if ((this.onEndGetAllExceptThisDelegate == null)) {
                this.onEndGetAllExceptThisDelegate = new EndOperationDelegate(this.OnEndGetAllExceptThis);
            }
            if ((this.onGetAllExceptThisCompletedDelegate == null)) {
                this.onGetAllExceptThisCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllExceptThisCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllExceptThisDelegate, new object[] {
                        mNZDto}, this.onEndGetAllExceptThisDelegate, this.onGetAllExceptThisCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> GetAllExceptThese(System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> mNZs) {
            return base.Channel.GetAllExceptThese(mNZs);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllExceptThese(System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> mNZs, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllExceptThese(mNZs, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> EndGetAllExceptThese(System.IAsyncResult result) {
            return base.Channel.EndGetAllExceptThese(result);
        }
        
        private System.IAsyncResult OnBeginGetAllExceptThese(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> mNZs = ((System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto>)(inValues[0]));
            return this.BeginGetAllExceptThese(mNZs, callback, asyncState);
        }
        
        private object[] OnEndGetAllExceptThese(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> retVal = this.EndGetAllExceptThese(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllExceptTheseCompleted(object state) {
            if ((this.GetAllExceptTheseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllExceptTheseCompleted(this, new GetAllExceptTheseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllExceptTheseAsync(System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> mNZs) {
            this.GetAllExceptTheseAsync(mNZs, null);
        }
        
        public void GetAllExceptTheseAsync(System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> mNZs, object userState) {
            if ((this.onBeginGetAllExceptTheseDelegate == null)) {
                this.onBeginGetAllExceptTheseDelegate = new BeginOperationDelegate(this.OnBeginGetAllExceptThese);
            }
            if ((this.onEndGetAllExceptTheseDelegate == null)) {
                this.onEndGetAllExceptTheseDelegate = new EndOperationDelegate(this.OnEndGetAllExceptThese);
            }
            if ((this.onGetAllExceptTheseCompletedDelegate == null)) {
                this.onGetAllExceptTheseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllExceptTheseCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllExceptTheseDelegate, new object[] {
                        mNZs}, this.onEndGetAllExceptTheseDelegate, this.onGetAllExceptTheseCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> GetFiltered(Inflexion2.Application.SpecificationDto specificationDto) {
            return base.Channel.GetFiltered(specificationDto);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetFiltered(Inflexion2.Application.SpecificationDto specificationDto, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFiltered(specificationDto, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> EndGetFiltered(System.IAsyncResult result) {
            return base.Channel.EndGetFiltered(result);
        }
        
        private System.IAsyncResult OnBeginGetFiltered(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Inflexion2.Application.SpecificationDto specificationDto = ((Inflexion2.Application.SpecificationDto)(inValues[0]));
            return this.BeginGetFiltered(specificationDto, callback, asyncState);
        }
        
        private object[] OnEndGetFiltered(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Needel.Common.Application.Dtos.MNZDto> retVal = this.EndGetFiltered(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFilteredCompleted(object state) {
            if ((this.GetFilteredCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFilteredCompleted(this, new GetFilteredCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFilteredAsync(Inflexion2.Application.SpecificationDto specificationDto) {
            this.GetFilteredAsync(specificationDto, null);
        }
        
        public void GetFilteredAsync(Inflexion2.Application.SpecificationDto specificationDto, object userState) {
            if ((this.onBeginGetFilteredDelegate == null)) {
                this.onBeginGetFilteredDelegate = new BeginOperationDelegate(this.OnBeginGetFiltered);
            }
            if ((this.onEndGetFilteredDelegate == null)) {
                this.onEndGetFilteredDelegate = new EndOperationDelegate(this.OnEndGetFiltered);
            }
            if ((this.onGetFilteredCompletedDelegate == null)) {
                this.onGetFilteredCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFilteredCompleted);
            }
            base.InvokeAsync(this.onBeginGetFilteredDelegate, new object[] {
                        specificationDto}, this.onEndGetFilteredDelegate, this.onGetFilteredCompletedDelegate, userState);
        }
    }
}
