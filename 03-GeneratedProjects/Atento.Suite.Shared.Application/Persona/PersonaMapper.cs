//-----------------------------------------------------------------------
// <copyright file="Persona" company="Atento">
//     Copyright (c) 2016. Atento. All Rights Reserved.
//     Copyright (c) 2016. Atento. Todos los derechos reservados.
//
//     .en This code has been generated by a tool, please don't modify this file or  
//     will lost all your modifications in the process to regenerate.
//      The original t4 template to get this file is " ApplicationEntityMapperCT.tt" with "public class ApplicationEntityMapperCT : Template"
// 
//     .es Este código ha sido generado por una herramienta, por favor no modifique este fichero
//     o perdera las modificaciones al regenerar este fichero.
//      La plantilla con que se ha generado este fichero es "ApplicationEntityMapperCT.tt" con "public class ApplicationEntityMapperCT : Template"
//
// </copyright>
//-----------------------------------------------------------------------

namespace Atento.Suite.Shared.Application
{

#region sharedKernels references
#endregion

    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;

    using Atento.Suite.Shared.Application.Dtos;
    using Atento.Suite.Shared.Domain;

    using Inflexion2;

    /// <summary>
    /// Clase pública encargada de mapear los datos de una entidad <see cref="PersonaMapper"/>.
    /// </summary>
    /// <remarks>
    /// Mapea los datos del Dto <see cref="PersonaDto"/> con una entidad <see cref="PersonaMapper"/>.
    /// </remarks>
    public class PersonaMapper : IPersonaMapper
    {
        #region CONSTRUCTORS

        /// <summary>
        /// Inicializa una nueva instancia de la clase <see cref="PersonaMapper"/>.
        /// </summary>
        /// <remarks>
        /// Sin comentarios especiales.
        /// </remarks>
        public PersonaMapper()
        {
        } // PersonaMapper Constructor

        #endregion

        #region FUNCTIONS

          /// <summary>
          /// Función pública que mapea las entidades para devolver el
          /// correspondiente Dto.
          /// </summary>
          /// <remarks>
          /// Se encarga de mapear objetos <see cref="Persona"/> 
          /// devolviendo un objeto <see cref="PersonaDto"/>.
          /// </remarks>
          /// <param name="entityPersona">
          /// Objeto de la entidad <see cref="Persona"/>.
          /// </param>
          /// <exception cref="System.ArgumentNullException">
          /// Lanzada cuando el valor de <c>entityPersona</c> es null.
          /// </exception>
          /// <returns>
          /// Devuelve un objeto de tipo <see cref="PersonaDto"/> 
          /// con los datos mapeados.
          /// </returns>
          public PersonaDto EntityMapping(IPersona entityPersona)
          {
            // Comprobamos el valor del argumento de entrada.
            if (entityPersona == null)
            {
                // Error, lanzamos la excepción.
                throw new System.ArgumentNullException("entityPersona");
            }
            else
            {
                // Objeto de respuesta.
                PersonaDto dtoPersona = new PersonaDto();
                // Mapeamos cada propiedad.
                dtoPersona.Id = entityPersona.Id;
                dtoPersona.Nombre = entityPersona.Nombre;
                dtoPersona.Juridica = entityPersona.Juridica;
                dtoPersona.Direccion = entityPersona.Direccion;
                dtoPersona.Calle = entityPersona.Calle;
                dtoPersona.CP = entityPersona.CP;
                dtoPersona.Provincia = entityPersona.Provincia;
                dtoPersona.Comunidad = entityPersona.Comunidad;
                dtoPersona.Pais = entityPersona.Pais;
                dtoPersona.Matricula = entityPersona.Matricula;
                dtoPersona.Codigo = entityPersona.Codigo;
                dtoPersona.Sector = entityPersona.Sector;
                dtoPersona.Site = entityPersona.Site;
                dtoPersona.LogoImagen = entityPersona.LogoImagen;
                dtoPersona.Telefono = entityPersona.Telefono;
                dtoPersona.Fax = entityPersona.Fax;
                dtoPersona.Mobil = entityPersona.Mobil;
                dtoPersona.Atributte1 = entityPersona.Atributte1;
                dtoPersona.FormaJuridica = entityPersona.FormaJuridica;
                dtoPersona.Fisica = entityPersona.Fisica;
                dtoPersona.Genero = entityPersona.Genero;
                // Devolvemos el resultado.
                return dtoPersona;
            }
          } // EntityMapping
        
        #endregion


    } // end class PersonaMapper
} //  Atento.Suite.Shared.Application


