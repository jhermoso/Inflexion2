
//-----------------------------------------------------------------------
// <copyright file="Persona" company="Atento">
//     Copyright (c) 2016. Atento. All Rights Reserved.
//     Copyright (c) 2016. Atento. Todos los derechos reservados.
//
//     .en This code has been generated by a tool, please don't modify this file or  
//     will lost all your modifications in the process to regenerate.
//      The original t4 template to get this file is " WpfEntityViewModelCT.tt" with "public class WpfEntityViewModelCT : Template"
// 
//     .es Este código ha sido generado por una herramienta, por favor no modifique este fichero
//     o perdera las modificaciones al regenerar este fichero.
//      La plantilla con que se ha generado este fichero es "WpfEntityViewModelCT.tt" con "public class WpfEntityViewModelCT : Template"
//
// </copyright>
//-----------------------------------------------------------------------

namespace Atento.Suite.Shared.FrontEnd.WpfModule
{

    #region usings   
    using System;
    using System.Collections.ObjectModel;
    using System.Windows.Input;

    using MvvmValidation;

    using Atento.Suite.Shared.Application;
    using Atento.Suite.Shared.Application.Dtos;
    using Atento.Suite.Shared.Infrastructure.Resources;
    using Atento.Suite.Shared.Application.WcfClient.PersonaServiceReference;
    #endregion

    /// <summary>
    /// .en Interaction logic for PersonaViewModel.xaml
    /// .es Logica de interación para la vista PersonaViewModel.xaml
    /// </summary>
    public partial class PersonaViewModel : Inflexion2.UX.WPF.MVVM.CRUD.CrudViewModel<PersonaDto, Int32>
    {
        #region CONSTRUCTORS
        /// <summary>
        /// .en Initialize a new instace for the class <see cref="T:PersonaViewModel"/>.
        /// .es Inicializa una nueva instancia de la clase <see cref="T:PersonaViewModel"/>.
        /// </summary>
        public PersonaViewModel() : base()
        {
        } // PersonaViewModel Constructor

        /// <summary>
        /// Inicializa una nueva instancia de la clase <see cref="T:PersonaViewModel"/>.
        /// </summary>
        /// <param name="element">
        /// Parámetro de tipo <see cref="PersonaDto"/> que contiene la información necesaria.
        /// </param>
        public PersonaViewModel(PersonaDto element)
            : base(element)
        {
        } // PersonaViewModel Parametrized Constructor
        #endregion

        #region PROPERTIES

        /// <summary>
        /// Propiedad para establecer el Titulo de la ventana
        /// </summary>
        public override string Title
        {
            get
            {
                return SharedNeutral.PersonaAlias; 
            }
        }

        /// <summary>
        /// Test with auto property and public setter.
        /// </summary>
        public string Nombre
        {
            get
            {
                return this.ObjectElement.Nombre;
            }
            set
            {
                if (this.ObjectElement.Nombre != value)
                {
                    this.ObjectElement.Nombre = value;
                    this.RaisePropertyChanged(() => this.Nombre);
                }
            }
        } // Nombre

        /// <summary>
        /// 
        /// </summary>
        public bool Juridica
        {
            get
            {
                return this.ObjectElement.Juridica;
            }
            set
            {
                if (this.ObjectElement.Juridica != value)
                {
                    this.ObjectElement.Juridica = value;
                    this.RaisePropertyChanged(() => this.Juridica);
                }
            }
        } // Juridica

        /// <summary>
        /// 
        /// </summary>
        public string Direccion
        {
            get
            {
                return this.ObjectElement.Direccion;
            }
            set
            {
                if (this.ObjectElement.Direccion != value)
                {
                    this.ObjectElement.Direccion = value;
                    this.RaisePropertyChanged(() => this.Direccion);
                }
            }
        } // Direccion

        /// <summary>
        /// 
        /// </summary>
        public string Calle
        {
            get
            {
                return this.ObjectElement.Calle;
            }
            set
            {
                if (this.ObjectElement.Calle != value)
                {
                    this.ObjectElement.Calle = value;
                    this.RaisePropertyChanged(() => this.Calle);
                }
            }
        } // Calle

        /// <summary>
        /// 
        /// </summary>
        public string CP
        {
            get
            {
                return this.ObjectElement.CP;
            }
            set
            {
                if (this.ObjectElement.CP != value)
                {
                    this.ObjectElement.CP = value;
                    this.RaisePropertyChanged(() => this.CP);
                }
            }
        } // CP

        /// <summary>
        /// 
        /// </summary>
        public string Provincia
        {
            get
            {
                return this.ObjectElement.Provincia;
            }
            set
            {
                if (this.ObjectElement.Provincia != value)
                {
                    this.ObjectElement.Provincia = value;
                    this.RaisePropertyChanged(() => this.Provincia);
                }
            }
        } // Provincia

        /// <summary>
        /// 
        /// </summary>
        public string Comunidad
        {
            get
            {
                return this.ObjectElement.Comunidad;
            }
            set
            {
                if (this.ObjectElement.Comunidad != value)
                {
                    this.ObjectElement.Comunidad = value;
                    this.RaisePropertyChanged(() => this.Comunidad);
                }
            }
        } // Comunidad

        /// <summary>
        /// 
        /// </summary>
        public string Pais
        {
            get
            {
                return this.ObjectElement.Pais;
            }
            set
            {
                if (this.ObjectElement.Pais != value)
                {
                    this.ObjectElement.Pais = value;
                    this.RaisePropertyChanged(() => this.Pais);
                }
            }
        } // Pais

        /// <summary>
        /// 
        /// </summary>
        public string Matricula
        {
            get
            {
                return this.ObjectElement.Matricula;
            }
            set
            {
                if (this.ObjectElement.Matricula != value)
                {
                    this.ObjectElement.Matricula = value;
                    this.RaisePropertyChanged(() => this.Matricula);
                }
            }
        } // Matricula

        /// <summary>
        /// 
        /// </summary>
        public string Codigo
        {
            get
            {
                return this.ObjectElement.Codigo;
            }
            set
            {
                if (this.ObjectElement.Codigo != value)
                {
                    this.ObjectElement.Codigo = value;
                    this.RaisePropertyChanged(() => this.Codigo);
                }
            }
        } // Codigo

        /// <summary>
        /// 
        /// </summary>
        public string Sector
        {
            get
            {
                return this.ObjectElement.Sector;
            }
            set
            {
                if (this.ObjectElement.Sector != value)
                {
                    this.ObjectElement.Sector = value;
                    this.RaisePropertyChanged(() => this.Sector);
                }
            }
        } // Sector

        /// <summary>
        /// 
        /// </summary>
        public string Site
        {
            get
            {
                return this.ObjectElement.Site;
            }
            set
            {
                if (this.ObjectElement.Site != value)
                {
                    this.ObjectElement.Site = value;
                    this.RaisePropertyChanged(() => this.Site);
                }
            }
        } // Site

        /// <summary>
        /// 
        /// </summary>
        public string LogoImagen
        {
            get
            {
                return this.ObjectElement.LogoImagen;
            }
            set
            {
                if (this.ObjectElement.LogoImagen != value)
                {
                    this.ObjectElement.LogoImagen = value;
                    this.RaisePropertyChanged(() => this.LogoImagen);
                }
            }
        } // LogoImagen

        /// <summary>
        /// 
        /// </summary>
        public string Telefono
        {
            get
            {
                return this.ObjectElement.Telefono;
            }
            set
            {
                if (this.ObjectElement.Telefono != value)
                {
                    this.ObjectElement.Telefono = value;
                    this.RaisePropertyChanged(() => this.Telefono);
                }
            }
        } // Telefono

        /// <summary>
        /// 
        /// </summary>
        public string Fax
        {
            get
            {
                return this.ObjectElement.Fax;
            }
            set
            {
                if (this.ObjectElement.Fax != value)
                {
                    this.ObjectElement.Fax = value;
                    this.RaisePropertyChanged(() => this.Fax);
                }
            }
        } // Fax

        /// <summary>
        /// 
        /// </summary>
        public string Mobil
        {
            get
            {
                return this.ObjectElement.Mobil;
            }
            set
            {
                if (this.ObjectElement.Mobil != value)
                {
                    this.ObjectElement.Mobil = value;
                    this.RaisePropertyChanged(() => this.Mobil);
                }
            }
        } // Mobil

        /// <summary>
        /// 
        /// </summary>
        public string Atributte1
        {
            get
            {
                return this.ObjectElement.Atributte1;
            }
            set
            {
                if (this.ObjectElement.Atributte1 != value)
                {
                    this.ObjectElement.Atributte1 = value;
                    this.RaisePropertyChanged(() => this.Atributte1);
                }
            }
        } // Atributte1

        /// <summary>
        /// 
        /// </summary>
        public string FormaJuridica
        {
            get
            {
                return this.ObjectElement.FormaJuridica;
            }
            set
            {
                if (this.ObjectElement.FormaJuridica != value)
                {
                    this.ObjectElement.FormaJuridica = value;
                    this.RaisePropertyChanged(() => this.FormaJuridica);
                }
            }
        } // FormaJuridica

        /// <summary>
        /// 
        /// </summary>
        public bool Fisica
        {
            get
            {
                return this.ObjectElement.Fisica;
            }
            set
            {
                if (this.ObjectElement.Fisica != value)
                {
                    this.ObjectElement.Fisica = value;
                    this.RaisePropertyChanged(() => this.Fisica);
                }
            }
        } // Fisica

        /// <summary>
        /// 
        /// </summary>
        public string Genero
        {
            get
            {
                return this.ObjectElement.Genero;
            }
            set
            {
                if (this.ObjectElement.Genero != value)
                {
                    this.ObjectElement.Genero = value;
                    this.RaisePropertyChanged(() => this.Genero);
                }
            }
        } // Genero

        #endregion
        
        #region Methods
        /// <summary>
        /// Método encargado de recuperar los datos de una entidad mediante su identificador.
        /// </summary>
        /// <param name="identifier">
        /// Parámetro que indica el identificador de la entidad que se va a recuperar.
        /// </param>
        /// <returns>
        /// Devuelve el objeto Dto <see cref="PersonaDto"/> correspondiente.
        /// </returns>
        public override PersonaDto GetById(Int32 identifier)
        {
            PersonaServiceClient serviceClient = new PersonaServiceClient();
           // Consumimos el servicio y obtenemos los datos.
            var personaDto = serviceClient.GetById(identifier );
            // Devolvemos la respuesta.
            return personaDto;
        } // GetById

        /// <summary>
        /// Método encargado de crear o actualizar una entidad de tipo Persona.
        /// </summary>
        /// <param name="parameter">
        /// Parámetro con información adicional.
        /// </param>
        public override void OnSaveRecord(object parameter)
        {
            if (this.IsActive &&
                    (this.ObjectElement != null))
            {
                
                PersonaServiceClient serviceClient = new PersonaServiceClient();

                if (this.ObjectElement.Id == default(Int32) )
                {
                    serviceClient.Create(this.ObjectElement);
                    this.MessageBoxService.Show("Entidad agregada");
                }
                else
                {
                    bool response = serviceClient.Update(this.ObjectElement);
                    this.MessageBoxService.Show("Entidad actualizada");
                }
            }
        } // OnSaveRecord

        // si esta entidad necesita cargar otras entidades o colecciones es aqui donde se implementan los metodos de carga.

        #endregion
        #region Protected Methods

        protected override void SetupValidation(MvvmValidation.ValidationHelper validation)
        {
            //ejemplo de validacion
            //// Validación de hora de Inicio
            //validation.AddRule(
            //                   () => this.HoraInicio,
            //                   () => RuleResult.Assert(
            //                                           this.HoraInicio != null,
            //                                           "La hora de inicio de emisión es requerida"));

        }

        public override void OnNavigatedTo(Microsoft.Practices.Prism.Regions.NavigationContext navigationContext)
        {
            //es aqui donde se invoca a los metodos de carga de las entidades adicionales.

            base.OnNavigatedTo(navigationContext);
        }
        #endregion
    }

} //  Atento.Suite.Shared.FrontEnd.WpfModule
