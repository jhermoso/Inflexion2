#region Copyright info
//-----------------------------------------------------------------------
// <copyright file="User" company="Company">
//     Copyright (c) 2020. Company. All Rights Reserved.
//     Copyright (c) 2020. Company. Todos los derechos reservados.
//
//     .en This code has been generated by a tool, please don't modify this file or  
//     you will lost all your modifications in the next regeneration.
//      The original t4 template to get this file is " ApplicationEntityDtoCT.tt" with "public class ApplicationEntityDtoCT : Template"
// 
//     .es Este código ha sido generado por una herramienta, por favor no modifique este fichero
//     o perdera las modificaciones al regenerar este fichero.
//      La plantilla con que se ha generado este fichero es "ApplicationEntityDtoCT.tt" con "public class ApplicationEntityDtoCT : Template"
//
// </copyright>
//-----------------------------------------------------------------------
#endregion

namespace Needel.Common.Application.Dtos
{

    #region SharedKernel usings
    #endregion

    #region usings
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
    using Inflexion2.Application;//.DataTransfer.Base;

    using Needel.Common.Domain.Data;

    using System.Collections.ObjectModel;
    #endregion

    /// <summary>
    /// Clase que representa a la entidad <see cref="UserDto"/>.
    /// </summary>
    /// <remarks>
    /// Crea un objeto <see cref="UserDto"/>.
    /// </remarks>
    // no tiene subclases
    // no tiene superclases
    [DataContract]
    public  class UserDto : BaseEntityDataTransferObject<Int32> 
    {
        #region CONSTRUCTORS
        
        /// <summary>
        /// Inicializa una nueva instancia de la clase <see cref="UserDto"/>.
        /// </summary>
        /// <remarks>
        /// Constructor de la clase <see cref="UserDto"/>.
        /// </remarks>
        public UserDto()
        {
            this.Addresses = new System.Collections.Generic.List<AddressDto>();
        } // UserDto Constructor

        #endregion

        #region PROPERTIES

        /// <summary>
        /// Variable privada que identifica Name.
        /// </summary>
        /// <remarks>
        /// Field to explain the meaning of this key
        /// </remarks>
        [DataMember]
        public string Name {get; set;}

        // Este campo proviene de una relación de tipo Agregación y Asociación
        /// <summary>
        /// Propiedad que almacena el valor de UserDepartment.
        /// </summary>
        /// <remarks>
        /// Propiedad proveniente del rol source de una relación.
        /// </remarks>
        [DataMember]
        public DepartmentDto UserDepartment {get; set;} /*entity from source asociation, target rol*/

        /// <summary>
        /// Campo privado para almacenar la colección de  Addresses.
        /// </summary>
        /// <remarks>
        /// Nos permite establecer y obtener Addresses.
        /// Propiedad proveniente del rol target de una relación.
        /// </remarks>
        [DataMember]
        public System.Collections.Generic.List<AddressDto> Addresses {get; set;}/*from targets*/
        #endregion

        #region Actual IClonable implementation

        /// <summary>
        /// Actual IClonable implementation to help the IEditableObject Implementation 
        /// </summary>
        /// <returns></returns>
        public override object Clone()
        {
            var obj = new UserDto();
            obj.Id = this.Id;
            obj.Name = this.Name;

            //Parents from sources
            obj.UserDepartment = (this.UserDepartment != null) ? (DepartmentDto)this.UserDepartment.Clone() : null;

            //Children from targets
            if (this.Addresses != null && this.Addresses.Count > 0)
            {
                obj.Addresses = new System.Collections.Generic.List<AddressDto>();
                foreach (var item in this.Addresses)
                {
                    obj.Addresses.Add((AddressDto)item.Clone());
                }                
            }

            return obj;
        }
        #endregion

    } // end class UserDto
} //  Needel.Common.Application.Dtos

