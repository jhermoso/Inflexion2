
#region Copyright info
//-----------------------------------------------------------------------
// <copyright file="User" company="Company">
//     Copyright (c) 2020. Company. All Rights Reserved.
//     Copyright (c) 2020. Company. Todos los derechos reservados.
//
//     .en This code has been generated by a tool, please don't modify this file or  
//     you will lost all your modifications in the next regeneration.
//      The original t4 template to get this file is " ModuleTaskBarVMCT.tt" with "public class ModuleTaskBarVMCT : Template"
// 
//     .es Este código ha sido generado por una herramienta, por favor no modifique este fichero
//     o perdera las modificaciones al regenerar este fichero.
//      La plantilla con que se ha generado este fichero es "ModuleTaskBarVMCT.tt" con "public class ModuleTaskBarVMCT : Template"
//
// </copyright>
//-----------------------------------------------------------------------
#endregion

namespace Needel.Common.FrontEnd.WpfModule
{

    #region usings
    using Inflexion2.UX.WPF.MVVM;
    using Inflexion2.UX.WPF.MVVM.Commands;
    using Inflexion2.UX.WPF.MVVM.ViewModels; 
    using Needel.Common.Domain.Data;
    #endregion

    /// <summary>
    /// ViewModel para el boton del bounded context Common.
    /// </summary>
   public sealed class CommonModuleTaskBarViewModel : TaskbarViewModel
    {
        string[] regions;
        string[] views;

        #region Constructor
        /// <summary>
        /// Inicializa una nueva instancia de la clase <see cref="T:CommonModuleTaskBarViewModel"/>.
        /// </summary>
          ///<remarks>
          ///Constructor de la clase <see cref="T:CommonModuleTaskBarViewModel"/>.
        ///</remarks>
        public CommonModuleTaskBarViewModel()
            : base(typeof(Needel.Common.FrontEnd.WpfModule.CommonModule))
        {
            //this.TaskButtonImage = "../Views/Images/image.png";
            this.TaskButtonText = "Common";

            this.ShowModuleNavigationView = new NavigationCommand<CommonModuleTaskBarViewModel>(
                this, RegionNames.NavigationRegion, typeof(CommonModuleNavigationView).FullName, this.NavigationCompleted);

            regions = new string[] { RegionNames.NavigationRegion, RegionNames.ToolbarRegion };
            views = new string[] { typeof(CommonModuleNavigationView).FullName, typeof(CommonModuleRibbonTab).FullName };

            //this.ShowModuleRibbonView = new MultipleViewsNavigationCommand<CommonModuleTaskBarViewModel>(
            //this, RegionNames.ToolbarRegion, typeof(CommonRibbonTab).FullName, this.NavigationCompleted);

            this.ShowModuleRibbonView = new MultipleViewsNavigationCommand<CommonModuleTaskBarViewModel>( this, regions, views, this.NavigationCompleted);
       
        }

        #endregion
    } // end class 

} //  Needel.Common.FrontEnd.WpfModule
