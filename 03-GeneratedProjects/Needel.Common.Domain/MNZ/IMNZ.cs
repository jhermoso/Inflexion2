#region Copyright info
//-----------------------------------------------------------------------
// <copyright file="MNZ" company="Company">
//     Copyright (c) 2020. Company. All Rights Reserved.
//     Copyright (c) 2020. Company. Todos los derechos reservados.
//
//     .en This code has been generated by a tool, please don't modify this file or  
//     you will lost all your modifications in the next regeneration.
//      The original t4 template to get this file is " DomainCoreIEntityCT.tt" with "public class DomainCoreIEntityCT : Template"
// 
//     .es Este código ha sido generado por una herramienta, por favor no modifique este fichero
//     o perdera las modificaciones al regenerar este fichero.
//      La plantilla con que se ha generado este fichero es "DomainCoreIEntityCT.tt" con "public class DomainCoreIEntityCT : Template"
//
// </copyright>
//-----------------------------------------------------------------------
#endregion

namespace Needel.Common.Domain
{


    #region Usings
    using System;
    using Needel.Common.Domain.Data;
    using Inflexion2.Domain;
    using Inflexion2;
    
    #endregion

    /// <summary>
    /// .en Interfaz to identify  objeto valor of type MNZ in the application.
    /// .es Interfaz que identifica un objeto valor de tipo MNZ de la aplicación.
    /// 
    /// </summary>
    /// <remarks>
    /// .en Interfaz fora value object implemented by MNZ/>.
    /// .es Interfaz que representa un objeto valor implementado enMNZ/>.
    /// </remarks>
    public interface IMNZ : Inflexion2.Domain.IValueObject  , IEquatable<IMNZ>, IComparable<MNZ>
    {

        #region Properties
        /// <summary>
        /// .en Public property EntityM.
        /// .es Propiedad pública  EntityM.
        /// </summary>
        /// <remarks>
        /// .en (SOURCE) This property comes from a relationship Composición y Asociación
        /// .es (SOURCE)Esta propiedad proviene de una relación de tipo Composición y Asociación
        /// Nos permite establecer y obtener EntityM.
        /// </remarks>
        /// <value>
        /// .es Valor que es utilizado para establecer y obtener EntityM.
        /// </value>
        EntityM EntityM { get; }

        /// <summary>
        /// field to help the mapping with the orm this object value
        /// </summary>
        Int32 EntityM_Id { get; }

        /// <summary>
        /// .en Public property EntityN.
        /// .es Propiedad pública  EntityN.
        /// </summary>
        /// <remarks>
        /// .en (SOURCE) This property comes from a relationship Composición y Asociación
        /// .es (SOURCE)Esta propiedad proviene de una relación de tipo Composición y Asociación
        /// Nos permite establecer y obtener EntityN.
        /// </remarks>
        /// <value>
        /// .es Valor que es utilizado para establecer y obtener EntityN.
        /// </value>
        EntityN EntityN { get; }

        /// <summary>
        /// field to help the mapping with the orm this object value
        /// </summary>
        Int32 EntityN_Id { get; }

        /// <summary>
        /// .en Public property EntityZ.
        /// .es Propiedad pública  EntityZ.
        /// </summary>
        /// <remarks>
        /// .en (SOURCE) This property comes from a relationship Composición y Asociación
        /// .es (SOURCE)Esta propiedad proviene de una relación de tipo Composición y Asociación
        /// Nos permite establecer y obtener EntityZ.
        /// </remarks>
        /// <value>
        /// .es Valor que es utilizado para establecer y obtener EntityZ.
        /// </value>
        EntityZ EntityZ { get; }

        /// <summary>
        /// field to help the mapping with the orm this object value
        /// </summary>
        Int32 EntityZ_Id { get; }

   
        #endregion

        #region Methods

        /// <summary>
        /// .es Método encargado de establecer un nuevo valor para la propiedad EntityM.
        /// </summary>
        /// <value>
        /// .es Parametro con el que establecemos el nuevo valor de EntityM.
        /// </value>
        MNZ SetEntityM ( EntityM entityM );


        /// <summary>
        /// .es Método encargado de establecer un nuevo valor para la propiedad EntityN.
        /// </summary>
        /// <value>
        /// .es Parametro con el que establecemos el nuevo valor de EntityN.
        /// </value>
        MNZ SetEntityN ( EntityN entityN );


        /// <summary>
        /// .es Método encargado de establecer un nuevo valor para la propiedad EntityZ.
        /// </summary>
        /// <value>
        /// .es Parametro con el que establecemos el nuevo valor de EntityZ.
        /// </value>
        MNZ SetEntityZ ( EntityZ entityZ );

        #endregion

    } // End class MNZ.

} // End NameSpace Needel.Common.Domain.
