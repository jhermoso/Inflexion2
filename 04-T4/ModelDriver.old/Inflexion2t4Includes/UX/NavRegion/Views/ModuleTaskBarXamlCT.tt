<#+
public class ModuleTaskBarXamlCT : Template
{
    // varibles de la plantilla (coinciden con los parametros)
    public ClassBaseContext cbc; public string projectNamespace; public ITree<BoundedContextMetadata> Skt;
    // constructor de la plantilla con parametros
    public ModuleTaskBarXamlCT(ClassBaseContext  cbc, string projectNamespace, ITree<BoundedContextMetadata> Skt)
        {this.cbc= cbc; this.projectNamespace = projectNamespace;  this.Skt = Skt; }

    public override string TransformText()
    {
        // conceptos propios del projecto en curso
        ProjectConcepts prjCon = new ProjectConcepts(  cbc, projectNamespace, Skt);
#>
<UserControl x:Class="<#= cbc.diagram.RootNameSpace #>.<#= prjCon.boundedContextName #>.FrontEnd.WpfModule.<#= T4Help.SecureName(prjCon.boundedContextName) #>ModuleTaskBarView"
             x:Name="<#= cbc.pascalSecureEntityName #>ModuleTaskBarView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:tb="clr-namespace:Inflexion2.UX.WPF.Controls.Controls.ToggleButton;assembly=Inflexion2.UX.WPF.Controls"
             mc:Ignorable="d" >

    <tb:LockableToggleButton Content="{Binding TaskButtonText}" Tag="ModuleExample"                   
                  IsChecked="{Binding IsChecked}" 
                  Command="{Binding ShowModuleRibbonView}" 
                  LockToggle="{Binding IsChecked}" />
</UserControl>
<#+
        return this.GenerationEnvironment.ToString();
    } // end de TransformText
}// end template
#>
