<#+
public class ComposedDTOs : Template
{
    // varibles de la plantilla (coinciden con los parametros)
    ClassBaseContext cbc; string projectNamespace; ITree<BoundedContextMetadata> Skt;
    // constructor de la plantilla con parametros
    public ComposedDTOs(ClassBaseContext  cbc, string projectNamespace, ITree<BoundedContextMetadata> Skt)
        {this.cbc= cbc; this.projectNamespace = projectNamespace;  this.Skt = Skt; }

    public override string TransformText()
    {
        // conceptos propios del projecto en curso
        ProjectConcepts prjCon = new ProjectConcepts(  cbc, projectNamespace, Skt);
        string secureBCName = T4Help.SecureName(prjCon.boundedContextName);
        

        StringBuilder typeProperty = new StringBuilder();
        StringBuilder nameProperty = new StringBuilder();

        System.Collections.Generic.IEnumerable<kayak.MoneyGen.Association> propertyAssociationSources = cbc.propertyAssociationSources;
        var mandatoryPropertyFromSources = cbc.mandatoryPropertyFromSources;
        var entidad   = cbc.entity;
        var centinela = cbc.entity;

        string EntityParamsCreate  = "";
        string EntityParamsCreate2 = "";

        StringBuilder prefijoBase = new StringBuilder().Append(cbc.camelSecureEntityName).Append("Dto."); // Este prefijo es acumulativo hacia la raiz de la taxonomia.
        StringBuilder prefijo = new StringBuilder();

#>
                        #region obtención de las entidades y objetos valor desde el dto.
<#+ 
    do
    {
        centinela  = entidad;
        foreach (var property in mandatoryPropertyFromSources)
            {
             if((property.Source is ObjectValue)) // si es un objeto valor o un enumerado
                {
                    prefijo.Append(prefijoBase.ToString()).Append(T4Help.SecureName(property.TargetRolName)).Append(".");
                    // obtenemos el tipo de la propiedad

                    typeProperty.Append("I");  // Por defecto cuando incluimos un tipo si este se deriva de una entidad u objeto valor relacionado hacemos referencia a su interface. TODO: CONVERTIR ESTO EN UNA OPCION PARAMETRIZADA
                    typeProperty.Append(property.Source.Name); // El tipo es el nombre de la entidad target
                    if (IsDerived(property.Source))
                    {
        
                        EntityParamsCreate = GetConstructorParametersStringTaxonomi(
                            cbc.diagram.TreeApp,                        /* Arbol de contextos limitados */
                            property.Source,                            /* entidad */
                            cbc.diagram.IdKind.Equals("Autonumerical"), /* tipo id */
                            SelectionCriteriaAttributes.Mandatory,      /* Selección de criterios */
                            80,                                         /* Longitud máxima para activar el salto de parametros */
                            false,                                      /* Incluir el tipo del parametro. Por ejemplo:incluye string, int etc*/
                            cbc.spaceformatcounter+23,                  /* Indentación de los parametros cuando se salta */
                            false,                                      /* incluirDefaultValues */
                            false,                                      /* incluirId */
                            false,                                      /* incluirTargetAssociations */
                            false,                                      /* incluirSourceAssociations */
                            true,                                       /* pascalCase */
                            prefijo.ToString(),                         /* prefijo */
                            ""                                          /* sufijo */
                                                                                    );
        
                        EntityParamsCreate2 = GetConstructorParametersStringTaxonomi(
                            cbc.diagram.TreeApp,                        /* Arbol de contextos limitados */
                            property.Source,                                 /* entidad */
                            cbc.diagram.IdKind.Equals("Autonumerical"), /* tipo id */
                            SelectionCriteriaAttributes.Any,      /* Selección de criterios */
                            200,                                         /* Longitud máxima para activar el salto de parametros */
                            false,                                      /* Incluir el tipo del parametro. Por ejemplo:incluye string, int etc*/
                            cbc.spaceformatcounter+23,                  /* Indentación de los parametros cuando se salta */
                            false,                                      /* incluirDefaultValues */
                            false,                                      /* incluirId */
                            false,                                      /* incluirTargetAssociations */
                            true,                                      /* incluirSourceAssociations */
                            true,                                       /* pascalCase */
                            prefijo.ToString(),           /* prefijo */
                            ""                                          /* sufijo */
                                                                                    );
                        EntityParamsCreate = T4Help.joinParams( EntityParamsCreate , EntityParamsCreate2);
                    }
                    else
                    {
                        EntityParamsCreate = GetConstructorParametersString(
                            property.Source,                            /* entidad */
                            cbc.diagram.IdKind.Equals("Autonumerical"), /* tipo id */
                            SelectionCriteriaAttributes.Mandatory,      /* Selección de criterios */
                            80,                                         /* Longitud máxima para activar el salto de parametros */
                            false,                                      /* Incluir el tipo del parametro. Por ejemplo:incluye string, int etc*/
                            cbc.spaceformatcounter+23,                  /* Indentación de los parametros cuando se salta */
                            true,                                       /* incluirDefaultValues */
                            false,                                      /* incluirId */
                            false,                                      /* incluirTargetAssociations */
                            false,                                      /* incluirSourceAssociations */
                            true,                                       /* pascalCase */
                            prefijo.ToString(),                         /* prefijo */
                            ""                                          /* sufijo */
                                                                            );
                    }
#>

                            <#= typeProperty.ToString() #> <#= property.TargetRolName.Trim() #>FromDto = <#= property.Source.Name.Trim() #>Factory.Create(<#= EntityParamsCreate #>);
<#+
            }// end if is ObjectValue
#>
<#+
            if((property.Source is Entity)) // si es una entidad
            {
                string EntityBoundedcontext = GetBoundedContextNameFromContext(
                                                                                cbc.diagram, 
                                                                                GetBoundeContextFromClassBase( cbc.diagram.TreeApp, property.Source )
                                                                              ).Replace('\\','_');

                    prefijo.Append(prefijoBase.ToString()).Append(T4Help.SecureName(property.TargetRolName)).Append(".");
                // necesitamos obtener el nombre del projecto del cual obtenemos el recurso con  el nombre de la entidad.
                // si la entidad pertenece al propio contexto lo extraemos del contexto actual.
                // si la entidad pertenece al 
#>
                        var <#= property.Source.Name #>Repo = <#= property.Source.Name #>RepositoryFactory.Create(unitOfWork);
                        var <#= property.TargetRolName.Trim() #>FromDto = <#= property.Source.Name #>Repo.GetById(<#= prefijo.ToString() #>Id);
                        Guard.ArgumentIsNotNull(<#= property.TargetRolName.Trim() #>FromDto, string.Format(
                                                                      CoreResources.Neutral.NoHayDatosPorId,
                                                                      <#= EntityBoundedcontext #>Resources.<#= property.Source.Name #>Alias));
<#+ 
            }// end if is Entity

            if((property.Source is Enumeration)) // si es un enumerado
            {
#>
<#+ 
            }// end if is Entity

        typeProperty.Clear();
        prefijo.Clear();
        } // end foreach


        if (IsDerived( entidad) )
        {
            entidad = GetSuperEntity(entidad);
            if (entidad.ReferencedRootEntity != null)
            {
                entidad = GetClassBaseFromReferencedClassBase(cbc.diagram.TreeApp, entidad.ReferencedRootEntity);
            }
            propertyAssociationSources = Association.GetLinksToSources(entidad).Where(p=> !(p.TargetRolName == null || p.TargetRolName.Length == 0));// lista de propiedades provenientes de las relaciones de origen
            mandatoryPropertyFromSources = propertyAssociationSources.Where( p=> IsMinMultiplicityOne(p.TargetMultiplicity) );// subconjunto de propiedades de tipo mandatory de las anteriores es decri cuya multiplicidad minima es uno 
        }
    }while(IsDerived( centinela) );
 #>
                        #endregion
<#+
        return this.GenerationEnvironment.ToString();
    } // end de TransformText
}// end template
#>
