<#+
public class ModuleTaskBarVMCT : Template
{
    // varibles de la plantilla (coinciden con los parametros)
    public ClassBaseContext cbc; public string projectNamespace; public ITree<BoundedContextMetadata> Skt;
    // constructor de la plantilla con parametros
    public ModuleTaskBarVMCT(ClassBaseContext  cbc, string projectNamespace, ITree<BoundedContextMetadata> Skt)
        {this.cbc= cbc; this.projectNamespace = projectNamespace;  this.Skt = Skt; }

    public override string TransformText()
    {
        // uso de interfaces en las propiedades y por tanto en metodos
        //por defecto se usan interfaces con nhibernate en cualquiera e sus modalidades y no se usan con entityFramework
        string I = (cbc.diagram.ORM.Contains("ibernate"))?"I":"";

        // conceptos propios del projecto en curso
        ProjectConcepts prjCon = new ProjectConcepts(  cbc, projectNamespace, Skt);
        // subplantillas generales
        var cpyrigthTemplate    = new CopyrightHeader(cbc.diagram, cbc.solutionInfo, cbc.entity, T4Help.getLeftStringSlice(this.ToString(), '+', -1).Substring(1));  string cpyrigthText = cpyrigthTemplate.TransformText();
        // subplantillas epsecificas
        var usingTemplate       = new usings( cbc, projectNamespace, Skt);                         string usingTxt     = usingTemplate.TransformText(); //solo los shared kernel
#>

<#= cpyrigthText #>
namespace <#= projectNamespace #>
{
<#= usingTxt #>
    #region usings
    using Inflexion2.UX.WPF.MVVM;
    using Inflexion2.UX.WPF.MVVM.Commands;
    using Inflexion2.UX.WPF.MVVM.ViewModels; 
<#+ if (cbc.OwnBoundedContextHasEnums) {#>
    using <#= prjCon.company #>.<#= prjCon.product #>.<#= prjCon.boundedContextName #>.Domain.Data;
<#+ } #>
    #endregion

    /// <summary>
    /// ViewModel para el boton del bounded context <#= prjCon.boundedContextName #>.
    /// </summary>
   public sealed class <#= prjCon.boundedContextName #>ModuleTaskBarViewModel : TaskbarViewModel
    {
        string[] regions;
        string[] views;

        #region Constructor
        /// <summary>
        /// Inicializa una nueva instancia de la clase <see cref="T:<#= prjCon.boundedContextName #>ModuleTaskBarViewModel"/>.
        /// </summary>
          ///<remarks>
          ///Constructor de la clase <see cref="T:<#= prjCon.boundedContextName #>ModuleTaskBarViewModel"/>.
        ///</remarks>
        public <#= prjCon.boundedContextName #>ModuleTaskBarViewModel()
            : base(typeof(<#= prjCon.company #>.<#= prjCon.product #>.<#= prjCon.boundedContextName #>.FrontEnd.WpfModule.<#= prjCon.boundedContextName #>Module))
        {
            //this.TaskButtonImage = "../Views/Images/Clientes.png";
            this.TaskButtonText = "Contexto limitado";

            this.ShowModuleNavigationView = new NavigationCommand<<#= prjCon.boundedContextName #>ModuleTaskBarViewModel>(
                this, RegionNames.NavigationRegion, typeof(<#= prjCon.boundedContextName #>ModuleNavigationView).FullName, this.NavigationCompleted);

            regions = new string[] { RegionNames.NavigationRegion, RegionNames.ToolbarRegion };
            views = new string[] { typeof(<#= prjCon.boundedContextName #>ModuleNavigationView).FullName, typeof(<#= prjCon.boundedContextName #>ModuleRibbonTab).FullName };

            //this.ShowModuleRibbonView = new MultipleViewsNavigationCommand<<#= prjCon.boundedContextName #>ModuleTaskBarViewModel>(
            //this, RegionNames.ToolbarRegion, typeof(<#= prjCon.boundedContextName #>RibbonTab).FullName, this.NavigationCompleted);

            this.ShowModuleRibbonView = new MultipleViewsNavigationCommand<<#= prjCon.boundedContextName #>ModuleTaskBarViewModel>( this, regions, views, this.NavigationCompleted);
       
        }

        #endregion
    } // end class 

} //  <#= projectNamespace #>
<#+
        return this.GenerationEnvironment.ToString();
    } // end de TransformText
}// end template
#>
