<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Inflexion2.UX.WPF.Controls</name>
    </assembly>
    <members>
        <member name="T:Inflexion2.UX.WPF.Controls.DataGridRowDoubleClickHandler">
            <summary>
            asociate an action to the gesture of double click in the datagrid
            </summary>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.DataGridRowDoubleClickHandler.#ctor(System.Windows.Controls.DataGrid)">
            <summary>
            constructor
            </summary>
            <param name="dataGrid"></param>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.DataGridRowDoubleClickHandler.GetMethodName(System.Windows.Controls.DataGrid)">
            <summary>
            get the method name to execute from the property
            </summary>
            <param name="dataGrid"></param>
            <returns></returns>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.DataGridRowDoubleClickHandler.SetMethodName(System.Windows.Controls.DataGrid,System.String)">
            <summary>
            set the method name to execute from the property 
            </summary>
            <param name="dataGrid"></param>
            <param name="value"></param>
        </member>
        <member name="F:Inflexion2.UX.WPF.Controls.DataGridRowDoubleClickHandler.MethodNameProperty">
            <summary>
            dependency property register
            </summary>
        </member>
        <member name="T:Inflexion2.UX.WPF.Controls.Dialogs.QueryColumn">
            <summary>
            Entidad que define una columna a mostrar en el diálogo QueryMultipleView.
            </summary>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.QueryColumn.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Inflexion2.UX.WPF.Controls.Dialogs.QueryColumn"/>.
            </summary>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.QueryColumn.DisplayName">
            <summary>
            Obtiene o establece el nombre de la columna.
            </summary>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.QueryColumn.Binding">
            <summary>
            Obtiene o establece el nombre del campo con el que se va a hacer binding.
            </summary>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.QueryColumn.StringFormat">
            <summary>
            Obtiene o establece el formato que se desea dar al valor.
            </summary>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.QueryColumn.Width">
            <summary>
            Obtiene o establece el ancho de la columna.
            </summary>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.QueryColumn.DataType">
            <summary>
            Obtiene o establece el tipo de datos de la columna.
            </summary>
        </member>
        <member name="T:Inflexion2.UX.WPF.Controls.Dialogs.MultiSelectQueryDialogRequestEventArgs">
            <summary>
            Clase que almacena los argumentos a elevar a la vista desde el ViewModel
            </summary>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.MultiSelectQueryDialogRequestEventArgs.#ctor(System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Services.IKeyValueItem},System.String,System.String,System.Int32,System.Boolean,System.Func{System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Services.IKeyValueItem}},System.String,System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Controls.Dialogs.QueryColumn},System.Action{System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Services.IKeyValueItem}},System.Action)">
            <summary>
            Inicia una nueva instancia de la clase <see cref="T:Inflexion2.UX.WPF.Controls.Dialogs.MultiSelectQueryDialogRequestEventArgs" />.
            </summary>
            <param name="entity">La entidad.</param>
            <param name="title">El título de la ventana.</param>
            <param name="message">El mensaje a mostrar.</param>
            <param name="idCliente">El id de cliente.</param>
            <param name="allowEmptyResult"><c>true</c> si se permite el valor vacío; en caso contrario, <c>false</c>.</param>
            <param name="queryFunction">El servicio de consulta a emplear en la ventana.</param>
            <param name="selectedString">The selected string.</param>
            <param name="columns">Las columnas a mostrar.</param>
            <param name="callback">El callback.</param>
            <param name="cancelCallback">El callback de cancelación.</param>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.MultiSelectQueryDialogRequestEventArgs.WindowTitle">
            <summary>
            Obtiene el título de la ventana.
            </summary>
            <value>
            El título de la ventana.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.MultiSelectQueryDialogRequestEventArgs.Message">
            <summary>
            Obtiene el message de confirmación.
            </summary>
            <value>
            El mensaje.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.MultiSelectQueryDialogRequestEventArgs.QueryFunction">
            <summary>
            Obtiene el método de consulta a ejecutar para obtener valores.
            </summary>
            <value>
            El método de consulta.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.MultiSelectQueryDialogRequestEventArgs.IdCliente">
            <summary>
            Obtiene el id de cliente.
            </summary>
            <value>
            El id de cliente.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.MultiSelectQueryDialogRequestEventArgs.AllowEmptyResult">
            <summary>
            Obtiene o establece un valor que indica si se va a permitir mostrar el valor vacío como resultado de la consulta.
            </summary>
            <value>
              <c>true</c> si se permite el valor vacío; en caso contrario, <c>false</c>.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.MultiSelectQueryDialogRequestEventArgs.SelectedString">
            <summary>
            Obtiene la cadena de los seleccionados
            </summary>
            <value>
            El id de cliente.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.MultiSelectQueryDialogRequestEventArgs.Columns">
            <summary>
            Obtiene las columnas a mostrar.
            </summary>
            <value>
            Las columnas.
            </value>
        </member>
        <member name="T:Inflexion2.UX.WPF.Controls.Dialogs.MessageBoxRequestEventArgs">
            <summary>
            Clase que almacena los argumentos a elevar a la vista desde el ViewModel
            </summary>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.MessageBoxRequestEventArgs.#ctor(System.Windows.MessageBoxResult,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult,System.Action{System.Windows.MessageBoxResult},System.Action)">
            <summary>
            Inicia una nueva instancia de la clase <see cref="T:Inflexion2.UX.WPF.Controls.Dialogs.MessageBoxRequestEventArgs" />.
            </summary>
            <param name="entity">La entidad.</param>
            <param name="title">El título de la ventana.</param>
            <param name="message">El mensaje a mostrar.</param>
            <param name="buttons">Enumerado con los botones a mostrar.</param>
            <param name="icon">La imagen a mostrar.</param>
            <param name="defaultResult">El resultado por defecto a mostrar.</param>
            <param name="callback">El callback.</param>
            <param name="cancelCallback">El callback de cancelación.</param>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.MessageBoxRequestEventArgs.WindowTitle">
            <summary>
            Obtiene el título de la ventana.
            </summary>
            <value>
            El título de la ventana.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.MessageBoxRequestEventArgs.Message">
            <summary>
            Obtiene el message de confirmación.
            </summary>
            <value>
            El mensaje.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.MessageBoxRequestEventArgs.Buttons">
            <summary>
            Obtiene los botones a mostrar en el diálogo.
            </summary>
            <value>
            Los botones.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.MessageBoxRequestEventArgs.Icon">
            <summary>
            Obtiene el icono a mostrar en el dilogo.
            </summary>
            <value>
            El icono.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.MessageBoxRequestEventArgs.DefaultResult">
            <summary>
            Obtiene el resultado por defecto que debe devolver el diálogo.
            </summary>
            <value>
            El resultado por defecto.
            </value>
        </member>
        <member name="T:Inflexion2.UX.WPF.Controls.Dialogs.QueryDialogRequestEventArgs">
            <summary>
            Clase que almacena los argumentos a elevar a la vista desde el ViewModel
            </summary>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.QueryDialogRequestEventArgs.#ctor(Inflexion2.UX.WPF.Services.BaseKeyValueItem,System.String,System.String,System.Int32,Inflexion2.UX.WPF.Services.IQueryService,System.Action{Inflexion2.UX.WPF.Services.BaseKeyValueItem},System.Action)">
            <summary>
            Inicia una nueva instancia de la clase <see cref="T:Inflexion2.UX.WPF.Controls.Dialogs.QueryDialogRequestEventArgs" />.
            </summary>
            <param name="entity">La entidad.</param>
            <param name="title">El título de la ventana.</param>
            <param name="message">El mensaje a mostrar.</param>
            <param name="idCliente">El id de cliente.</param>
            <param name="queryService">El servicio de consulta a emplear en la ventana.</param>
            <param name="callback">El callback.</param>
            <param name="cancelCallback">El callback de cancelación.</param>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.QueryDialogRequestEventArgs.#ctor(Inflexion2.UX.WPF.Services.BaseKeyValueItem,System.String,System.String,System.Int32,System.Boolean,Inflexion2.UX.WPF.Services.IQueryService,System.Action{Inflexion2.UX.WPF.Services.BaseKeyValueItem},System.Action)">
            <summary>
            Inicia una nueva instancia de la clase <see cref="T:Inflexion2.UX.WPF.Controls.Dialogs.QueryDialogRequestEventArgs" />.
            </summary>
            <param name="entity">La entidad.</param>
            <param name="title">El título de la ventana.</param>
            <param name="message">El mensaje a mostrar.</param>
            <param name="idCliente">El id de cliente.</param>
            <param name="allowEmptyResult"><c>true</c> si se permite el valor vacío; en caso contrario, <c>false</c>.</param>
            <param name="queryService">El servicio de consulta a emplear en la ventana.</param>
            <param name="callback">El callback.</param>
            <param name="cancelCallback">El callback de cancelación.</param>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.QueryDialogRequestEventArgs.#ctor(Inflexion2.UX.WPF.Services.BaseKeyValueItem,System.String,System.String,System.Int32,System.Func{System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Services.IKeyValueItem}},System.Action{Inflexion2.UX.WPF.Services.BaseKeyValueItem},System.Action)">
            <summary>
            Inicia una nueva instancia de la clase <see cref="T:Inflexion2.UX.WPF.Controls.Dialogs.QueryDialogRequestEventArgs" />.
            </summary>
            <param name="entity">La entidad.</param>
            <param name="title">El título de la ventana.</param>
            <param name="message">El mensaje a mostrar.</param>
            <param name="idCliente">El id de cliente.</param>
            <param name="queryFunction">El servicio de consulta a emplear en la ventana.</param>
            <param name="callback">El callback.</param>
            <param name="cancelCallback">El callback de cancelación.</param>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.QueryDialogRequestEventArgs.#ctor(Inflexion2.UX.WPF.Services.BaseKeyValueItem,System.String,System.String,System.Int32,System.Boolean,System.Func{System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Services.IKeyValueItem}},System.Action{Inflexion2.UX.WPF.Services.BaseKeyValueItem},System.Action)">
            <summary>
            Inicia una nueva instancia de la clase <see cref="T:Inflexion2.UX.WPF.Controls.Dialogs.QueryDialogRequestEventArgs" />.
            </summary>
            <param name="entity">La entidad.</param>
            <param name="title">El título de la ventana.</param>
            <param name="message">El mensaje a mostrar.</param>
            <param name="idCliente">El id de cliente.</param>
            <param name="allowEmptyResult"><c>true</c> si se permite el valor vacío; en caso contrario, <c>false</c>.</param>
            <param name="queryFunction">El servicio de consulta a emplear en la ventana.</param>
            <param name="callback">El callback.</param>
            <param name="cancelCallback">El callback de cancelación.</param>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.QueryDialogRequestEventArgs.WindowTitle">
            <summary>
            Obtiene el título de la ventana.
            </summary>
            <value>
            El título de la ventana.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.QueryDialogRequestEventArgs.Message">
            <summary>
            Obtiene el message de confirmación.
            </summary>
            <value>
            El mensaje.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.QueryDialogRequestEventArgs.QueryService">
            <summary>
            Obtiene el servicio de consulta a emplear en la ventana.
            </summary>
            <value>
            El servicio de consulta.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.QueryDialogRequestEventArgs.QueryFunction">
            <summary>
            Obtiene el método de consulta a ejecutar para obtener valores.
            </summary>
            <value>
            El método de consulta.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.QueryDialogRequestEventArgs.IdCliente">
            <summary>
            Obtiene el id de cliente.
            </summary>
            <value>
            El id de cliente.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.QueryDialogRequestEventArgs.AllowEmptyResult">
            <summary>
            Obtiene o establece un valor que indica si se va a permitir mostrar el valor vacío como resultado de la consulta.
            </summary>
            <value>
              <c>true</c> si se permite el valor vacío; en caso contrario, <c>false</c>.
            </value>
        </member>
        <member name="T:Inflexion2.UX.WPF.Controls.Dialogs.MultiSelectQueryDialog">
            <summary>
            Clase base para la interacción con el diálogo de consulta.
            </summary>
        </member>
        <member name="T:Inflexion2.UX.WPF.Controls.Dialogs.MessageBoxAction">
            <summary>
            Clase base para la interacción con creación / edición de Corte Política
            </summary>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.MessageBoxAction.Invoke(System.Object)">
            <summary>
            Invoca el parámetro especificado.
            </summary>
            <param name="parameter">El parámetro.</param>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.MessageBoxAction.SetDialog(System.Windows.MessageBoxResult,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult,System.Action{System.Windows.MessageBoxResult},System.Action,System.Windows.UIElement)">
            <summary>
            Establece los datos del diálogo.
            </summary>
            <param name="entity">La entidad.</param>
            <param name="windowTitle">El título de la ventana.</param>
            <param name="message">El mensaje para la ventana.</param>
            <param name="buttons">Los botones a mostrar en el diálogo.</param>
            <param name="icon">El icono a mostrar en el diálogo.</param>
            <param name="defaultResult">El resultado por defecto a devolver en el diálogo.</param>
            <param name="callback">El callback para la acción Ok.</param>
            <param name="cancelCallback">El callback para la acción Cancel.</param>
            <param name="element">El elemento de UI.</param>
        </member>
        <member name="T:Inflexion2.UX.WPF.Controls.Dialogs.MessageBoxDialog">
            <summary>
            Clase base para la interacción con el diálogo de MessageBox
            </summary>
        </member>
        <member name="T:Inflexion2.UX.WPF.Controls.Dialogs.QueryDialog">
            <summary>
            Clase base para la interacción con el diálogo de consulta
            </summary>
        </member>
        <member name="T:Inflexion2.UX.WPF.Controls.Dialogs.QueryDialogRequest">
            <summary>
            Clase empleada para suministrar datos desde el ViewModel hacia la vista
            </summary>
        </member>
        <member name="E:Inflexion2.UX.WPF.Controls.Dialogs.QueryDialogRequest.Raised">
            <summary>
            Ocurre cuando se llama al método Raise.
            </summary>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.QueryDialogRequest.Raise(Inflexion2.UX.WPF.Services.BaseKeyValueItem,System.String,System.String,System.Int32,System.Boolean,Inflexion2.UX.WPF.Services.IQueryService,System.Action{Inflexion2.UX.WPF.Services.BaseKeyValueItem},System.Action)">
            <summary>
            Eleva la entidad especificada.
            </summary>
            <param name="entity">La entidad.</param>
            <param name="windowTitle">El título de la ventana.</param>
            <param name="message">El mensaje.</param>
            <param name="idCliente">El id de cliente.</param>
            <param name="allowEmptyResult"><c>true</c> si se permite el valor vacío; en caso contrario, <c>false</c>.</param>
            <param name="queryService">El servicio de consulta a emplear en la ventana.</param>
            <param name="callback">El callback.</param>
            <param name="cancelCallback">El callback de cancelación.</param>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.QueryDialogRequest.Raise(Inflexion2.UX.WPF.Services.BaseKeyValueItem,System.String,System.String,System.Int32,Inflexion2.UX.WPF.Services.IQueryService,System.Action{Inflexion2.UX.WPF.Services.BaseKeyValueItem},System.Action)">
            <summary>
            Eleva la entidad especificada.
            </summary>
            <param name="entity">La entidad.</param>
            <param name="windowTitle">El título de la ventana.</param>
            <param name="message">El mensaje.</param>
            <param name="idCliente">El id de cliente.</param>
            <param name="queryService">El servicio de consulta a emplear en la ventana.</param>
            <param name="callback">El callback.</param>
            <param name="cancelCallback">El callback de cancelación.</param>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.QueryDialogRequest.Raise(Inflexion2.UX.WPF.Services.BaseKeyValueItem,System.String,System.String,System.Int32,System.Func{System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Services.IKeyValueItem}},System.Action{Inflexion2.UX.WPF.Services.BaseKeyValueItem},System.Action)">
            <summary>
            Eleva la entidad especificada.
            </summary>
            <param name="entity">La entidad.</param>
            <param name="windowTitle">El título de la ventana.</param>
            <param name="message">El mensaje.</param>
            <param name="idCliente">El id de cliente.</param>
            <param name="queryFunction">El método de consulta a emplear en la ventana.</param>
            <param name="callback">El callback.</param>
            <param name="cancelCallback">El callback de cancelación.</param>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.QueryDialogRequest.Raise(Inflexion2.UX.WPF.Services.BaseKeyValueItem,System.String,System.String,System.Int32,System.Boolean,System.Func{System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Services.IKeyValueItem}},System.Action{Inflexion2.UX.WPF.Services.BaseKeyValueItem},System.Action)">
            <summary>
            Eleva la entidad especificada.
            </summary>
            <param name="entity">La entidad.</param>
            <param name="windowTitle">El título de la ventana.</param>
            <param name="message">El mensaje.</param>
            <param name="idCliente">El id de cliente.</param>
            <param name="allowEmptyResult"><c>true</c> si se permite el valor vacío; en caso contrario, <c>false</c>.</param>
            <param name="queryFunction">El método de consulta a emplear en la ventana.</param>
            <param name="callback">El callback.</param>
            <param name="cancelCallback">El callback de cancelación.</param>
        </member>
        <member name="T:Inflexion2.UX.WPF.Controls.Dialogs.MultiSelectQueryDialogRequest">
            <summary>
            Clase empleada para suministrar datos desde el ViewModel hacia la vista
            </summary>
        </member>
        <member name="E:Inflexion2.UX.WPF.Controls.Dialogs.MultiSelectQueryDialogRequest.Raised">
            <summary>
            Ocurre cuando se llama al método Raise.
            </summary>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.MultiSelectQueryDialogRequest.Raise(System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Services.IKeyValueItem},System.String,System.String,System.Int32,System.Func{System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Services.IKeyValueItem}},System.Action{System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Services.IKeyValueItem}},System.Action)">
            <summary>
            Eleva la entidad especificada.
            </summary>
            <param name="entity">La entidad.</param>
            <param name="windowTitle">El título de la ventana.</param>
            <param name="message">El mensaje.</param>
            <param name="idCliente">El id de cliente.</param>
            <param name="queryFunction">El método de consulta a emplear en la ventana.</param>
            <param name="callback">El callback.</param>
            <param name="cancelCallback">El callback de cancelación.</param>
            <remarks>
            Este método construye un popup con las columnas Id y Nombre.
            </remarks>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.MultiSelectQueryDialogRequest.Raise(System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Services.IKeyValueItem},System.String,System.String,System.Int32,System.Func{System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Services.IKeyValueItem}},System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Controls.Dialogs.QueryColumn},System.Action{System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Services.IKeyValueItem}},System.Action)">
            <summary>
            Eleva la entidad especificada.
            </summary>
            <param name="entity">La entidad.</param>
            <param name="windowTitle">El título de la ventana.</param>
            <param name="message">El mensaje.</param>
            <param name="idCliente">El id de cliente.</param>
            <param name="queryFunction">El método de consulta a emplear en la ventana.</param>
            <param name="columns">Las columnas.</param>
            <param name="callback">El callback.</param>
            <param name="cancelCallback">El callback de cancelación.</param>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.MultiSelectQueryDialogRequest.Raise(System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Services.IKeyValueItem},System.String,System.String,System.Int32,System.Boolean,System.Func{System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Services.IKeyValueItem}},System.Action{System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Services.IKeyValueItem}},System.Action)">
            <summary>
            Eleva la entidad especificada.
            </summary>
            <param name="entity">La entidad.</param>
            <param name="windowTitle">El título de la ventana.</param>
            <param name="message">El mensaje.</param>
            <param name="idCliente">El id de cliente.</param>
            <param name="allowEmptyResult"><c>true</c> si se permite el valor vacío; en caso contrario, <c>false</c>.</param>
            <param name="queryFunction">El método de consulta a emplear en la ventana.</param>
            <param name="callback">El callback.</param>
            <param name="cancelCallback">El callback de cancelación.</param>
            <remarks>
            Este método construye un popup con las columnas Id y Nombre.
            </remarks>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.MultiSelectQueryDialogRequest.Raise(System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Services.IKeyValueItem},System.String,System.String,System.Int32,System.Boolean,System.Func{System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Services.IKeyValueItem}},System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Controls.Dialogs.QueryColumn},System.Action{System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Services.IKeyValueItem}},System.Action)">
            <summary>
            Eleva la entidad especificada.
            </summary>
            <param name="entity">La entidad.</param>
            <param name="windowTitle">El título de la ventana.</param>
            <param name="message">El mensaje.</param>
            <param name="idCliente">El id de cliente.</param>
            <param name="allowEmptyResult"><c>true</c> si se permite el valor vacío; en caso contrario, <c>false</c>.</param>
            <param name="queryFunction">El método de consulta a emplear en la ventana.</param>
            <param name="columns">Las columnas.</param>
            <param name="callback">El callback.</param>
            <param name="cancelCallback">El callback de cancelación.</param>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.MultiSelectQueryDialogRequest.Raise(System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Services.IKeyValueItem},System.String,System.String,System.Int32,System.Func{System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Services.IKeyValueItem}},System.String,System.Action{System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Services.IKeyValueItem}},System.Action)">
            <summary>
            Eleva la entidad especificada.
            </summary>
            <param name="entity">La entidad.</param>
            <param name="windowTitle">El título de la ventana.</param>
            <param name="message">El mensaje.</param>
            <param name="idCliente">El id de cliente.</param>
            <param name="queryFunction">El método de consulta a emplear en la ventana.</param>
            <param name="selectedString">La cadena con los items seleccionados</param>
            <param name="callback">El callback.</param>
            <param name="cancelCallback">El callback de cancelación.</param>
            <remarks>
            Este método construye un popup con las columnas Id y Nombre.
            </remarks>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.MultiSelectQueryDialogRequest.Raise(System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Services.IKeyValueItem},System.String,System.String,System.Int32,System.Func{System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Services.IKeyValueItem}},System.String,System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Controls.Dialogs.QueryColumn},System.Action{System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Services.IKeyValueItem}},System.Action)">
            <summary>
            Eleva la entidad especificada.
            </summary>
            <param name="entity">La entidad.</param>
            <param name="windowTitle">El título de la ventana.</param>
            <param name="message">El mensaje.</param>
            <param name="idCliente">El id de cliente.</param>
            <param name="queryFunction">El método de consulta a emplear en la ventana.</param>
            <param name="selectedString">La cadena con los items seleccionados</param>
            <param name="columns">Las columnas.</param>
            <param name="callback">El callback.</param>
            <param name="cancelCallback">El callback de cancelación.</param>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.MultiSelectQueryDialogRequest.Raise(System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Services.IKeyValueItem},System.String,System.String,System.Int32,System.Boolean,System.Func{System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Services.IKeyValueItem}},System.String,System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Controls.Dialogs.QueryColumn},System.Action{System.Collections.Generic.IEnumerable{Inflexion2.UX.WPF.Services.IKeyValueItem}},System.Action)">
            <summary>
            Eleva la entidad especificada.
            </summary>
            <param name="entity">La entidad.</param>
            <param name="windowTitle">El título de la ventana.</param>
            <param name="message">El mensaje.</param>
            <param name="idCliente">El id de cliente.</param>
            <param name="allowEmptyResult"><c>true</c> si se permite el valor vacío; en caso contrario, <c>false</c>.</param>
            <param name="queryFunction">El método de consulta a emplear en la ventana.</param>
            <param name="selectedString">La cadena con los items seleccionados</param>
            <param name="columns">Las columnas.</param>
            <param name="callback">El callback.</param>
            <param name="cancelCallback">El callback de cancelación.</param>
        </member>
        <member name="T:Inflexion2.UX.WPF.Controls.Dialogs.MessageBoxRequest">
            <summary>
            Clase empleada para suministrar datos desde el ViewModel hacia la vista
            </summary>
        </member>
        <member name="E:Inflexion2.UX.WPF.Controls.Dialogs.MessageBoxRequest.Raised">
            <summary>
            Ocurre cuando se llama al método Raise.
            </summary>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.MessageBoxRequest.Raise(System.Windows.MessageBoxResult,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult,System.Action{System.Windows.MessageBoxResult},System.Action)">
            <summary>
            Eleva la entidad especificada.
            </summary>
            <param name="entity">La entidad.</param>
            <param name="windowTitle">El título de la ventana.</param>
            <param name="message">El mensaje.</param>
            <param name="buttons">Los botones que debe mostrar el diálogo.</param>
            <param name="icon">El icono que debe mostrar el diálogo.</param>
            <param name="defaultResult">El resultado por defecto que debe devolver el diálogo.</param>
            <param name="callback">El callback.</param>
            <param name="cancelCallback">El callback de cancelación.</param>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.MessageBoxRequest.Raise(System.Windows.MessageBoxResult,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Action{System.Windows.MessageBoxResult},System.Action)">
            <summary>
            Eleva la entidad especificada.
            </summary>
            <param name="entity">La entidad.</param>
            <param name="windowTitle">El título de la ventana.</param>
            <param name="message">El mensaje.</param>
            <param name="buttons">Los botones que debe mostrar el diálogo.</param>
            <param name="icon">El icono que debe mostrar el diálogo.</param>
            <param name="callback">El callback.</param>
            <param name="cancelCallback">El callback de cancelación.</param>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.MessageBoxRequest.Raise(System.Windows.MessageBoxResult,System.String,System.String,System.Windows.MessageBoxButton,System.Action{System.Windows.MessageBoxResult},System.Action)">
            <summary>
            Eleva la entidad especificada.
            </summary>
            <param name="entity">La entidad.</param>
            <param name="windowTitle">El título de la ventana.</param>
            <param name="message">El mensaje.</param>
            <param name="buttons">Los botones que debe mostrar el diálogo.</param>
            <param name="callback">El callback.</param>
            <param name="cancelCallback">El callback de cancelación.</param>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.MessageBoxRequest.Raise(System.Windows.MessageBoxResult,System.String,System.String,System.Action{System.Windows.MessageBoxResult},System.Action)">
            <summary>
            Eleva la entidad especificada.
            </summary>
            <param name="entity">La entidad.</param>
            <param name="windowTitle">El título de la ventana.</param>
            <param name="message">El mensaje.</param>
            <param name="callback">El callback.</param>
            <param name="cancelCallback">El callback de cancelación.</param>
        </member>
        <member name="T:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MultiSelectQueryDialogViewModel">
            <summary>
            Clase de ViewModel para el diálogo de MessageBox
            </summary>
        </member>
        <member name="F:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MultiSelectQueryDialogViewModel.windowTitle">
            <summary>
            Backing field para WindowTitle
            </summary>
        </member>
        <member name="F:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MultiSelectQueryDialogViewModel.message">
            <summary>
            Backing field para Message
            </summary>
        </member>
        <member name="F:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MultiSelectQueryDialogViewModel.idCliente">
            <summary>
            Backing field para IdCliente
            </summary>
        </member>
        <member name="F:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MultiSelectQueryDialogViewModel.queryFunction">
            <summary>
            Backing field para QueryFunction.
            </summary>
        </member>
        <member name="F:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MultiSelectQueryDialogViewModel.items">
            <summary>
            Backing field para Items.
            </summary>
        </member>
        <member name="F:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MultiSelectQueryDialogViewModel.selectedItem">
            <summary>
            Backing field para la propiedad SelectedItems.
            </summary>
        </member>
        <member name="F:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MultiSelectQueryDialogViewModel.allowEmptyResult">
            <summary>
            Backing field para la propiedad AllowEmptyResult.
            </summary>
        </member>
        <member name="F:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MultiSelectQueryDialogViewModel.selectedString">
            <summary>
            Backing field para la propiedad selectedString.
            </summary>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MultiSelectQueryDialogViewModel.OkCommand">
            <summary>
            Obtiene y establece el botón Ok.
            </summary>
            <value>
            El botón Ok.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MultiSelectQueryDialogViewModel.CancelCommand">
            <summary>
            Obtiene y establece el botón Cancel.
            </summary>
            <value>
            El botón Cancel.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MultiSelectQueryDialogViewModel.Items">
            <summary>
            Obtiene la colección de elementos.
            </summary>
            <value>
            La colección de elementos.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MultiSelectQueryDialogViewModel.SelectedItems">
            <summary>
            Obtiene o establece los elementos seleccionados en la lista.
            </summary>
            <value>
            Los elementos seleccionados.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MultiSelectQueryDialogViewModel.WindowTitle">
            <summary>
            Obtiene y establece el título de la ventana.
            </summary>
            <value>
            El titulo de la ventana.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MultiSelectQueryDialogViewModel.Message">
            <summary>
            Obtiene y establece el mensaje de la ventana.
            </summary>
            <value>
            El mensaje de la ventana.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MultiSelectQueryDialogViewModel.IdCliente">
            <summary>
            Obtiene o establece el id de cliente.
            </summary>
            <value>
            el id de cliente.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MultiSelectQueryDialogViewModel.QueryFunction">
            <summary>
            Obtiene o establece la función de consulta.
            </summary>
            <value>
            La función de consulta.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MultiSelectQueryDialogViewModel.SelectedString">
            <summary>
            Obtiene o establece el id de cliente.
            </summary>
            <value>
            el id de cliente.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MultiSelectQueryDialogViewModel.AllowEmptyResult">
            <summary>
            Obtiene o establece un valor que indica si se añade el valor vacío a los resultados de la consulta.
            </summary>
            <value>
              <c>true</c> si se permite el valor vacío; en caso contrario, <c>false</c>.
            </value>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MultiSelectQueryDialogViewModel.GetSelectedItems">
            <summary>
            Obtiene los items seleccionados en la colección.
            </summary>
            <returns>Un enumerado con los items seleccionados.</returns>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MultiSelectQueryDialogViewModel.Initialize">
            <summary>
            Inicializa el diálogo.
            </summary>
        </member>
        <member name="T:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MessageBoxViewModel">
            <summary>
            Clase de ViewModel para el diálogo de MessageBox
            </summary>
        </member>
        <member name="F:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MessageBoxViewModel.windowTitle">
            <summary>
            Backing field para WindowTitle
            </summary>
        </member>
        <member name="F:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MessageBoxViewModel.message">
            <summary>
            Backing field para Message
            </summary>
        </member>
        <member name="F:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MessageBoxViewModel.buttons">
            <summary>
            Backing field para Buttons
            </summary>
        </member>
        <member name="F:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MessageBoxViewModel.icon">
            <summary>
            Backing field para Icon
            </summary>
        </member>
        <member name="F:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MessageBoxViewModel.defaultResult">
            <summary>
            Backing field para DefaultResult
            </summary>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MessageBoxViewModel.YesCommand">
            <summary>
            Obtiene y establece el botón Yes.
            </summary>
            <value>
            El botón Yes.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MessageBoxViewModel.NoCommand">
            <summary>
            Obtiene y establece el botón No.
            </summary>
            <value>
            El botón No.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MessageBoxViewModel.OkCommand">
            <summary>
            Obtiene y establece el botón Ok.
            </summary>
            <value>
            El botón Ok.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MessageBoxViewModel.CancelCommand">
            <summary>
            Obtiene y establece el botón Cancel.
            </summary>
            <value>
            El botón Cancel.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MessageBoxViewModel.WindowTitle">
            <summary>
            Obtiene y establece el título de la ventana.
            </summary>
            <value>
            El titulo de la ventana.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MessageBoxViewModel.Message">
            <summary>
            Obtiene y establece el mensaje de la ventana.
            </summary>
            <value>
            El mensaje de la ventana.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MessageBoxViewModel.Buttons">
            <summary>
            Obtiene o establece los botones de la pantalla.
            </summary>
            <value>
            Los botones.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MessageBoxViewModel.Icon">
            <summary>
            Obtiene o establece el icono de la pantalla.
            </summary>
            <value>
            El icono.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MessageBoxViewModel.DefaultResult">
            <summary>
            Obtiene o establece el resultado por defecto de la pantalla.
            </summary>
            <value>
            El resultado por defecto.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MessageBoxViewModel.ShowYes">
            <summary>
            Obtiene un valor que indica si se debe mostrar el botón SI.
            </summary>
            <value>
              <c>true</c> si se debe mostrar el botón SI; en caso contrario, <c>false</c>.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MessageBoxViewModel.ShowNo">
            <summary>
            Obtiene un valor que indica si se debe mostrar el botón NO.
            </summary>
            <value>
              <c>true</c> si se debe mostrar el botón NO; en caso contrario, <c>false</c>.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MessageBoxViewModel.ShowAccept">
            <summary>
            Obtiene un valor que indica si se debe mostrar el botón Aceptar.
            </summary>
            <value>
              <c>true</c> si se debe mostrar el botón Aceptar; en caso contrario, <c>false</c>.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.MessageBoxViewModel.ShowCancel">
            <summary>
            Obtiene un valor que indica si se debe mostrar el botón Cancelar.
            </summary>
            <value>
              <c>true</c> si se debe mostrar el botón Cancelar; en caso contrario, <c>false</c>.
            </value>
        </member>
        <member name="T:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.QueryDialogViewModel">
            <summary>
            Clase de ViewModel para el diálogo de MessageBox
            </summary>
        </member>
        <member name="F:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.QueryDialogViewModel.windowTitle">
            <summary>
            Backing field para WindowTitle
            </summary>
        </member>
        <member name="F:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.QueryDialogViewModel.message">
            <summary>
            Backing field para Message
            </summary>
        </member>
        <member name="F:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.QueryDialogViewModel.idCliente">
            <summary>
            Backing field para IdCliente
            </summary>
        </member>
        <member name="F:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.QueryDialogViewModel.queryService">
            <summary>
            Backing field para QueryService
            </summary>
        </member>
        <member name="F:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.QueryDialogViewModel.queryFunction">
            <summary>
            Backing field para QueryFunction.
            </summary>
        </member>
        <member name="F:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.QueryDialogViewModel.items">
            <summary>
            Backing field para Items.
            </summary>
        </member>
        <member name="F:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.QueryDialogViewModel.selectedItem">
            <summary>
            Backing field para SelectedItem.
            </summary>
        </member>
        <member name="F:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.QueryDialogViewModel.allowEmptyResult">
            <summary>
            Backing field para la propiedad AllowEmptyResult.
            </summary>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.QueryDialogViewModel.OkCommand">
            <summary>
            Obtiene y establece el botón Ok.
            </summary>
            <value>
            El botón Ok.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.QueryDialogViewModel.CancelCommand">
            <summary>
            Obtiene y establece el botón Cancel.
            </summary>
            <value>
            El botón Cancel.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.QueryDialogViewModel.Items">
            <summary>
            Obtiene la colección de elementos.
            </summary>
            <value>
            La colección de elementos.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.QueryDialogViewModel.SelectedItem">
            <summary>
            Obtiene o establece el elemento seleccionado de la lista.
            </summary>
            <value>
            El elemento seleccionado de la lista.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.QueryDialogViewModel.WindowTitle">
            <summary>
            Obtiene y establece el título de la ventana.
            </summary>
            <value>
            El titulo de la ventana.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.QueryDialogViewModel.Message">
            <summary>
            Obtiene y establece el mensaje de la ventana.
            </summary>
            <value>
            El mensaje de la ventana.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.QueryDialogViewModel.QueryService">
            <summary>
            Obtiene o establece los botones de la pantalla.
            </summary>
            <value>
            Los botones.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.QueryDialogViewModel.IdCliente">
            <summary>
            Obtiene o establece el id de cliente.
            </summary>
            <value>
            el id de cliente.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.QueryDialogViewModel.QueryFunction">
            <summary>
            Obtiene o establece la función de consulta.
            </summary>
            <value>
            La función de consulta.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.QueryDialogViewModel.AllowEmptyResult">
            <summary>
            Obtiene o establece un valor que indica si se añade el valor vacío a los resultados de la consulta.
            </summary>
            <value>
              <c>true</c> si se permite el valor vacío; en caso contrario, <c>false</c>.
            </value>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.ViewModels.QueryDialogViewModel.Initialize">
            <summary>
            Inicializa el diálogo.
            </summary>
        </member>
        <member name="T:Inflexion2.UX.WPF.Controls.Dialogs.Views.MessageBoxInteractionView">
            <summary>
            Clase base con la Lógica de interacción con MessageBoxInteractionView.xaml 
            </summary>
            <summary>
            MessageBoxInteractionView
            </summary>
        </member>
        <member name="F:Inflexion2.UX.WPF.Controls.Dialogs.Views.MessageBoxInteractionView.adapter">
            <summary>
            Campo adapter encargado de enganchar el diálogo con su ViewModel
            </summary>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.Views.MessageBoxInteractionView.#ctor">
            <summary>
            Inicia un dialogo de confirmación />.
            </summary>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.Views.MessageBoxInteractionView.Initialize">
            <summary>
            Inicializa el diálogo.
            </summary>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.Views.MessageBoxInteractionView.Ok">
            <summary>
            Acción para la pulsación de Ok.
            </summary>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.Views.MessageBoxInteractionView.Cancel">
            <summary>
            Acción para la pulsación de Cancel.
            </summary>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.Views.MessageBoxInteractionView.Yes">
            <summary>
            Acción para la pulsación de Yes.
            </summary>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.Views.MessageBoxInteractionView.No">
            <summary>
            Acción para la pulsación de No.
            </summary>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.Views.MessageBoxInteractionView.SetEntity(System.Windows.MessageBoxResult)">
            <summary>
            Establece la entidad.
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.Views.MessageBoxInteractionView.GetEntity">
            <summary>
            Obtiene la entidad.
            </summary>
            <returns>resultado del dialogo</returns>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.Views.MessageBoxInteractionView.Inflexion2#UX#WPF#MVVM#ViewModels#Dialogs#IBaseDialogAdapter{System#Windows#MessageBoxResult}#ViewModel">
            <summary>
            Obtiene el ViewModel.
            </summary>
            <value>
            El ViewModel.
            </value>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.Dialogs.Views.MessageBoxInteractionView.ViewModel">
            <summary>
            Obtiene el ViewModel.
            </summary>
            <value>
            El ViewModel.
            </value>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.Views.MessageBoxInteractionView.SetWindowTitle(System.String)">
            <summary>
            Establece el título de la ventana.
            </summary>
            <param name="windowTitle">El título de la ventana.</param>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.Views.MessageBoxInteractionView.SetMessage(System.String)">
            <summary>
            Establece el mensaje de la ventana.
            </summary>
            <param name="message">El mensaje.</param>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.Views.MessageBoxInteractionView.SetButtons(System.Windows.MessageBoxButton)">
            <summary>
            Establece los botones de la ventana.
            </summary>
            <param name="buttons">Los botones.</param>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.Views.MessageBoxInteractionView.SetIcon(System.Windows.MessageBoxImage)">
            <summary>
            Establece el icono de la ventana.
            </summary>
            <param name="icon">El icono.</param>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.Views.MessageBoxInteractionView.SetDefaultResult(System.Windows.MessageBoxResult)">
            <summary>
            Establece el resultado por defecto de la pantalla.
            </summary>
            <param name="defaultResult">El resultado por defecto.</param>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.Dialogs.Views.MessageBoxInteractionView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.MathUtil.IncrementDecrementNumber(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Validates the string passed by parsing it as int and checking if it is inside the bounds specified 
            then the resulting int will be incremented/decremented
            </summary>
            <param name="num">The string to parse as int and increment/decrement</param>
            <param name="minValue">The min value for the bound checking</param>
            <param name="maxVal">The max value for the bounds checking</param>
            <param name="increment">Pass true to increment and false to decrement</param>
            <returns>Returns the new number incremented or decremeneted</returns>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.MathUtil.ValidateNumber(System.String,System.Int32,System.Int32)">
            <summary>
            Parses the number and makes sure that it is within the bounds specified
            </summary>
            <param name="newNum">The string to parse and validate</param>
            <param name="minValue">The min value for the bound checking</param>
            <param name="maxValue">The max value for the bound checking</param>
            <returns>Returns the int that was constructed from the string + bound checking</returns>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.MathUtil.ValidateNumber(System.Int32,System.Int32,System.Int32)">
            <summary>
            makes sure that the number is within the bounds specified
            </summary>
            <param name="newNum">The number to validate</param>
            <param name="minValue">The min value for the bound checking</param>
            <param name="maxValue">The max value for the bound checking</param>
            <returns>Returns the int that was constructed from the string + bound checking</returns>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.TimePicker.MinTime">
            <summary>
            Gets or sets the minimum time that can be selected
            </summary>
        </member>
        <member name="F:Inflexion2.UX.WPF.Controls.TimePicker.MinTimeProperty">
            <summary>
            Gets or sets the minimum time selected
            </summary>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.TimePicker.MaxTime">
            <summary>
            Gets or sets the maximum time that can be selected
            </summary>
        </member>
        <member name="F:Inflexion2.UX.WPF.Controls.TimePicker.MaxTimeProperty">
            <summary>
            Gets or sets the maximum time that can be selected
            </summary>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.TimePicker.SelectedTime">
            <summary>
            Gets or sets the selected timestamp 
            </summary>
        </member>
        <member name="F:Inflexion2.UX.WPF.Controls.TimePicker.SelectedTimeProperty">
            <summary>
            Backing store for the selected timestamp 
            </summary>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.TimePicker.SelectedHour">
            <summary>
            Gets or sets the selected Hour
            </summary>
        </member>
        <member name="F:Inflexion2.UX.WPF.Controls.TimePicker.SelectedHourProperty">
            <summary>
            Backing store for the selected hour
            </summary>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.TimePicker.SelectedMinute">
            <summary>
            Gets or sets the selected minutes
            </summary>
        </member>
        <member name="F:Inflexion2.UX.WPF.Controls.TimePicker.SelectedMinuteProperty">
            <summary>
            Backing store for the selected minsutes
            </summary>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.TimePicker.SelectedSecond">
            <summary>
            Gets or sets the selected second
            </summary>
        </member>
        <member name="F:Inflexion2.UX.WPF.Controls.TimePicker.SelectedSecondProperty">
            <summary>
            Backing store for the selected second
            </summary>
        </member>
        <member name="F:Inflexion2.UX.WPF.Controls.TimePicker.SelectedTimeChangedEvent">
            <summary>
            
            </summary>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.TimePicker.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.TimePicker.#cctor">
            <summary>
            Static constructor
            </summary>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.TimePicker.OnApplyTemplate">
            <summary>
            override to hook to the Control template elements
            </summary>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.TimePicker.ExposeTryFocusNeighbourControl(System.Windows.Controls.TextBox,System.Windows.Controls.TextBox,System.Windows.Controls.TextBox,System.Windows.Input.Key)">
            <summary>
            Exposes TryFocusNeighbourControl
            </summary>
            <param name="currentControl"></param>
            <param name="leftControl"></param>
            <param name="rightControl"></param>
            <param name="keyPressed"></param>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.TimePicker.ExposeAdjustCarretIndexOrMoveToNeighbour(System.Windows.Controls.TextBox,System.Windows.Controls.TextBox)">
            <summary>
            Exposes the AdjustCarretIndexOrMoveToNeighbour
            </summary>
            <param name="current"></param>
            <param name="neighbour"></param>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.TimePicker.ExposeTrimSelectedText(System.Windows.Controls.TextBox)">
            <summary>
            Exposes the TrimSelectedText method
            </summary>
            <param name="textBox"></param>
        </member>
        <member name="T:Inflexion2.UX.WPF.Controls.TimeSelectedChangedEventHandler">
            <summary>
            Delegate for the TimeSelectedChanged event
            </summary>
            <param name="sender">The object raising the event</param>
            <param name="e">The routed event arguments</param>
        </member>
        <member name="T:Inflexion2.UX.WPF.Controls.TimeSelectedChangedRoutedEventArgs">
            <summary>
            Routed event arguments for the TimeSelectedChanged event
            </summary>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.TimeSelectedChangedRoutedEventArgs.NewTime">
            <summary>
            Gets or sets the new time
            </summary>
        </member>
        <member name="P:Inflexion2.UX.WPF.Controls.TimeSelectedChangedRoutedEventArgs.OldTime">
            <summary>
            Gets or sets the old time
            </summary>
        </member>
        <member name="M:Inflexion2.UX.WPF.Controls.TimeSelectedChangedRoutedEventArgs.#ctor(System.Windows.RoutedEvent)">
            <summary>
            Constructor
            </summary>
            <param name="routedEvent">The event that is raised </param>
        </member>
        <member name="T:Inflexion2.UX.WPF.Controls.Controls.ToggleButton.LockableToggleButton">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="T:Inflexion2.UX.WPF.Controls.MyTextBox">
            <summary>
            Password watermarking code from: http://prabu-guru.blogspot.com/2010/06/how-to-add-watermark-text-to-textbox.html
            </summary>
            <remarks>
            Sin comentarios adicionales.
            </remarks>
        </member>
    </members>
</doc>
