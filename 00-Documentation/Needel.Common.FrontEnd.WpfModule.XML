<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Needel.Common.FrontEnd.WpfModule</name>
    </assembly>
    <members>
        <member name="T:Needel.Common.FrontEnd.WpfModule.CommonModule">
            <summary>
            .en class module implementation. 
            This implementation become the compiled dll of this project on a module dynamically loaded by the 
            main programm.
            .es implementación de la clases "module". Esta implementación convierte la ddl de la compilación 
            de este proyecto en un modulo que puede ser cargado por el programa principal de forma dinamica. 
            (en tiempo de ejecución)
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.CommonModule.Initialize">
            <summary>
            .en module initialization.
            .es Inicializa el módulo.
            </summary>
            <remarks>
            .en Register the controls whose has to be always available
            with iregionmanager of Prism and the controls whose has to available on demand
            with the inyection unity container. The controls on-demand will be loaded when
            the method IregionManager.RequestNavigate() would be executed.
            
            .es Registramos los controles que han de estar siempre disponibles
            con el gestor de regiones Prism (IRegionManager), y los controles que
            han de solicitarse (bajo demanda) con el contenedor de inyección de
            dependencias Unity.  Los controles bajo demanda serán cargados cuando
            se invoque el método "IregionManager.RequestNavigate()".
            </remarks>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.AddressQueryView">
            <summary>
            .en Interaction logic for AddressQueryView.xaml
            .es Logica de interación para la vista AddressQueryView.xaml
            </summary>
            <summary>
            AddressQueryView
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AddressQueryView.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:AddressQueryView"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:AddressQueryView"/>.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AddressQueryView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.AddressView">
            <summary>
            .en Interaction logic for AddressView.xaml
            .es Logica de interación para la vista AddressView.xaml
            </summary>
            <remarks>
            .en No coment
            .es Sin comentarios adicionales.
            </remarks>
            <summary>
            AddressView
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AddressView.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:AddressView"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:AddressView"/>.
            </summary>
            <remarks>
            .en No coment
            .es Sin comentarios adicionales.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AddressView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.AppSettingQueryView">
            <summary>
            .en Interaction logic for AppSettingQueryView.xaml
            .es Logica de interación para la vista AppSettingQueryView.xaml
            </summary>
            <summary>
            AppSettingQueryView
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AppSettingQueryView.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:AppSettingQueryView"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:AppSettingQueryView"/>.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AppSettingQueryView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.AppSettingView">
            <summary>
            .en Interaction logic for AppSettingView.xaml
            .es Logica de interación para la vista AppSettingView.xaml
            </summary>
            <remarks>
            .en No coment
            .es Sin comentarios adicionales.
            </remarks>
            <summary>
            AppSettingView
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AppSettingView.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:AppSettingView"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:AppSettingView"/>.
            </summary>
            <remarks>
            .en No coment
            .es Sin comentarios adicionales.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AppSettingView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.ComponentQueryView">
            <summary>
            .en Interaction logic for ComponentQueryView.xaml
            .es Logica de interación para la vista ComponentQueryView.xaml
            </summary>
            <summary>
            ComponentQueryView
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.ComponentQueryView.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:ComponentQueryView"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:ComponentQueryView"/>.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.ComponentQueryView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.ComponentView">
            <summary>
            .en Interaction logic for ComponentView.xaml
            .es Logica de interación para la vista ComponentView.xaml
            </summary>
            <remarks>
            .en No coment
            .es Sin comentarios adicionales.
            </remarks>
            <summary>
            ComponentView
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.ComponentView.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:ComponentView"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:ComponentView"/>.
            </summary>
            <remarks>
            .en No coment
            .es Sin comentarios adicionales.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.ComponentView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.DepartmentQueryView">
            <summary>
            .en Interaction logic for DepartmentQueryView.xaml
            .es Logica de interación para la vista DepartmentQueryView.xaml
            </summary>
            <summary>
            DepartmentQueryView
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.DepartmentQueryView.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:DepartmentQueryView"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:DepartmentQueryView"/>.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.DepartmentQueryView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.DepartmentView">
            <summary>
            .en Interaction logic for DepartmentView.xaml
            .es Logica de interación para la vista DepartmentView.xaml
            </summary>
            <remarks>
            .en No coment
            .es Sin comentarios adicionales.
            </remarks>
            <summary>
            DepartmentView
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.DepartmentView.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:DepartmentView"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:DepartmentView"/>.
            </summary>
            <remarks>
            .en No coment
            .es Sin comentarios adicionales.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.DepartmentView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.EntityMQueryView">
            <summary>
            .en Interaction logic for EntityMQueryView.xaml
            .es Logica de interación para la vista EntityMQueryView.xaml
            </summary>
            <summary>
            EntityMQueryView
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityMQueryView.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:EntityMQueryView"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:EntityMQueryView"/>.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityMQueryView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.EntityMView">
            <summary>
            .en Interaction logic for EntityMView.xaml
            .es Logica de interación para la vista EntityMView.xaml
            </summary>
            <remarks>
            .en No coment
            .es Sin comentarios adicionales.
            </remarks>
            <summary>
            EntityMView
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityMView.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:EntityMView"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:EntityMView"/>.
            </summary>
            <remarks>
            .en No coment
            .es Sin comentarios adicionales.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityMView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.EntityNQueryView">
            <summary>
            .en Interaction logic for EntityNQueryView.xaml
            .es Logica de interación para la vista EntityNQueryView.xaml
            </summary>
            <summary>
            EntityNQueryView
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityNQueryView.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:EntityNQueryView"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:EntityNQueryView"/>.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityNQueryView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.EntityNView">
            <summary>
            .en Interaction logic for EntityNView.xaml
            .es Logica de interación para la vista EntityNView.xaml
            </summary>
            <remarks>
            .en No coment
            .es Sin comentarios adicionales.
            </remarks>
            <summary>
            EntityNView
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityNView.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:EntityNView"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:EntityNView"/>.
            </summary>
            <remarks>
            .en No coment
            .es Sin comentarios adicionales.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityNView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.EntityZQueryView">
            <summary>
            .en Interaction logic for EntityZQueryView.xaml
            .es Logica de interación para la vista EntityZQueryView.xaml
            </summary>
            <summary>
            EntityZQueryView
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityZQueryView.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:EntityZQueryView"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:EntityZQueryView"/>.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityZQueryView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.EntityZView">
            <summary>
            .en Interaction logic for EntityZView.xaml
            .es Logica de interación para la vista EntityZView.xaml
            </summary>
            <remarks>
            .en No coment
            .es Sin comentarios adicionales.
            </remarks>
            <summary>
            EntityZView
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityZView.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:EntityZView"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:EntityZView"/>.
            </summary>
            <remarks>
            .en No coment
            .es Sin comentarios adicionales.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityZView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.GraphNodeQueryView">
            <summary>
            .en Interaction logic for GraphNodeQueryView.xaml
            .es Logica de interación para la vista GraphNodeQueryView.xaml
            </summary>
            <summary>
            GraphNodeQueryView
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.GraphNodeQueryView.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:GraphNodeQueryView"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:GraphNodeQueryView"/>.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.GraphNodeQueryView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.GraphNodeView">
            <summary>
            .en Interaction logic for GraphNodeView.xaml
            .es Logica de interación para la vista GraphNodeView.xaml
            </summary>
            <remarks>
            .en No coment
            .es Sin comentarios adicionales.
            </remarks>
            <summary>
            GraphNodeView
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.GraphNodeView.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:GraphNodeView"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:GraphNodeView"/>.
            </summary>
            <remarks>
            .en No coment
            .es Sin comentarios adicionales.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.GraphNodeView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.MNZQueryView">
            <summary>
            .en Interaction logic for MNZQueryView.xaml
            .es Logica de interación para la vista MNZQueryView.xaml
            </summary>
            <summary>
            MNZQueryView
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.MNZQueryView.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:MNZQueryView"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:MNZQueryView"/>.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.MNZQueryView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.MNZView">
            <summary>
            .en Interaction logic for MNZView.xaml
            .es Logica de interación para la vista MNZView.xaml
            </summary>
            <remarks>
            .en No coment
            .es Sin comentarios adicionales.
            </remarks>
            <summary>
            MNZView
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.MNZView.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:MNZView"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:MNZView"/>.
            </summary>
            <remarks>
            .en No coment
            .es Sin comentarios adicionales.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.MNZView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.StudentQueryView">
            <summary>
            .en Interaction logic for StudentQueryView.xaml
            .es Logica de interación para la vista StudentQueryView.xaml
            </summary>
            <summary>
            StudentQueryView
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.StudentQueryView.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:StudentQueryView"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:StudentQueryView"/>.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.StudentQueryView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.StudentView">
            <summary>
            .en Interaction logic for StudentView.xaml
            .es Logica de interación para la vista StudentView.xaml
            </summary>
            <remarks>
            .en No coment
            .es Sin comentarios adicionales.
            </remarks>
            <summary>
            StudentView
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.StudentView.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:StudentView"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:StudentView"/>.
            </summary>
            <remarks>
            .en No coment
            .es Sin comentarios adicionales.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.StudentView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.TeacherQueryView">
            <summary>
            .en Interaction logic for TeacherQueryView.xaml
            .es Logica de interación para la vista TeacherQueryView.xaml
            </summary>
            <summary>
            TeacherQueryView
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.TeacherQueryView.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:TeacherQueryView"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:TeacherQueryView"/>.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.TeacherQueryView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.TeacherView">
            <summary>
            .en Interaction logic for TeacherView.xaml
            .es Logica de interación para la vista TeacherView.xaml
            </summary>
            <remarks>
            .en No coment
            .es Sin comentarios adicionales.
            </remarks>
            <summary>
            TeacherView
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.TeacherView.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:TeacherView"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:TeacherView"/>.
            </summary>
            <remarks>
            .en No coment
            .es Sin comentarios adicionales.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.TeacherView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.UserQueryView">
            <summary>
            .en Interaction logic for UserQueryView.xaml
            .es Logica de interación para la vista UserQueryView.xaml
            </summary>
            <summary>
            UserQueryView
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.UserQueryView.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:UserQueryView"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:UserQueryView"/>.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.UserQueryView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.UserView">
            <summary>
            .en Interaction logic for UserView.xaml
            .es Logica de interación para la vista UserView.xaml
            </summary>
            <remarks>
            .en No coment
            .es Sin comentarios adicionales.
            </remarks>
            <summary>
            UserView
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.UserView.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:UserView"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:UserView"/>.
            </summary>
            <remarks>
            .en No coment
            .es Sin comentarios adicionales.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.UserView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.AddressQueryViewModel">
            <summary>
            .en Interaction logic for AddressQueryView.xaml
            .es Logica de interación para la vista AddressQueryView.xaml
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AddressQueryViewModel.#ctor(System.String)">
            <summary>
            .en Initialize a new instace for the class <see cref="T:AddressQueryViewModel"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:AddressQueryViewModel"/>.
            </summary>
            <param name="parentViewName"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AddressQueryViewModel.#ctor(Inflexion2.Application.SpecificationDto,System.String)">
            <summary>
            .en Constructor for nested view models in master detail from parent entities and Many to many.
            </summary>
            <param name="baseFilter"></param>
            <param name="parentViewName"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AddressQueryViewModel.#ctor(System.Collections.Generic.IList{Needel.Common.Application.Dtos.AddressDto},System.String)">
            <summary>
            .en View Model constructor from collection of Dtos.
            </summary>
            <param name="collection"></param>
            <param name="parentViewName"></param>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.AddressQueryViewModel.ChangeActivateStatusCommand">
            <summary>
            .en Property to get the command of changing state.
            .es Propiedad que obtiene el comando de cambio de estado.
            </summary>
            <value>
            Valor utilizado para obtener el comando de cambio de estado.
            </value>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AddressQueryViewModel.OnDeleteRecord(System.Object)">
            <summary>
            Método público encargado del borrado de una entidad.
            </summary>
            <param name="parameter">
            Parámetro con información adicional.
            </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AddressQueryViewModel.OnGetRecords(System.Object)">
            <summary>
            .en get records from Address.
            .es Método encargado de obtener todos los registros de Address.
            </summary>
            <param name="parameter">
            .en parameter with additional info
            .es Parámetro con información adicional.
            </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AddressQueryViewModel.CanGetRecords(System.Object)">
            <summary>
            Esta entidad no es root y no tiene propiedad de navegación por tanto no puede hacerse un get records
            solo se puede navegar a traves de los existentes.
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AddressQueryViewModel.ResetAddress">
            <summary>
            .es Método privado para resetear el ViewModel.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AddressQueryViewModel.OnNavigatedTo(Microsoft.Practices.Prism.Regions.NavigationContext)">
            <summary>
            .en refresh the collection of items raising a property changed event
            </summary>
            <param name="navigationContext"></param>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.AddressViewModel">
            <summary>
            .en Interaction logic for AddressViewModel.xaml
            .es Logica de interación para la vista AddressViewModel.xaml
            </summary>
        </member>
        <member name="F:Needel.Common.FrontEnd.WpfModule.AddressViewModel.from1VM">
            <summary>
            Campo para indicar que el viewmodel esta embevido en un viewmodel parental con el objeto de 
            de asegurar que se añade al menos un registro en esta entidad cuando se crea el padre de esta.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AddressViewModel.#ctor">
            <summary>
            .en Parameterless constructor to implement the "IEditable" interface in query viewmodels that allow "editable row"
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AddressViewModel.#ctor(System.Boolean)">
            <summary>
            .en Initialize a new instace for the class <see cref="T:AddressViewModel"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:AddressViewModel"/>.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AddressViewModel.#ctor(Needel.Common.Application.Dtos.AddressDto,System.Boolean)">
            <summary>
            .es Inicializa una nueva instancia de la clase <see cref="T:UserViewModel"/>.
            Este constructor se invoca desde el QueryViewModel ya que para cada 
            linea que se visualiza en la lista de Usuarios se crea el Viewmodel de dicho usuario.
            Esta lista se almacena en una observable collection en el query view model con la que se hace el binding 
            de la pantalla query.
            Por esta razon las entidades relacionadas no se cargan si no se navega hasta esta entidad.
            </summary>
            <param name="element">
            Parámetro de tipo <see cref="T:Needel.Common.Application.Dtos.AddressDto"/> que contiene la información necesaria.
            </param>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.AddressViewModel.StreetName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.AddressViewModel.BuildingNumber">
            <summary>
            
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.AddressViewModel.From1VM">
            <summary>
            Campo para indicar que el viewmodel esta embebido en un viewmodel parental con el objeto de 
            de asegurar que se añade al menos un registro en esta entidad cuando se crea el padre de esta.
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.AddressViewModel.UserAddress">
            <summary>
            Wraper property to help binding  
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.AddressViewModel.UsersCombo">
            <summary>
            .en Collection where to chose one parent from combobox for collections smaller than 50
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.AddressViewModel.AllUsersQueryVM">
            <summary>
            .en Collection where to chose one parent from datagrid for collections greater than 50
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.AddressViewModel.AllUserAddressQueryVM">
            <summary>
            collection for drag and drop
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.AddressViewModel.User1VM">
            <summary>
            
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AddressViewModel.GetById(System.Int32)">
            <summary>.es Obtener el dto de la entidad Address por su identificador.</summary>
            <param name="identifier">.es Parámetro que indica el identificador de la entidad que se va a recuperar.</param>
            <returns>.es Devuelve el objeto Dto <see cref="T:Needel.Common.Application.Dtos.AddressDto"/> correspondiente.</returns>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AddressViewModel.OnSaveRecord(System.Object)">
            <summary>.es Crear o actualizar una entidad de tipo Address.</summary>
            <param name="parameter">data to update.</param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AddressViewModel.OnNewRecord(System.Object)">
            <summary>.en Create a new Address</summary>
            <param name="parameter">.en Data to create the new Address</param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AddressViewModel.SetupValidation(MvvmValidation.ValidationHelper)">
            <summary>
            example to execute validation rules
            </summary>
            <param name="validation"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AddressViewModel.OnNavigatedTo(Microsoft.Practices.Prism.Regions.NavigationContext)">
            <summary>
            .en Here is possible to override the actions to execute when there is a navigation request
            </summary>
            <remarks>
             this logic applys when you came from the collection of users through double click
             load parent entities and populate the related combobox with unique value
            .en Here is where to call to the methods to load the related entities (children and parents).
            .es aqui es donde se invoca a los métodos de carga de las entidades adicionales.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AddressViewModel.BeginEdit">
            <summary>
            override of Generic BeginEdit to avoid the edition in the blank line of query viewmodel with double click
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.AppSettingQueryViewModel">
            <summary>
            .en Interaction logic for AppSettingQueryView.xaml
            .es Logica de interación para la vista AppSettingQueryView.xaml
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AppSettingQueryViewModel.#ctor(System.String)">
            <summary>
            .en Initialize a new instace for the class <see cref="T:AppSettingQueryViewModel"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:AppSettingQueryViewModel"/>.
            </summary>
            <param name="parentViewName"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AppSettingQueryViewModel.#ctor(Inflexion2.Application.SpecificationDto,System.String)">
            <summary>
            .en Constructor for nested view models in master detail from parent entities and Many to many.
            </summary>
            <param name="baseFilter"></param>
            <param name="parentViewName"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AppSettingQueryViewModel.#ctor(System.Collections.Generic.IList{Needel.Common.Application.Dtos.AppSettingDto},System.String)">
            <summary>
            .en View Model constructor from collection of Dtos.
            </summary>
            <param name="collection"></param>
            <param name="parentViewName"></param>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.AppSettingQueryViewModel.ChangeActivateStatusCommand">
            <summary>
            .en Property to get the command of changing state.
            .es Propiedad que obtiene el comando de cambio de estado.
            </summary>
            <value>
            Valor utilizado para obtener el comando de cambio de estado.
            </value>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AppSettingQueryViewModel.OnDeleteRecord(System.Object)">
            <summary>
            Método público encargado del borrado de una entidad.
            </summary>
            <param name="parameter">
            Parámetro con información adicional.
            </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AppSettingQueryViewModel.OnGetRecords(System.Object)">
            <summary>
            .en get records from AppSetting.
            .es Método encargado de obtener todos los registros de AppSetting.
            </summary>
            <param name="parameter">
            .en parameter with additional info
            .es Parámetro con información adicional.
            </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AppSettingQueryViewModel.ResetAppSetting">
            <summary>
            .es Método privado para resetear el ViewModel.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AppSettingQueryViewModel.OnNavigatedTo(Microsoft.Practices.Prism.Regions.NavigationContext)">
            <summary>
            .en refresh the collection of items raising a property changed event
            </summary>
            <param name="navigationContext"></param>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.AppSettingViewModel">
            <summary>
            .en Interaction logic for AppSettingViewModel.xaml
            .es Logica de interación para la vista AppSettingViewModel.xaml
            </summary>
        </member>
        <member name="F:Needel.Common.FrontEnd.WpfModule.AppSettingViewModel.from1VM">
            <summary>
            Campo para indicar que el viewmodel esta embevido en un viewmodel parental con el objeto de 
            de asegurar que se añade al menos un registro en esta entidad cuando se crea el padre de esta.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AppSettingViewModel.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:AppSettingViewModel"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:AppSettingViewModel"/>.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AppSettingViewModel.#ctor(Needel.Common.Application.Dtos.AppSettingDto,System.Boolean)">
            <summary>
            .es Inicializa una nueva instancia de la clase <see cref="T:UserViewModel"/>.
            Este constructor se invoca desde el QueryViewModel ya que para cada 
            linea que se visualiza en la lista de Usuarios se crea el Viewmodel de dicho usuario.
            Esta lista se almacena en una observable collection en el query view model con la que se hace el binding 
            de la pantalla query.
            Por esta razon las entidades relacionadas no se cargan si no se navega hasta esta entidad.
            </summary>
            <param name="element">
            Parámetro de tipo <see cref="T:Needel.Common.Application.Dtos.AppSettingDto"/> que contiene la información necesaria.
            </param>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.AppSettingViewModel.Key">
            <summary>
            App setting identity
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.AppSettingViewModel.Value">
            <summary>
            
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.AppSettingViewModel.Remark">
            <summary>
            Explanation of the meaning or use of this  key value par.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AppSettingViewModel.GetById(System.Int32)">
            <summary>.es Obtener el dto de la entidad AppSetting por su identificador.</summary>
            <param name="identifier">.es Parámetro que indica el identificador de la entidad que se va a recuperar.</param>
            <returns>.es Devuelve el objeto Dto <see cref="T:Needel.Common.Application.Dtos.AppSettingDto"/> correspondiente.</returns>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AppSettingViewModel.OnSaveRecord(System.Object)">
            <summary>.es Crear o actualizar una entidad de tipo AppSetting.</summary>
            <param name="parameter">data to update.</param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AppSettingViewModel.OnNewRecord(System.Object)">
            <summary>.en Create a new AppSetting</summary>
            <param name="parameter">.en Data to create the new AppSetting</param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AppSettingViewModel.SetupValidation(MvvmValidation.ValidationHelper)">
            <summary>
            example to execute validation rules
            </summary>
            <param name="validation"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AppSettingViewModel.OnNavigatedTo(Microsoft.Practices.Prism.Regions.NavigationContext)">
            <summary>
            .en Here is possible to override the actions to execute when there is a navigation request
            </summary>
            <remarks>
             this logic applys when you came from the collection of users through double click
             load parent entities and populate the related combobox with unique value
            .en Here is where to call to the methods to load the related entities (children and parents).
            .es aqui es donde se invoca a los métodos de carga de las entidades adicionales.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.AppSettingViewModel.BeginEdit">
            <summary>
            override of Generic BeginEdit to avoid the edition in the blank line of query viewmodel with double click
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.ComponentQueryViewModel">
            <summary>
            .en Interaction logic for ComponentQueryView.xaml
            .es Logica de interación para la vista ComponentQueryView.xaml
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.ComponentQueryViewModel.#ctor(System.String)">
            <summary>
            .en Initialize a new instace for the class <see cref="T:ComponentQueryViewModel"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:ComponentQueryViewModel"/>.
            </summary>
            <param name="parentViewName"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.ComponentQueryViewModel.#ctor(Inflexion2.Application.SpecificationDto,System.String)">
            <summary>
            .en Constructor for nested view models in master detail from parent entities and Many to many.
            </summary>
            <param name="baseFilter"></param>
            <param name="parentViewName"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.ComponentQueryViewModel.#ctor(System.Collections.Generic.IList{Needel.Common.Application.Dtos.ComponentDto},System.String)">
            <summary>
            .en View Model constructor from collection of Dtos.
            </summary>
            <param name="collection"></param>
            <param name="parentViewName"></param>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.ComponentQueryViewModel.ChangeActivateStatusCommand">
            <summary>
            .en Property to get the command of changing state.
            .es Propiedad que obtiene el comando de cambio de estado.
            </summary>
            <value>
            Valor utilizado para obtener el comando de cambio de estado.
            </value>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.ComponentQueryViewModel.OnDeleteRecord(System.Object)">
            <summary>
            Método público encargado del borrado de una entidad.
            </summary>
            <param name="parameter">
            Parámetro con información adicional.
            </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.ComponentQueryViewModel.OnGetRecords(System.Object)">
            <summary>
            .en get records from Component.
            .es Método encargado de obtener todos los registros de Component.
            </summary>
            <param name="parameter">
            .en parameter with additional info
            .es Parámetro con información adicional.
            </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.ComponentQueryViewModel.OnGetFirstPageRecords(System.Object)">
            <summary>
            .en Get First Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la primera página de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.ComponentQueryViewModel.OnGetNextPageRecords(System.Object)">
            <summary>
            .en Get Next Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la siguiente página de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.ComponentQueryViewModel.OnGetPreviousPageRecords(System.Object)">
            <summary>
            .en Get Previus Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la página anterior de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.ComponentQueryViewModel.OnGetLastPageRecords(System.Object)">
            <summary>
            .en Get Last Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la ultima página de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.ComponentQueryViewModel.ResetComponent">
            <summary>
            .es Método privado para resetear el ViewModel.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.ComponentQueryViewModel.OnNavigatedTo(Microsoft.Practices.Prism.Regions.NavigationContext)">
            <summary>
            .en refresh the collection of items raising a property changed event
            </summary>
            <param name="navigationContext"></param>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.ComponentViewModel">
            <summary>
            .en Interaction logic for ComponentViewModel.xaml
            .es Logica de interación para la vista ComponentViewModel.xaml
            </summary>
        </member>
        <member name="F:Needel.Common.FrontEnd.WpfModule.ComponentViewModel.from1VM">
            <summary>
            Campo para indicar que el viewmodel esta embevido en un viewmodel parental con el objeto de 
            de asegurar que se añade al menos un registro en esta entidad cuando se crea el padre de esta.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.ComponentViewModel.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:ComponentViewModel"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:ComponentViewModel"/>.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.ComponentViewModel.#ctor(Needel.Common.Application.Dtos.ComponentDto,Needel.Common.Application.Dtos.ComponentDto,Needel.Common.Application.Dtos.ComponentDto,Needel.Common.Application.Dtos.ComponentDto,Needel.Common.Application.Dtos.ComponentDto)">
            <summary>
            .en Child composed constructor <see cref="T:ComponentViewModel"/>.
            This constructor is used to be the viewmodel of a nested viemodel in a hierchahy.
            </summary>
            <param name="element">
            .en Parameter of type <see cref="T:Needel.Common.Application.Dtos.ComponentDto"/> with all the related data.</param>
            <param name="first">first element in the current paged collection</param>
            <param name="previous">last element in the current paged collection</param>
            <param name="next">next element in the current paged collection</param>
            <param name="last">last element in the current paged collection</param>
            <remarks>
            .en these initialization are to allow navigation betwen pages and not only next record. TODO: test this.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.ComponentViewModel.#ctor(Needel.Common.Application.Dtos.ComponentDto,System.Boolean)">
            <summary>
            .es Inicializa una nueva instancia de la clase <see cref="T:UserViewModel"/>.
            Este constructor se invoca desde el QueryViewModel ya que para cada 
            linea que se visualiza en la lista de Usuarios se crea el Viewmodel de dicho usuario.
            Esta lista se almacena en una observable collection en el query view model con la que se hace el binding 
            de la pantalla query.
            Por esta razon las entidades relacionadas no se cargan si no se navega hasta esta entidad.
            </summary>
            <param name="element">
            Parámetro de tipo <see cref="T:Needel.Common.Application.Dtos.ComponentDto"/> que contiene la información necesaria.
            </param>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.ComponentViewModel.Name">
            <summary>
            Name of component
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.ComponentViewModel.PartNumber">
            <summary>
            
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.ComponentViewModel.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.ComponentViewModel.Parent">
            <summary>
            Wraper property to help binding  
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.ComponentViewModel.ComponentsCombo">
            <summary>
            .en Collection where to chose one parent from combobox for collections smaller than 50
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.ComponentViewModel.AllComponentsQueryVM">
            <summary>
            .en Collection where to chose one parent from datagrid for collections greater than 50
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.ComponentViewModel.Children">
            <summary>
            Property helper to allow easy access to the children properties
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.ComponentViewModel.ChildrenQueryVM">
            <summary>
            
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.ComponentViewModel.GetById(System.Int32)">
            <summary>.es Obtener el dto de la entidad Component por su identificador.</summary>
            <param name="identifier">.es Parámetro que indica el identificador de la entidad que se va a recuperar.</param>
            <returns>.es Devuelve el objeto Dto <see cref="T:Needel.Common.Application.Dtos.ComponentDto"/> correspondiente.</returns>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.ComponentViewModel.OnSaveRecord(System.Object)">
            <summary>.es Crear o actualizar una entidad de tipo Component.</summary>
            <param name="parameter">data to update.</param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.ComponentViewModel.OnNewRecord(System.Object)">
            <summary>.en Create a new Component</summary>
            <param name="parameter">.en Data to create the new Component</param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.ComponentViewModel.SetupValidation(MvvmValidation.ValidationHelper)">
            <summary>
            example to execute validation rules
            </summary>
            <param name="validation"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.ComponentViewModel.OnNavigatedTo(Microsoft.Practices.Prism.Regions.NavigationContext)">
            <summary>
            .en Here is possible to override the actions to execute when there is a navigation request
            </summary>
            <remarks>
             this logic applys when you came from the collection of users through double click
             load parent entities and populate the related combobox with unique value
            .en Here is where to call to the methods to load the related entities (children and parents).
            .es aqui es donde se invoca a los métodos de carga de las entidades adicionales.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.ComponentViewModel.OnReceiveCompositeViewUpdateEvent(System.String)">
            <summary>. en Action to execute when there is a call to update the view.</summary>
            <param name="message"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.ComponentViewModel.BeginEdit">
            <summary>
            override of Generic BeginEdit to avoid the edition in the blank line of query viewmodel with double click
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.DepartmentQueryViewModel">
            <summary>
            .en Interaction logic for DepartmentQueryView.xaml
            .es Logica de interación para la vista DepartmentQueryView.xaml
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.DepartmentQueryViewModel.#ctor(System.String)">
            <summary>
            .en Initialize a new instace for the class <see cref="T:DepartmentQueryViewModel"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:DepartmentQueryViewModel"/>.
            </summary>
            <param name="parentViewName"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.DepartmentQueryViewModel.#ctor(System.Collections.Generic.IList{Needel.Common.Application.Dtos.DepartmentDto},System.String)">
            <summary>
            .en View Model constructor from collection of Dtos.
            </summary>
            <param name="collection"></param>
            <param name="parentViewName"></param>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.DepartmentQueryViewModel.ChangeActivateStatusCommand">
            <summary>
            .en Property to get the command of changing state.
            .es Propiedad que obtiene el comando de cambio de estado.
            </summary>
            <value>
            Valor utilizado para obtener el comando de cambio de estado.
            </value>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.DepartmentQueryViewModel.OnDeleteRecord(System.Object)">
            <summary>
            Método público encargado del borrado de una entidad.
            </summary>
            <param name="parameter">
            Parámetro con información adicional.
            </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.DepartmentQueryViewModel.OnGetRecords(System.Object)">
            <summary>
            .en get records from Department.
            .es Método encargado de obtener todos los registros de Department.
            </summary>
            <param name="parameter">
            .en parameter with additional info
            .es Parámetro con información adicional.
            </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.DepartmentQueryViewModel.OnGetFirstPageRecords(System.Object)">
            <summary>
            .en Get First Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la primera página de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.DepartmentQueryViewModel.OnGetNextPageRecords(System.Object)">
            <summary>
            .en Get Next Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la siguiente página de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.DepartmentQueryViewModel.OnGetPreviousPageRecords(System.Object)">
            <summary>
            .en Get Previus Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la página anterior de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.DepartmentQueryViewModel.OnGetLastPageRecords(System.Object)">
            <summary>
            .en Get Last Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la ultima página de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.DepartmentQueryViewModel.ResetDepartment">
            <summary>
            .es Método privado para resetear el ViewModel.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.DepartmentQueryViewModel.OnNavigatedTo(Microsoft.Practices.Prism.Regions.NavigationContext)">
            <summary>
            .en refresh the collection of items raising a property changed event
            </summary>
            <param name="navigationContext"></param>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.DepartmentViewModel">
            <summary>
            .en Interaction logic for DepartmentViewModel.xaml
            .es Logica de interación para la vista DepartmentViewModel.xaml
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.DepartmentViewModel.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:DepartmentViewModel"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:DepartmentViewModel"/>.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.DepartmentViewModel.#ctor(Needel.Common.Application.Dtos.DepartmentDto,Needel.Common.Application.Dtos.DepartmentDto,Needel.Common.Application.Dtos.DepartmentDto,Needel.Common.Application.Dtos.DepartmentDto,Needel.Common.Application.Dtos.DepartmentDto)">
            <summary>
            .en Child composed constructor <see cref="T:DepartmentViewModel"/>.
            This constructor is used to be the viewmodel of a nested viemodel in a hierchahy.
            </summary>
            <param name="element">
            .en Parameter of type <see cref="T:Needel.Common.Application.Dtos.DepartmentDto"/> with all the related data.</param>
            <param name="first">first element in the current paged collection</param>
            <param name="previous">last element in the current paged collection</param>
            <param name="next">next element in the current paged collection</param>
            <param name="last">last element in the current paged collection</param>
            <remarks>
            .en these initialization are to allow navigation betwen pages and not only next record. TODO: test this.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.DepartmentViewModel.#ctor(Needel.Common.Application.Dtos.DepartmentDto,System.Boolean)">
            <summary>
            .es Inicializa una nueva instancia de la clase <see cref="T:UserViewModel"/>.
            Este constructor se invoca desde el QueryViewModel ya que para cada 
            linea que se visualiza en la lista de Usuarios se crea el Viewmodel de dicho usuario.
            Esta lista se almacena en una observable collection en el query view model con la que se hace el binding 
            de la pantalla query.
            Por esta razon las entidades relacionadas no se cargan si no se navega hasta esta entidad.
            </summary>
            <param name="element">
            Parámetro de tipo <see cref="T:Needel.Common.Application.Dtos.DepartmentDto"/> que contiene la información necesaria.
            </param>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.DepartmentViewModel.Name">
            <summary>
            Name of the department.
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.DepartmentViewModel.Visible">
            <summary>
            visibility mark
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.DepartmentViewModel.Description">
            <summary>
            Allow to the user to explain what is the responsabilities or functions of the department.
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.DepartmentViewModel.CreationTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.DepartmentViewModel.UpdateTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.DepartmentViewModel.Users">
            <summary>
            Property helper to allow easy access to the children properties
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.DepartmentViewModel.UsersQueryVM">
            <summary>
            
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.DepartmentViewModel.GetById(System.Int32)">
            <summary>.es Obtener el dto de la entidad Department por su identificador.</summary>
            <param name="identifier">.es Parámetro que indica el identificador de la entidad que se va a recuperar.</param>
            <returns>.es Devuelve el objeto Dto <see cref="T:Needel.Common.Application.Dtos.DepartmentDto"/> correspondiente.</returns>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.DepartmentViewModel.OnSaveRecord(System.Object)">
            <summary>.es Crear o actualizar una entidad de tipo Department.</summary>
            <param name="parameter">data to update.</param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.DepartmentViewModel.OnNewRecord(System.Object)">
            <summary>.en Create a new Department</summary>
            <param name="parameter">.en Data to create the new Department</param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.DepartmentViewModel.SetupValidation(MvvmValidation.ValidationHelper)">
            <summary>
            example to execute validation rules
            </summary>
            <param name="validation"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.DepartmentViewModel.OnNavigatedTo(Microsoft.Practices.Prism.Regions.NavigationContext)">
            <summary>
            .en Here is possible to override the actions to execute when there is a navigation request
            </summary>
            <remarks>
             this logic applys when you came from the collection of users through double click
             load parent entities and populate the related combobox with unique value
            .en Here is where to call to the methods to load the related entities (children and parents).
            .es aqui es donde se invoca a los métodos de carga de las entidades adicionales.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.DepartmentViewModel.OnReceiveCompositeViewUpdateEvent(System.String)">
            <summary>. en Action to execute when there is a call to update the view.</summary>
            <param name="message"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.DepartmentViewModel.BeginEdit">
            <summary>
            override of Generic BeginEdit to avoid the edition in the blank line of query viewmodel with double click
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.EntityMQueryViewModel">
            <summary>
            .en Interaction logic for EntityMQueryView.xaml
            .es Logica de interación para la vista EntityMQueryView.xaml
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityMQueryViewModel.#ctor(System.String)">
            <summary>
            .en Initialize a new instace for the class <see cref="T:EntityMQueryViewModel"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:EntityMQueryViewModel"/>.
            </summary>
            <param name="parentViewName"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityMQueryViewModel.#ctor(System.Collections.Generic.IList{Needel.Common.Application.Dtos.EntityMDto},System.String)">
            <summary>
            .en View Model constructor from collection of Dtos.
            </summary>
            <param name="collection"></param>
            <param name="parentViewName"></param>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.EntityMQueryViewModel.ChangeActivateStatusCommand">
            <summary>
            .en Property to get the command of changing state.
            .es Propiedad que obtiene el comando de cambio de estado.
            </summary>
            <value>
            Valor utilizado para obtener el comando de cambio de estado.
            </value>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityMQueryViewModel.OnDeleteRecord(System.Object)">
            <summary>
            Método público encargado del borrado de una entidad.
            </summary>
            <param name="parameter">
            Parámetro con información adicional.
            </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityMQueryViewModel.OnGetRecords(System.Object)">
            <summary>
            .en get records from EntityM.
            .es Método encargado de obtener todos los registros de EntityM.
            </summary>
            <param name="parameter">
            .en parameter with additional info
            .es Parámetro con información adicional.
            </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityMQueryViewModel.OnGetFirstPageRecords(System.Object)">
            <summary>
            .en Get First Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la primera página de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityMQueryViewModel.OnGetNextPageRecords(System.Object)">
            <summary>
            .en Get Next Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la siguiente página de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityMQueryViewModel.OnGetPreviousPageRecords(System.Object)">
            <summary>
            .en Get Previus Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la página anterior de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityMQueryViewModel.OnGetLastPageRecords(System.Object)">
            <summary>
            .en Get Last Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la ultima página de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityMQueryViewModel.MoveDataFromSrcToDest(Needel.Common.FrontEnd.WpfModule.EntityMQueryViewModel,Needel.Common.Application.Dtos.EntityMDto)">
            <summary>
            *3*
            </summary>
            <param name="dataContextTarget"></param>
            <param name="data"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityMQueryViewModel.ResetEntityM">
            <summary>
            .es Método privado para resetear el ViewModel.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityMQueryViewModel.OnNavigatedTo(Microsoft.Practices.Prism.Regions.NavigationContext)">
            <summary>
            .en refresh the collection of items raising a property changed event
            </summary>
            <param name="navigationContext"></param>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.EntityMViewModel">
            <summary>
            .en Interaction logic for EntityMViewModel.xaml
            .es Logica de interación para la vista EntityMViewModel.xaml
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityMViewModel.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:EntityMViewModel"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:EntityMViewModel"/>.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityMViewModel.#ctor(Needel.Common.Application.Dtos.EntityMDto,Needel.Common.Application.Dtos.EntityMDto,Needel.Common.Application.Dtos.EntityMDto,Needel.Common.Application.Dtos.EntityMDto,Needel.Common.Application.Dtos.EntityMDto)">
            <summary>
            .en Child composed constructor <see cref="T:EntityMViewModel"/>.
            This constructor is used to be the viewmodel of a nested viemodel in a hierchahy.
            </summary>
            <param name="element">
            .en Parameter of type <see cref="T:Needel.Common.Application.Dtos.EntityMDto"/> with all the related data.</param>
            <param name="first">first element in the current paged collection</param>
            <param name="previous">last element in the current paged collection</param>
            <param name="next">next element in the current paged collection</param>
            <param name="last">last element in the current paged collection</param>
            <remarks>
            .en these initialization are to allow navigation betwen pages and not only next record. TODO: test this.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityMViewModel.#ctor(Needel.Common.Application.Dtos.EntityMDto,System.Boolean)">
            <summary>
            .es Inicializa una nueva instancia de la clase <see cref="T:UserViewModel"/>.
            Este constructor se invoca desde el QueryViewModel ya que para cada 
            linea que se visualiza en la lista de Usuarios se crea el Viewmodel de dicho usuario.
            Esta lista se almacena en una observable collection en el query view model con la que se hace el binding 
            de la pantalla query.
            Por esta razon las entidades relacionadas no se cargan si no se navega hasta esta entidad.
            </summary>
            <param name="element">
            Parámetro de tipo <see cref="T:Needel.Common.Application.Dtos.EntityMDto"/> que contiene la información necesaria.
            </param>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.EntityMViewModel.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.EntityMViewModel.NZs">
            <summary>
            Property helper to allow easy access to the children properties
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.EntityMViewModel.NZsQueryVM">
            <summary>
            
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityMViewModel.GetById(System.Int32)">
            <summary>.es Obtener el dto de la entidad EntityM por su identificador.</summary>
            <param name="identifier">.es Parámetro que indica el identificador de la entidad que se va a recuperar.</param>
            <returns>.es Devuelve el objeto Dto <see cref="T:Needel.Common.Application.Dtos.EntityMDto"/> correspondiente.</returns>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityMViewModel.OnSaveRecord(System.Object)">
            <summary>.es Crear o actualizar una entidad de tipo EntityM.</summary>
            <param name="parameter">data to update.</param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityMViewModel.OnNewRecord(System.Object)">
            <summary>.en Create a new EntityM</summary>
            <param name="parameter">.en Data to create the new EntityM</param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityMViewModel.SetupValidation(MvvmValidation.ValidationHelper)">
            <summary>
            example to execute validation rules
            </summary>
            <param name="validation"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityMViewModel.OnNavigatedTo(Microsoft.Practices.Prism.Regions.NavigationContext)">
            <summary>
            .en Here is possible to override the actions to execute when there is a navigation request
            </summary>
            <remarks>
             this logic applys when you came from the collection of users through double click
             load parent entities and populate the related combobox with unique value
            .en Here is where to call to the methods to load the related entities (children and parents).
            .es aqui es donde se invoca a los métodos de carga de las entidades adicionales.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityMViewModel.OnReceiveCompositeViewUpdateEvent(System.String)">
            <summary>. en Action to execute when there is a call to update the view.</summary>
            <param name="message"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityMViewModel.BeginEdit">
            <summary>
            override of Generic BeginEdit to avoid the edition in the blank line of query viewmodel with double click
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.EntityNQueryViewModel">
            <summary>
            .en Interaction logic for EntityNQueryView.xaml
            .es Logica de interación para la vista EntityNQueryView.xaml
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityNQueryViewModel.#ctor(System.String)">
            <summary>
            .en Initialize a new instace for the class <see cref="T:EntityNQueryViewModel"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:EntityNQueryViewModel"/>.
            </summary>
            <param name="parentViewName"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityNQueryViewModel.#ctor(System.Collections.Generic.IList{Needel.Common.Application.Dtos.EntityNDto},System.String)">
            <summary>
            .en View Model constructor from collection of Dtos.
            </summary>
            <param name="collection"></param>
            <param name="parentViewName"></param>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.EntityNQueryViewModel.ChangeActivateStatusCommand">
            <summary>
            .en Property to get the command of changing state.
            .es Propiedad que obtiene el comando de cambio de estado.
            </summary>
            <value>
            Valor utilizado para obtener el comando de cambio de estado.
            </value>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityNQueryViewModel.OnDeleteRecord(System.Object)">
            <summary>
            Método público encargado del borrado de una entidad.
            </summary>
            <param name="parameter">
            Parámetro con información adicional.
            </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityNQueryViewModel.OnGetRecords(System.Object)">
            <summary>
            .en get records from EntityN.
            .es Método encargado de obtener todos los registros de EntityN.
            </summary>
            <param name="parameter">
            .en parameter with additional info
            .es Parámetro con información adicional.
            </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityNQueryViewModel.OnGetFirstPageRecords(System.Object)">
            <summary>
            .en Get First Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la primera página de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityNQueryViewModel.OnGetNextPageRecords(System.Object)">
            <summary>
            .en Get Next Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la siguiente página de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityNQueryViewModel.OnGetPreviousPageRecords(System.Object)">
            <summary>
            .en Get Previus Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la página anterior de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityNQueryViewModel.OnGetLastPageRecords(System.Object)">
            <summary>
            .en Get Last Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la ultima página de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityNQueryViewModel.MoveDataFromSrcToDest(Needel.Common.FrontEnd.WpfModule.EntityNQueryViewModel,Needel.Common.Application.Dtos.EntityNDto)">
            <summary>
            *3*
            </summary>
            <param name="dataContextTarget"></param>
            <param name="data"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityNQueryViewModel.ResetEntityN">
            <summary>
            .es Método privado para resetear el ViewModel.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityNQueryViewModel.OnNavigatedTo(Microsoft.Practices.Prism.Regions.NavigationContext)">
            <summary>
            .en refresh the collection of items raising a property changed event
            </summary>
            <param name="navigationContext"></param>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.EntityNViewModel">
            <summary>
            .en Interaction logic for EntityNViewModel.xaml
            .es Logica de interación para la vista EntityNViewModel.xaml
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityNViewModel.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:EntityNViewModel"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:EntityNViewModel"/>.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityNViewModel.#ctor(Needel.Common.Application.Dtos.EntityNDto,Needel.Common.Application.Dtos.EntityNDto,Needel.Common.Application.Dtos.EntityNDto,Needel.Common.Application.Dtos.EntityNDto,Needel.Common.Application.Dtos.EntityNDto)">
            <summary>
            .en Child composed constructor <see cref="T:EntityNViewModel"/>.
            This constructor is used to be the viewmodel of a nested viemodel in a hierchahy.
            </summary>
            <param name="element">
            .en Parameter of type <see cref="T:Needel.Common.Application.Dtos.EntityNDto"/> with all the related data.</param>
            <param name="first">first element in the current paged collection</param>
            <param name="previous">last element in the current paged collection</param>
            <param name="next">next element in the current paged collection</param>
            <param name="last">last element in the current paged collection</param>
            <remarks>
            .en these initialization are to allow navigation betwen pages and not only next record. TODO: test this.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityNViewModel.#ctor(Needel.Common.Application.Dtos.EntityNDto,System.Boolean)">
            <summary>
            .es Inicializa una nueva instancia de la clase <see cref="T:UserViewModel"/>.
            Este constructor se invoca desde el QueryViewModel ya que para cada 
            linea que se visualiza en la lista de Usuarios se crea el Viewmodel de dicho usuario.
            Esta lista se almacena en una observable collection en el query view model con la que se hace el binding 
            de la pantalla query.
            Por esta razon las entidades relacionadas no se cargan si no se navega hasta esta entidad.
            </summary>
            <param name="element">
            Parámetro de tipo <see cref="T:Needel.Common.Application.Dtos.EntityNDto"/> que contiene la información necesaria.
            </param>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.EntityNViewModel.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.EntityNViewModel.MZs">
            <summary>
            Property helper to allow easy access to the children properties
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.EntityNViewModel.MZsQueryVM">
            <summary>
            
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityNViewModel.GetById(System.Int32)">
            <summary>.es Obtener el dto de la entidad EntityN por su identificador.</summary>
            <param name="identifier">.es Parámetro que indica el identificador de la entidad que se va a recuperar.</param>
            <returns>.es Devuelve el objeto Dto <see cref="T:Needel.Common.Application.Dtos.EntityNDto"/> correspondiente.</returns>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityNViewModel.OnSaveRecord(System.Object)">
            <summary>.es Crear o actualizar una entidad de tipo EntityN.</summary>
            <param name="parameter">data to update.</param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityNViewModel.OnNewRecord(System.Object)">
            <summary>.en Create a new EntityN</summary>
            <param name="parameter">.en Data to create the new EntityN</param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityNViewModel.SetupValidation(MvvmValidation.ValidationHelper)">
            <summary>
            example to execute validation rules
            </summary>
            <param name="validation"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityNViewModel.OnNavigatedTo(Microsoft.Practices.Prism.Regions.NavigationContext)">
            <summary>
            .en Here is possible to override the actions to execute when there is a navigation request
            </summary>
            <remarks>
             this logic applys when you came from the collection of users through double click
             load parent entities and populate the related combobox with unique value
            .en Here is where to call to the methods to load the related entities (children and parents).
            .es aqui es donde se invoca a los métodos de carga de las entidades adicionales.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityNViewModel.OnReceiveCompositeViewUpdateEvent(System.String)">
            <summary>. en Action to execute when there is a call to update the view.</summary>
            <param name="message"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityNViewModel.BeginEdit">
            <summary>
            override of Generic BeginEdit to avoid the edition in the blank line of query viewmodel with double click
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.EntityZQueryViewModel">
            <summary>
            .en Interaction logic for EntityZQueryView.xaml
            .es Logica de interación para la vista EntityZQueryView.xaml
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityZQueryViewModel.#ctor(System.String)">
            <summary>
            .en Initialize a new instace for the class <see cref="T:EntityZQueryViewModel"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:EntityZQueryViewModel"/>.
            </summary>
            <param name="parentViewName"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityZQueryViewModel.#ctor(System.Collections.Generic.IList{Needel.Common.Application.Dtos.EntityZDto},System.String)">
            <summary>
            .en View Model constructor from collection of Dtos.
            </summary>
            <param name="collection"></param>
            <param name="parentViewName"></param>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.EntityZQueryViewModel.ChangeActivateStatusCommand">
            <summary>
            .en Property to get the command of changing state.
            .es Propiedad que obtiene el comando de cambio de estado.
            </summary>
            <value>
            Valor utilizado para obtener el comando de cambio de estado.
            </value>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityZQueryViewModel.OnDeleteRecord(System.Object)">
            <summary>
            Método público encargado del borrado de una entidad.
            </summary>
            <param name="parameter">
            Parámetro con información adicional.
            </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityZQueryViewModel.OnGetRecords(System.Object)">
            <summary>
            .en get records from EntityZ.
            .es Método encargado de obtener todos los registros de EntityZ.
            </summary>
            <param name="parameter">
            .en parameter with additional info
            .es Parámetro con información adicional.
            </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityZQueryViewModel.OnGetFirstPageRecords(System.Object)">
            <summary>
            .en Get First Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la primera página de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityZQueryViewModel.OnGetNextPageRecords(System.Object)">
            <summary>
            .en Get Next Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la siguiente página de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityZQueryViewModel.OnGetPreviousPageRecords(System.Object)">
            <summary>
            .en Get Previus Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la página anterior de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityZQueryViewModel.OnGetLastPageRecords(System.Object)">
            <summary>
            .en Get Last Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la ultima página de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityZQueryViewModel.MoveDataFromSrcToDest(Needel.Common.FrontEnd.WpfModule.EntityZQueryViewModel,Needel.Common.Application.Dtos.EntityZDto)">
            <summary>
            *3*
            </summary>
            <param name="dataContextTarget"></param>
            <param name="data"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityZQueryViewModel.ResetEntityZ">
            <summary>
            .es Método privado para resetear el ViewModel.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityZQueryViewModel.OnNavigatedTo(Microsoft.Practices.Prism.Regions.NavigationContext)">
            <summary>
            .en refresh the collection of items raising a property changed event
            </summary>
            <param name="navigationContext"></param>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.EntityZViewModel">
            <summary>
            .en Interaction logic for EntityZViewModel.xaml
            .es Logica de interación para la vista EntityZViewModel.xaml
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityZViewModel.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:EntityZViewModel"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:EntityZViewModel"/>.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityZViewModel.#ctor(Needel.Common.Application.Dtos.EntityZDto,Needel.Common.Application.Dtos.EntityZDto,Needel.Common.Application.Dtos.EntityZDto,Needel.Common.Application.Dtos.EntityZDto,Needel.Common.Application.Dtos.EntityZDto)">
            <summary>
            .en Child composed constructor <see cref="T:EntityZViewModel"/>.
            This constructor is used to be the viewmodel of a nested viemodel in a hierchahy.
            </summary>
            <param name="element">
            .en Parameter of type <see cref="T:Needel.Common.Application.Dtos.EntityZDto"/> with all the related data.</param>
            <param name="first">first element in the current paged collection</param>
            <param name="previous">last element in the current paged collection</param>
            <param name="next">next element in the current paged collection</param>
            <param name="last">last element in the current paged collection</param>
            <remarks>
            .en these initialization are to allow navigation betwen pages and not only next record. TODO: test this.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityZViewModel.#ctor(Needel.Common.Application.Dtos.EntityZDto,System.Boolean)">
            <summary>
            .es Inicializa una nueva instancia de la clase <see cref="T:UserViewModel"/>.
            Este constructor se invoca desde el QueryViewModel ya que para cada 
            linea que se visualiza en la lista de Usuarios se crea el Viewmodel de dicho usuario.
            Esta lista se almacena en una observable collection en el query view model con la que se hace el binding 
            de la pantalla query.
            Por esta razon las entidades relacionadas no se cargan si no se navega hasta esta entidad.
            </summary>
            <param name="element">
            Parámetro de tipo <see cref="T:Needel.Common.Application.Dtos.EntityZDto"/> que contiene la información necesaria.
            </param>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.EntityZViewModel.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.EntityZViewModel.MNs">
            <summary>
            Property helper to allow easy access to the children properties
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.EntityZViewModel.MNsQueryVM">
            <summary>
            
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityZViewModel.GetById(System.Int32)">
            <summary>.es Obtener el dto de la entidad EntityZ por su identificador.</summary>
            <param name="identifier">.es Parámetro que indica el identificador de la entidad que se va a recuperar.</param>
            <returns>.es Devuelve el objeto Dto <see cref="T:Needel.Common.Application.Dtos.EntityZDto"/> correspondiente.</returns>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityZViewModel.OnSaveRecord(System.Object)">
            <summary>.es Crear o actualizar una entidad de tipo EntityZ.</summary>
            <param name="parameter">data to update.</param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityZViewModel.OnNewRecord(System.Object)">
            <summary>.en Create a new EntityZ</summary>
            <param name="parameter">.en Data to create the new EntityZ</param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityZViewModel.SetupValidation(MvvmValidation.ValidationHelper)">
            <summary>
            example to execute validation rules
            </summary>
            <param name="validation"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityZViewModel.OnNavigatedTo(Microsoft.Practices.Prism.Regions.NavigationContext)">
            <summary>
            .en Here is possible to override the actions to execute when there is a navigation request
            </summary>
            <remarks>
             this logic applys when you came from the collection of users through double click
             load parent entities and populate the related combobox with unique value
            .en Here is where to call to the methods to load the related entities (children and parents).
            .es aqui es donde se invoca a los métodos de carga de las entidades adicionales.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityZViewModel.OnReceiveCompositeViewUpdateEvent(System.String)">
            <summary>. en Action to execute when there is a call to update the view.</summary>
            <param name="message"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.EntityZViewModel.BeginEdit">
            <summary>
            override of Generic BeginEdit to avoid the edition in the blank line of query viewmodel with double click
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.GraphNodeQueryViewModel">
            <summary>
            .en Interaction logic for GraphNodeQueryView.xaml
            .es Logica de interación para la vista GraphNodeQueryView.xaml
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.GraphNodeQueryViewModel.#ctor(System.String)">
            <summary>
            .en Initialize a new instace for the class <see cref="T:GraphNodeQueryViewModel"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:GraphNodeQueryViewModel"/>.
            </summary>
            <param name="parentViewName"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.GraphNodeQueryViewModel.#ctor(Inflexion2.Application.SpecificationDto,System.String)">
            <summary>
            .en Constructor for nested view models in master detail from parent entities and Many to many.
            </summary>
            <param name="baseFilter"></param>
            <param name="parentViewName"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.GraphNodeQueryViewModel.#ctor(System.Collections.Generic.IList{Needel.Common.Application.Dtos.GraphNodeDto},System.String)">
            <summary>
            .en View Model constructor from collection of Dtos.
            </summary>
            <param name="collection"></param>
            <param name="parentViewName"></param>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.GraphNodeQueryViewModel.ChangeActivateStatusCommand">
            <summary>
            .en Property to get the command of changing state.
            .es Propiedad que obtiene el comando de cambio de estado.
            </summary>
            <value>
            Valor utilizado para obtener el comando de cambio de estado.
            </value>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.GraphNodeQueryViewModel.OnDeleteRecord(System.Object)">
            <summary>
            Método público encargado del borrado de una entidad.
            </summary>
            <param name="parameter">
            Parámetro con información adicional.
            </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.GraphNodeQueryViewModel.OnGetRecords(System.Object)">
            <summary>
            .en get records from GraphNode.
            .es Método encargado de obtener todos los registros de GraphNode.
            </summary>
            <param name="parameter">
            .en parameter with additional info
            .es Parámetro con información adicional.
            </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.GraphNodeQueryViewModel.OnGetFirstPageRecords(System.Object)">
            <summary>
            .en Get First Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la primera página de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.GraphNodeQueryViewModel.OnGetNextPageRecords(System.Object)">
            <summary>
            .en Get Next Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la siguiente página de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.GraphNodeQueryViewModel.OnGetPreviousPageRecords(System.Object)">
            <summary>
            .en Get Previus Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la página anterior de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.GraphNodeQueryViewModel.OnGetLastPageRecords(System.Object)">
            <summary>
            .en Get Last Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la ultima página de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.GraphNodeQueryViewModel.MoveDataFromSrcToDest(Needel.Common.FrontEnd.WpfModule.GraphNodeQueryViewModel,Needel.Common.Application.Dtos.GraphNodeDto)">
            <summary>
            
            </summary>
            <param name="dataContextTarget"></param>
            <param name="data"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.GraphNodeQueryViewModel.ResetGraphNode">
            <summary>
            .es Método privado para resetear el ViewModel.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.GraphNodeQueryViewModel.OnNavigatedTo(Microsoft.Practices.Prism.Regions.NavigationContext)">
            <summary>
            .en refresh the collection of items raising a property changed event
            </summary>
            <param name="navigationContext"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.GraphNodeQueryViewModel.NavigateToRecord(System.Int32)">
            <summary>
            nuevo record en el menu
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.GraphNodeViewModel">
            <summary>
            .en Interaction logic for GraphNodeViewModel.xaml
            .es Logica de interación para la vista GraphNodeViewModel.xaml
            </summary>
        </member>
        <member name="F:Needel.Common.FrontEnd.WpfModule.GraphNodeViewModel.from1VM">
            <summary>
            Campo para indicar que el viewmodel esta embevido en un viewmodel parental con el objeto de 
            de asegurar que se añade al menos un registro en esta entidad cuando se crea el padre de esta.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.GraphNodeViewModel.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:GraphNodeViewModel"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:GraphNodeViewModel"/>.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.GraphNodeViewModel.#ctor(Needel.Common.Application.Dtos.GraphNodeDto,Needel.Common.Application.Dtos.GraphNodeDto,Needel.Common.Application.Dtos.GraphNodeDto,Needel.Common.Application.Dtos.GraphNodeDto,Needel.Common.Application.Dtos.GraphNodeDto)">
            <summary>
            .en Child composed constructor <see cref="T:GraphNodeViewModel"/>.
            This constructor is used to be the viewmodel of a nested viemodel in a hierchahy.
            </summary>
            <param name="element">
            .en Parameter of type <see cref="T:Needel.Common.Application.Dtos.GraphNodeDto"/> with all the related data.</param>
            <param name="first">first element in the current paged collection</param>
            <param name="previous">last element in the current paged collection</param>
            <param name="next">next element in the current paged collection</param>
            <param name="last">last element in the current paged collection</param>
            <remarks>
            .en these initialization are to allow navigation betwen pages and not only next record. TODO: test this.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.GraphNodeViewModel.#ctor(Needel.Common.Application.Dtos.GraphNodeDto,System.Boolean)">
            <summary>
            .es Inicializa una nueva instancia de la clase <see cref="T:UserViewModel"/>.
            Este constructor se invoca desde el QueryViewModel ya que para cada 
            linea que se visualiza en la lista de Usuarios se crea el Viewmodel de dicho usuario.
            Esta lista se almacena en una observable collection en el query view model con la que se hace el binding 
            de la pantalla query.
            Por esta razon las entidades relacionadas no se cargan si no se navega hasta esta entidad.
            </summary>
            <param name="element">
            Parámetro de tipo <see cref="T:Needel.Common.Application.Dtos.GraphNodeDto"/> que contiene la información necesaria.
            </param>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.GraphNodeViewModel.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.GraphNodeViewModel.LeftNodes">
            <summary>
            Wraper property to help binding  
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.GraphNodeViewModel.GraphNodesCombo">
            <summary>
            .en Collection where to chose one parent from combobox for collections smaller than 50
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.GraphNodeViewModel.RightNodes">
            <summary>
            Property helper to allow easy access to the children properties
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.GraphNodeViewModel.RightNodesQueryVM">
            <summary>
            
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.GraphNodeViewModel.AllGraphNodesQueryVM">
            <summary>
            collection with all free items for drag and drop
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.GraphNodeViewModel.LeftNodesQueryVM">
            <summary>
            
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.GraphNodeViewModel.GetById(System.Int32)">
            <summary>.es Obtener el dto de la entidad GraphNode por su identificador.</summary>
            <param name="identifier">.es Parámetro que indica el identificador de la entidad que se va a recuperar.</param>
            <returns>.es Devuelve el objeto Dto <see cref="T:Needel.Common.Application.Dtos.GraphNodeDto"/> correspondiente.</returns>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.GraphNodeViewModel.OnSaveRecord(System.Object)">
            <summary>.es Crear o actualizar una entidad de tipo GraphNode.</summary>
            <param name="parameter">data to update.</param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.GraphNodeViewModel.OnNewRecord(System.Object)">
            <summary>.en Create a new GraphNode</summary>
            <param name="parameter">.en Data to create the new GraphNode</param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.GraphNodeViewModel.AttachGraphNode(Needel.Common.FrontEnd.WpfModule.GraphNodeQueryViewModel,Needel.Common.Application.Dtos.GraphNodeDto)">
            <summary>
            
            </summary>
            <param name="dataContextTarget"></param>
            <param name="data"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.GraphNodeViewModel.RemoveGraphNode(System.String,Needel.Common.FrontEnd.WpfModule.GraphNodeQueryViewModel,Needel.Common.Application.Dtos.GraphNodeDto)">
            <summary>
            
            </summary>
            <param name="sourceTittle"></param>
            <param name="dataContextTarget"></param>
            <param name="data"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.GraphNodeViewModel.SetupValidation(MvvmValidation.ValidationHelper)">
            <summary>
            example to execute validation rules
            </summary>
            <param name="validation"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.GraphNodeViewModel.OnNavigatedTo(Microsoft.Practices.Prism.Regions.NavigationContext)">
            <summary>
            .en Here is possible to override the actions to execute when there is a navigation request
            </summary>
            <remarks>
             this logic applys when you came from the collection of users through double click
             load parent entities and populate the related combobox with unique value
            .en Here is where to call to the methods to load the related entities (children and parents).
            .es aqui es donde se invoca a los métodos de carga de las entidades adicionales.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.GraphNodeViewModel.OnReceiveCompositeViewUpdateEvent(System.String)">
            <summary>. en Action to execute when there is a call to update the view.</summary>
            <param name="message"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.GraphNodeViewModel.BeginEdit">
            <summary>
            override of Generic BeginEdit to avoid the edition in the blank line of query viewmodel with double click
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.MNZQueryViewModel">
            <summary>
            .en Interaction logic for MNZQueryView.xaml
            .es Logica de interación para la vista MNZQueryView.xaml
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.MNZQueryViewModel.#ctor(System.String)">
            <summary>
            .en Initialize a new instace for the class <see cref="T:MNZQueryViewModel"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:MNZQueryViewModel"/>.
            </summary>
            <param name="parentViewName"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.MNZQueryViewModel.#ctor(Inflexion2.Application.SpecificationDto,System.String)">
            <summary>
            .en Constructor for nested view models in master detail from parent entities and Many to many.
            </summary>
            <param name="baseFilter"></param>
            <param name="parentViewName"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.MNZQueryViewModel.#ctor(System.Collections.Generic.IList{Needel.Common.Application.Dtos.MNZDto},System.String)">
            <summary>
            .en View Model constructor from collection of Dtos.
            </summary>
            <param name="collection"></param>
            <param name="parentViewName"></param>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.MNZQueryViewModel.ChangeActivateStatusCommand">
            <summary>
            .en Property to get the command of changing state.
            .es Propiedad que obtiene el comando de cambio de estado.
            </summary>
            <value>
            Valor utilizado para obtener el comando de cambio de estado.
            </value>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.MNZQueryViewModel.OnDeleteRecord(System.Object)">
            <summary>
            Método público encargado del borrado de una entidad.
            </summary>
            <param name="parameter">
            Parámetro con información adicional.
            </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.MNZQueryViewModel.OnGetRecords(System.Object)">
            <summary>
            .en get records from MNZ.
            .es Método encargado de obtener todos los registros de MNZ.
            </summary>
            <param name="parameter">
            .en parameter with additional info
            .es Parámetro con información adicional.
            </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.MNZQueryViewModel.ResetMNZ">
            <summary>
            .es Método privado para resetear el ViewModel.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.MNZQueryViewModel.OnNavigatedTo(Microsoft.Practices.Prism.Regions.NavigationContext)">
            <summary>
            .en refresh the collection of items raising a property changed event
            </summary>
            <param name="navigationContext"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.MNZQueryViewModel.NavigateToRecord(Needel.Common.Application.Dtos.MNZDto)">
            <summary>
            
            </summary>
            <param name="valueObj"></param>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.MNZViewModel">
            <summary>
            .en Interaction logic for MNZViewModel.xaml
            .es Logica de interación para la vista MNZViewModel.xaml
            </summary>
        </member>
        <member name="F:Needel.Common.FrontEnd.WpfModule.MNZViewModel.from1VM">
            <summary>
            Campo para indicar que el viewmodel esta embevido en un viewmodel parental con el objeto de 
            de asegurar que se añade al menos un registro en esta entidad cuando se crea el padre de esta.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.MNZViewModel.#ctor">
            <summary>
            .en Parameterless constructor to implement the "IEditable" interface in query viewmodels that allow "editable row"
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.MNZViewModel.#ctor(System.Boolean)">
            <summary>
            .en Initialize a new instace for the class <see cref="T:MNZViewModel"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:MNZViewModel"/>.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.MNZViewModel.#ctor(Needel.Common.Application.Dtos.MNZDto,System.Boolean)">
            <summary>
            .es Inicializa una nueva instancia de la clase <see cref="T:UserViewModel"/>.
            Este constructor se invoca desde el QueryViewModel ya que para cada 
            linea que se visualiza en la lista de Usuarios se crea el Viewmodel de dicho usuario.
            Esta lista se almacena en una observable collection en el query view model con la que se hace el binding 
            de la pantalla query.
            Por esta razon las entidades relacionadas no se cargan si no se navega hasta esta entidad.
            </summary>
            <param name="element">
            Parámetro de tipo <see cref="T:Needel.Common.Application.Dtos.MNZDto"/> que contiene la información necesaria.
            </param>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.MNZViewModel.From1VM">
            <summary>
            Campo para indicar que el viewmodel esta embebido en un viewmodel parental con el objeto de 
            de asegurar que se añade al menos un registro en esta entidad cuando se crea el padre de esta.
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.MNZViewModel.EntityM">
            <summary>
            Wraper property to help binding  
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.MNZViewModel.M_EntitiesCombo">
            <summary>
            .en Collection where to chose one parent from combobox for collections smaller than 50
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.MNZViewModel.AllM_EntitiesQueryVM">
            <summary>
            .en Collection where to chose one parent from datagrid for collections greater than 50
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.MNZViewModel.EntityN">
            <summary>
            Wraper property to help binding  
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.MNZViewModel.EntitiesNCombo">
            <summary>
            .en Collection where to chose one parent from combobox for collections smaller than 50
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.MNZViewModel.AllEntitiesNQueryVM">
            <summary>
            .en Collection where to chose one parent from datagrid for collections greater than 50
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.MNZViewModel.EntityZ">
            <summary>
            Wraper property to help binding  
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.MNZViewModel.EntitiesZCombo">
            <summary>
            .en Collection where to chose one parent from combobox for collections smaller than 50
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.MNZViewModel.AllEntitiesZQueryVM">
            <summary>
            .en Collection where to chose one parent from datagrid for collections greater than 50
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.MNZViewModel.AllEntityMQueryVM">
            <summary>
            collection for drag and drop
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.MNZViewModel.AllEntityNQueryVM">
            <summary>
            collection for drag and drop
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.MNZViewModel.AllEntityZQueryVM">
            <summary>
            collection for drag and drop
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.MNZViewModel.OnSaveRecord(System.Object)">
            <summary>.es Crear o actualizar una entidad de tipo MNZ.</summary>
            <param name="parameter">data to update.</param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.MNZViewModel.OnNewRecord(System.Object)">
            <summary>.en Create a new MNZ</summary>
            <param name="parameter">.en Data to create the new MNZ</param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.MNZViewModel.SetupValidation(MvvmValidation.ValidationHelper)">
            <summary>
            example to execute validation rules
            </summary>
            <param name="validation"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.MNZViewModel.OnNavigatedTo(Microsoft.Practices.Prism.Regions.NavigationContext)">
            <summary>
            .en Here is possible to override the actions to execute when there is a navigation request
            </summary>
            <remarks>
             this logic applys when you came from the collection of users through double click
             load parent entities and populate the related combobox with unique value
            .en Here is where to call to the methods to load the related entities (children and parents).
            .es aqui es donde se invoca a los métodos de carga de las entidades adicionales.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.MNZViewModel.BeginEdit">
            <summary>
            override of Generic BeginEdit to avoid the edition in the blank line of query viewmodel with double click
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.StudentQueryViewModel">
            <summary>
            .en Interaction logic for StudentQueryView.xaml
            .es Logica de interación para la vista StudentQueryView.xaml
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.StudentQueryViewModel.#ctor(System.String)">
            <summary>
            .en Initialize a new instace for the class <see cref="T:StudentQueryViewModel"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:StudentQueryViewModel"/>.
            </summary>
            <param name="parentViewName"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.StudentQueryViewModel.#ctor(Inflexion2.Application.SpecificationDto,System.String)">
            <summary>
            .en Constructor for nested view models in master detail from parent entities and Many to many.
            </summary>
            <param name="baseFilter"></param>
            <param name="parentViewName"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.StudentQueryViewModel.#ctor(System.Collections.Generic.IList{Needel.Common.Application.Dtos.StudentDto},System.String)">
            <summary>
            .en View Model constructor from collection of Dtos.
            </summary>
            <param name="collection"></param>
            <param name="parentViewName"></param>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.StudentQueryViewModel.ChangeActivateStatusCommand">
            <summary>
            .en Property to get the command of changing state.
            .es Propiedad que obtiene el comando de cambio de estado.
            </summary>
            <value>
            Valor utilizado para obtener el comando de cambio de estado.
            </value>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.StudentQueryViewModel.OnDeleteRecord(System.Object)">
            <summary>
            Método público encargado del borrado de una entidad.
            </summary>
            <param name="parameter">
            Parámetro con información adicional.
            </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.StudentQueryViewModel.OnGetRecords(System.Object)">
            <summary>
            .en get records from Student.
            .es Método encargado de obtener todos los registros de Student.
            </summary>
            <param name="parameter">
            .en parameter with additional info
            .es Parámetro con información adicional.
            </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.StudentQueryViewModel.OnGetFirstPageRecords(System.Object)">
            <summary>
            .en Get First Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la primera página de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.StudentQueryViewModel.OnGetNextPageRecords(System.Object)">
            <summary>
            .en Get Next Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la siguiente página de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.StudentQueryViewModel.OnGetPreviousPageRecords(System.Object)">
            <summary>
            .en Get Previus Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la página anterior de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.StudentQueryViewModel.OnGetLastPageRecords(System.Object)">
            <summary>
            .en Get Last Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la ultima página de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.StudentQueryViewModel.MoveDataFromSrcToDest(Needel.Common.FrontEnd.WpfModule.StudentQueryViewModel,Needel.Common.Application.Dtos.StudentDto)">
            <summary>
            *2*
            </summary>
            <param name="dataContextTarget"></param>
            <param name="data"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.StudentQueryViewModel.ResetStudent">
            <summary>
            .es Método privado para resetear el ViewModel.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.StudentQueryViewModel.OnNavigatedTo(Microsoft.Practices.Prism.Regions.NavigationContext)">
            <summary>
            .en refresh the collection of items raising a property changed event
            </summary>
            <param name="navigationContext"></param>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.StudentViewModel">
            <summary>
            .en Interaction logic for StudentViewModel.xaml
            .es Logica de interación para la vista StudentViewModel.xaml
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.StudentViewModel.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:StudentViewModel"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:StudentViewModel"/>.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.StudentViewModel.#ctor(Needel.Common.Application.Dtos.StudentDto,Needel.Common.Application.Dtos.StudentDto,Needel.Common.Application.Dtos.StudentDto,Needel.Common.Application.Dtos.StudentDto,Needel.Common.Application.Dtos.StudentDto)">
            <summary>
            .en Child composed constructor <see cref="T:StudentViewModel"/>.
            This constructor is used to be the viewmodel of a nested viemodel in a hierchahy.
            </summary>
            <param name="element">
            .en Parameter of type <see cref="T:Needel.Common.Application.Dtos.StudentDto"/> with all the related data.</param>
            <param name="first">first element in the current paged collection</param>
            <param name="previous">last element in the current paged collection</param>
            <param name="next">next element in the current paged collection</param>
            <param name="last">last element in the current paged collection</param>
            <remarks>
            .en these initialization are to allow navigation betwen pages and not only next record. TODO: test this.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.StudentViewModel.#ctor(Needel.Common.Application.Dtos.StudentDto,System.Boolean)">
            <summary>
            .es Inicializa una nueva instancia de la clase <see cref="T:UserViewModel"/>.
            Este constructor se invoca desde el QueryViewModel ya que para cada 
            linea que se visualiza en la lista de Usuarios se crea el Viewmodel de dicho usuario.
            Esta lista se almacena en una observable collection en el query view model con la que se hace el binding 
            de la pantalla query.
            Por esta razon las entidades relacionadas no se cargan si no se navega hasta esta entidad.
            </summary>
            <param name="element">
            Parámetro de tipo <see cref="T:Needel.Common.Application.Dtos.StudentDto"/> que contiene la información necesaria.
            </param>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.StudentViewModel.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.StudentViewModel.Teachers">
            <summary>
            Property helper to allow easy access to the children properties
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.StudentViewModel.TeachersQueryVM">
            <summary>
            
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.StudentViewModel.AllTeachersQueryVM">
            <summary>
            collection with all free items for drag and drop
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.StudentViewModel.GetById(System.Int32)">
            <summary>.es Obtener el dto de la entidad Student por su identificador.</summary>
            <param name="identifier">.es Parámetro que indica el identificador de la entidad que se va a recuperar.</param>
            <returns>.es Devuelve el objeto Dto <see cref="T:Needel.Common.Application.Dtos.StudentDto"/> correspondiente.</returns>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.StudentViewModel.OnSaveRecord(System.Object)">
            <summary>.es Crear o actualizar una entidad de tipo Student.</summary>
            <param name="parameter">data to update.</param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.StudentViewModel.OnNewRecord(System.Object)">
            <summary>.en Create a new Student</summary>
            <param name="parameter">.en Data to create the new Student</param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.StudentViewModel.SetupValidation(MvvmValidation.ValidationHelper)">
            <summary>
            example to execute validation rules
            </summary>
            <param name="validation"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.StudentViewModel.OnNavigatedTo(Microsoft.Practices.Prism.Regions.NavigationContext)">
            <summary>
            .en Here is possible to override the actions to execute when there is a navigation request
            </summary>
            <remarks>
             this logic applys when you came from the collection of users through double click
             load parent entities and populate the related combobox with unique value
            .en Here is where to call to the methods to load the related entities (children and parents).
            .es aqui es donde se invoca a los métodos de carga de las entidades adicionales.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.StudentViewModel.OnReceiveCompositeViewUpdateEvent(System.String)">
            <summary>. en Action to execute when there is a call to update the view.</summary>
            <param name="message"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.StudentViewModel.BeginEdit">
            <summary>
            override of Generic BeginEdit to avoid the edition in the blank line of query viewmodel with double click
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.TeacherQueryViewModel">
            <summary>
            .en Interaction logic for TeacherQueryView.xaml
            .es Logica de interación para la vista TeacherQueryView.xaml
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.TeacherQueryViewModel.#ctor(System.String)">
            <summary>
            .en Initialize a new instace for the class <see cref="T:TeacherQueryViewModel"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:TeacherQueryViewModel"/>.
            </summary>
            <param name="parentViewName"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.TeacherQueryViewModel.#ctor(Inflexion2.Application.SpecificationDto,System.String)">
            <summary>
            .en Constructor for nested view models in master detail from parent entities and Many to many.
            </summary>
            <param name="baseFilter"></param>
            <param name="parentViewName"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.TeacherQueryViewModel.#ctor(System.Collections.Generic.IList{Needel.Common.Application.Dtos.TeacherDto},System.String)">
            <summary>
            .en View Model constructor from collection of Dtos.
            </summary>
            <param name="collection"></param>
            <param name="parentViewName"></param>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.TeacherQueryViewModel.ChangeActivateStatusCommand">
            <summary>
            .en Property to get the command of changing state.
            .es Propiedad que obtiene el comando de cambio de estado.
            </summary>
            <value>
            Valor utilizado para obtener el comando de cambio de estado.
            </value>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.TeacherQueryViewModel.OnDeleteRecord(System.Object)">
            <summary>
            Método público encargado del borrado de una entidad.
            </summary>
            <param name="parameter">
            Parámetro con información adicional.
            </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.TeacherQueryViewModel.OnGetRecords(System.Object)">
            <summary>
            .en get records from Teacher.
            .es Método encargado de obtener todos los registros de Teacher.
            </summary>
            <param name="parameter">
            .en parameter with additional info
            .es Parámetro con información adicional.
            </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.TeacherQueryViewModel.OnGetFirstPageRecords(System.Object)">
            <summary>
            .en Get First Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la primera página de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.TeacherQueryViewModel.OnGetNextPageRecords(System.Object)">
            <summary>
            .en Get Next Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la siguiente página de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.TeacherQueryViewModel.OnGetPreviousPageRecords(System.Object)">
            <summary>
            .en Get Previus Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la página anterior de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.TeacherQueryViewModel.OnGetLastPageRecords(System.Object)">
            <summary>
            .en Get Last Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la ultima página de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.TeacherQueryViewModel.MoveDataFromSrcToDest(Needel.Common.FrontEnd.WpfModule.TeacherQueryViewModel,Needel.Common.Application.Dtos.TeacherDto)">
            <summary>
            
            </summary>
            <param name="dataContextTarget"></param>
            <param name="data"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.TeacherQueryViewModel.ResetTeacher">
            <summary>
            .es Método privado para resetear el ViewModel.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.TeacherQueryViewModel.OnNavigatedTo(Microsoft.Practices.Prism.Regions.NavigationContext)">
            <summary>
            .en refresh the collection of items raising a property changed event
            </summary>
            <param name="navigationContext"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.TeacherQueryViewModel.NavigateToRecord(System.Int32)">
            <summary>
            nuevo record en el menu
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.TeacherViewModel">
            <summary>
            .en Interaction logic for TeacherViewModel.xaml
            .es Logica de interación para la vista TeacherViewModel.xaml
            </summary>
        </member>
        <member name="F:Needel.Common.FrontEnd.WpfModule.TeacherViewModel.from1VM">
            <summary>
            Campo para indicar que el viewmodel esta embevido en un viewmodel parental con el objeto de 
            de asegurar que se añade al menos un registro en esta entidad cuando se crea el padre de esta.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.TeacherViewModel.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:TeacherViewModel"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:TeacherViewModel"/>.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.TeacherViewModel.#ctor(Needel.Common.Application.Dtos.TeacherDto,Needel.Common.Application.Dtos.TeacherDto,Needel.Common.Application.Dtos.TeacherDto,Needel.Common.Application.Dtos.TeacherDto,Needel.Common.Application.Dtos.TeacherDto)">
            <summary>
            .en Child composed constructor <see cref="T:TeacherViewModel"/>.
            This constructor is used to be the viewmodel of a nested viemodel in a hierchahy.
            </summary>
            <param name="element">
            .en Parameter of type <see cref="T:Needel.Common.Application.Dtos.TeacherDto"/> with all the related data.</param>
            <param name="first">first element in the current paged collection</param>
            <param name="previous">last element in the current paged collection</param>
            <param name="next">next element in the current paged collection</param>
            <param name="last">last element in the current paged collection</param>
            <remarks>
            .en these initialization are to allow navigation betwen pages and not only next record. TODO: test this.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.TeacherViewModel.#ctor(Needel.Common.Application.Dtos.TeacherDto,System.Boolean)">
            <summary>
            .es Inicializa una nueva instancia de la clase <see cref="T:UserViewModel"/>.
            Este constructor se invoca desde el QueryViewModel ya que para cada 
            linea que se visualiza en la lista de Usuarios se crea el Viewmodel de dicho usuario.
            Esta lista se almacena en una observable collection en el query view model con la que se hace el binding 
            de la pantalla query.
            Por esta razon las entidades relacionadas no se cargan si no se navega hasta esta entidad.
            </summary>
            <param name="element">
            Parámetro de tipo <see cref="T:Needel.Common.Application.Dtos.TeacherDto"/> que contiene la información necesaria.
            </param>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.TeacherViewModel.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.TeacherViewModel.Students">
            <summary>
            Wraper property to help binding  
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.TeacherViewModel.StudentsCombo">
            <summary>
            .en Collection where to chose one parent from combobox for collections smaller than 50
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.TeacherViewModel.AllStudentsQueryVM">
            <summary>
            .en Collection where to chose one parent from datagrid for collections greater than 50
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.TeacherViewModel.StudentsQueryVM">
            <summary>
            
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.TeacherViewModel.GetById(System.Int32)">
            <summary>.es Obtener el dto de la entidad Teacher por su identificador.</summary>
            <param name="identifier">.es Parámetro que indica el identificador de la entidad que se va a recuperar.</param>
            <returns>.es Devuelve el objeto Dto <see cref="T:Needel.Common.Application.Dtos.TeacherDto"/> correspondiente.</returns>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.TeacherViewModel.OnSaveRecord(System.Object)">
            <summary>.es Crear o actualizar una entidad de tipo Teacher.</summary>
            <param name="parameter">data to update.</param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.TeacherViewModel.OnNewRecord(System.Object)">
            <summary>.en Create a new Teacher</summary>
            <param name="parameter">.en Data to create the new Teacher</param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.TeacherViewModel.AttachStudent(Needel.Common.FrontEnd.WpfModule.StudentQueryViewModel,Needel.Common.Application.Dtos.StudentDto)">
            <summary>
            
            </summary>
            <param name="dataContextTarget"></param>
            <param name="data"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.TeacherViewModel.RemoveStudent(System.String,Needel.Common.FrontEnd.WpfModule.StudentQueryViewModel,Needel.Common.Application.Dtos.StudentDto)">
            <summary>
            
            </summary>
            <param name="sourceTittle"></param>
            <param name="dataContextTarget"></param>
            <param name="data"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.TeacherViewModel.SetupValidation(MvvmValidation.ValidationHelper)">
            <summary>
            example to execute validation rules
            </summary>
            <param name="validation"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.TeacherViewModel.OnNavigatedTo(Microsoft.Practices.Prism.Regions.NavigationContext)">
            <summary>
            .en Here is possible to override the actions to execute when there is a navigation request
            </summary>
            <remarks>
             this logic applys when you came from the collection of users through double click
             load parent entities and populate the related combobox with unique value
            .en Here is where to call to the methods to load the related entities (children and parents).
            .es aqui es donde se invoca a los métodos de carga de las entidades adicionales.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.TeacherViewModel.OnReceiveCompositeViewUpdateEvent(System.String)">
            <summary>. en Action to execute when there is a call to update the view.</summary>
            <param name="message"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.TeacherViewModel.BeginEdit">
            <summary>
            override of Generic BeginEdit to avoid the edition in the blank line of query viewmodel with double click
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.UserQueryViewModel">
            <summary>
            .en Interaction logic for UserQueryView.xaml
            .es Logica de interación para la vista UserQueryView.xaml
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.UserQueryViewModel.#ctor(System.String)">
            <summary>
            .en Initialize a new instace for the class <see cref="T:UserQueryViewModel"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:UserQueryViewModel"/>.
            </summary>
            <param name="parentViewName"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.UserQueryViewModel.#ctor(Inflexion2.Application.SpecificationDto,System.String)">
            <summary>
            .en Constructor for nested view models in master detail from parent entities and Many to many.
            </summary>
            <param name="baseFilter"></param>
            <param name="parentViewName"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.UserQueryViewModel.#ctor(System.Collections.Generic.IList{Needel.Common.Application.Dtos.UserDto},System.String)">
            <summary>
            .en View Model constructor from collection of Dtos.
            </summary>
            <param name="collection"></param>
            <param name="parentViewName"></param>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.UserQueryViewModel.ChangeActivateStatusCommand">
            <summary>
            .en Property to get the command of changing state.
            .es Propiedad que obtiene el comando de cambio de estado.
            </summary>
            <value>
            Valor utilizado para obtener el comando de cambio de estado.
            </value>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.UserQueryViewModel.OnDeleteRecord(System.Object)">
            <summary>
            Método público encargado del borrado de una entidad.
            </summary>
            <param name="parameter">
            Parámetro con información adicional.
            </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.UserQueryViewModel.OnGetRecords(System.Object)">
            <summary>
            .en get records from User.
            .es Método encargado de obtener todos los registros de User.
            </summary>
            <param name="parameter">
            .en parameter with additional info
            .es Parámetro con información adicional.
            </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.UserQueryViewModel.OnGetFirstPageRecords(System.Object)">
            <summary>
            .en Get First Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la primera página de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.UserQueryViewModel.OnGetNextPageRecords(System.Object)">
            <summary>
            .en Get Next Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la siguiente página de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.UserQueryViewModel.OnGetPreviousPageRecords(System.Object)">
            <summary>
            .en Get Previus Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la página anterior de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.UserQueryViewModel.OnGetLastPageRecords(System.Object)">
            <summary>
            .en Get Last Page records method. 
                This command answer to a call from the ribbon region tab.
            .es ejecutamos el servicio de ir a la ultima página de la lista de registros. 
                responde al command invocado desde su comando en la region del ribbon.
            </summary>
            <param name="parameter">.en aditional info to pass to this method .es informacion adicional </param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.UserQueryViewModel.CanGetRecords(System.Object)">
            <summary>
            Esta entidad no es root y no tiene propiedad de navegación por tanto no puede hacerse un get records
            solo se puede navegar a traves de los existentes.
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.UserQueryViewModel.ResetUser">
            <summary>
            .es Método privado para resetear el ViewModel.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.UserQueryViewModel.OnNavigatedTo(Microsoft.Practices.Prism.Regions.NavigationContext)">
            <summary>
            .en refresh the collection of items raising a property changed event
            </summary>
            <param name="navigationContext"></param>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.UserViewModel">
            <summary>
            .en Interaction logic for UserViewModel.xaml
            .es Logica de interación para la vista UserViewModel.xaml
            </summary>
        </member>
        <member name="F:Needel.Common.FrontEnd.WpfModule.UserViewModel.from1VM">
            <summary>
            Campo para indicar que el viewmodel esta embevido en un viewmodel parental con el objeto de 
            de asegurar que se añade al menos un registro en esta entidad cuando se crea el padre de esta.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.UserViewModel.#ctor">
            <summary>
            .en Parameterless constructor to implement the "IEditable" interface in query viewmodels that allow "editable row"
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.UserViewModel.#ctor(System.Boolean)">
            <summary>
            .en Initialize a new instace for the class <see cref="T:UserViewModel"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:UserViewModel"/>.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.UserViewModel.#ctor(Needel.Common.Application.Dtos.UserDto,Needel.Common.Application.Dtos.UserDto,Needel.Common.Application.Dtos.UserDto,Needel.Common.Application.Dtos.UserDto,Needel.Common.Application.Dtos.UserDto)">
            <summary>
            .en Child composed constructor <see cref="T:UserViewModel"/>.
            This constructor is used to be the viewmodel of a nested viemodel in a hierchahy.
            </summary>
            <param name="element">
            .en Parameter of type <see cref="T:Needel.Common.Application.Dtos.UserDto"/> with all the related data.</param>
            <param name="first">first element in the current paged collection</param>
            <param name="previous">last element in the current paged collection</param>
            <param name="next">next element in the current paged collection</param>
            <param name="last">last element in the current paged collection</param>
            <remarks>
            .en these initialization are to allow navigation betwen pages and not only next record. TODO: test this.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.UserViewModel.#ctor(Needel.Common.Application.Dtos.UserDto,System.Boolean)">
            <summary>
            .es Inicializa una nueva instancia de la clase <see cref="T:UserViewModel"/>.
            Este constructor se invoca desde el QueryViewModel ya que para cada 
            linea que se visualiza en la lista de Usuarios se crea el Viewmodel de dicho usuario.
            Esta lista se almacena en una observable collection en el query view model con la que se hace el binding 
            de la pantalla query.
            Por esta razon las entidades relacionadas no se cargan si no se navega hasta esta entidad.
            </summary>
            <param name="element">
            Parámetro de tipo <see cref="T:Needel.Common.Application.Dtos.UserDto"/> que contiene la información necesaria.
            </param>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.UserViewModel.Name">
            <summary>
            Field to explain the meaning of this key
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.UserViewModel.From1VM">
            <summary>
            Campo para indicar que el viewmodel esta embebido en un viewmodel parental con el objeto de 
            de asegurar que se añade al menos un registro en esta entidad cuando se crea el padre de esta.
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.UserViewModel.UserDepartment">
            <summary>
            Wraper property to help binding  
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.UserViewModel.DepartmentsCombo">
            <summary>
            .en Collection where to chose one parent from combobox for collections smaller than 50
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.UserViewModel.AllDepartmentsQueryVM">
            <summary>
            .en Collection where to chose one parent from datagrid for collections greater than 50
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.UserViewModel.Addresses">
            <summary>
            Property helper to allow easy access to the children properties
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.UserViewModel.AddressesQueryVM">
            <summary>
            
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.UserViewModel.Address1VM">
            <summary>
            
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.UserViewModel.AllUserDepartmentQueryVM">
            <summary>
            collection for drag and drop
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.UserViewModel.GetById(System.Int32)">
            <summary>.es Obtener el dto de la entidad User por su identificador.</summary>
            <param name="identifier">.es Parámetro que indica el identificador de la entidad que se va a recuperar.</param>
            <returns>.es Devuelve el objeto Dto <see cref="T:Needel.Common.Application.Dtos.UserDto"/> correspondiente.</returns>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.UserViewModel.OnSaveRecord(System.Object)">
            <summary>.es Crear o actualizar una entidad de tipo User.</summary>
            <param name="parameter">data to update.</param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.UserViewModel.OnNewRecord(System.Object)">
            <summary>.en Create a new User</summary>
            <param name="parameter">.en Data to create the new User</param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.UserViewModel.SetupValidation(MvvmValidation.ValidationHelper)">
            <summary>
            example to execute validation rules
            </summary>
            <param name="validation"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.UserViewModel.OnNavigatedTo(Microsoft.Practices.Prism.Regions.NavigationContext)">
            <summary>
            .en Here is possible to override the actions to execute when there is a navigation request
            </summary>
            <remarks>
             this logic applys when you came from the collection of users through double click
             load parent entities and populate the related combobox with unique value
            .en Here is where to call to the methods to load the related entities (children and parents).
            .es aqui es donde se invoca a los métodos de carga de las entidades adicionales.
            </remarks>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.UserViewModel.OnReceiveCompositeViewUpdateEvent(System.String)">
            <summary>. en Action to execute when there is a call to update the view.</summary>
            <param name="message"></param>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.UserViewModel.BeginEdit">
            <summary>
            override of Generic BeginEdit to avoid the edition in the blank line of query viewmodel with double click
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.CommonModuleNavigationView">
            <summary>
            .es Lógica de interacción para <see cref="T:CommonModuleNavigationView.xaml"/>.
            .en Interaction logic for <see cref="T:CommonModuleNavigationView.xaml"/>.
            </summary>
            <summary>
            CommonModuleNavigationView
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.CommonModuleNavigationView.#ctor(Needel.Common.FrontEnd.WpfModule.CommonModuleNavigationViewModel)">
            <summary>
            .es constructor <see cref="T:CommonModuleNavigationView"/>.
            .en constructor <see cref="T:CommonModuleNavigationView"/>.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.CommonModuleNavigationView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.CommonModuleRibbonTab">
            <summary>
            .en Interaction logic for CommonModuleRibbonTab.xaml
            .es logica de interacción para CommonModuleRibbonTab.xaml
            </summary>
            <summary>
            CommonModuleRibbonTab
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.CommonModuleRibbonTab.#ctor">
            <summary>
            .en Initialize a new instace for the class <see cref="T:CommonModuleRibbonTab"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:CommonModuleRibbonTab"/>.
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.CommonModuleRibbonTab.KeepAlive">
            <summary>
            IRegionMemberLifetime implementation
            Gets a value indicating whether this instance should be kept-alive upon deactivation.
            http://stackoverflow.com/questions/5115484/how-to-create-a-new-view-every-time-navigation-occurs-in-prism
            http://codefinders.blogspot.de/2013/11/disposing-views-in-prism.html
            Returning a false value everytime that there is a request of a view creates a new view
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.CommonModuleRibbonTab.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.CommonModuleTaskBarView">
            <summary>CommonModuleTaskBarView.xaml
            .es logica de interacción para CommonTaskBarView.xaml
            </summary>
            <summary>
            CommonModuleTaskBarView
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.CommonModuleTaskBarView.#ctor(Needel.Common.FrontEnd.WpfModule.CommonModuleTaskBarViewModel)">
            <summary>
            .en Initialize a new instace for the class <see cref="T:CommonTaskBarView"/>.
            .es Inicializa una nueva instancia de la clase <see cref="T:CommonTaskBarView"/>.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.CommonModuleTaskBarView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.CommonModuleNavigationViewModel">
            <summary>
            navigation viewmodel for the bounded context Common .
            </summary>
            <summary>
            navigation viewmodel for the bounded context Common .
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.CommonModuleNavigationViewModel.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:CommonModuleNavigationViewModel"/>.
            </summary>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.CommonModuleNavigationViewModel.ShowAppSettingView">
            <summary>
            .en Gets or Sets the command to load the view of the entity AppSetting.
            .es Obtiene o establece el comando de carga de la vista de AppSetting.
            </summary>
            <value>
            .en Tells to load the view of the entity AppSetting.
            .es Indica el comando de carga de la vista AppSetting.
            </value>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.CommonModuleNavigationViewModel.ShowDepartmentView">
            <summary>
            .en Gets or Sets the command to load the view of the entity Department.
            .es Obtiene o establece el comando de carga de la vista de Department.
            </summary>
            <value>
            .en Tells to load the view of the entity Department.
            .es Indica el comando de carga de la vista Department.
            </value>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.CommonModuleNavigationViewModel.ShowComponentView">
            <summary>
            .en Gets or Sets the command to load the view of the entity Component.
            .es Obtiene o establece el comando de carga de la vista de Component.
            </summary>
            <value>
            .en Tells to load the view of the entity Component.
            .es Indica el comando de carga de la vista Component.
            </value>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.CommonModuleNavigationViewModel.ShowTeacherView">
            <summary>
            .en Gets or Sets the command to load the view of the entity Teacher.
            .es Obtiene o establece el comando de carga de la vista de Teacher.
            </summary>
            <value>
            .en Tells to load the view of the entity Teacher.
            .es Indica el comando de carga de la vista Teacher.
            </value>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.CommonModuleNavigationViewModel.ShowStudentView">
            <summary>
            .en Gets or Sets the command to load the view of the entity Student.
            .es Obtiene o establece el comando de carga de la vista de Student.
            </summary>
            <value>
            .en Tells to load the view of the entity Student.
            .es Indica el comando de carga de la vista Student.
            </value>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.CommonModuleNavigationViewModel.ShowGraphNodeView">
            <summary>
            .en Gets or Sets the command to load the view of the entity GraphNode.
            .es Obtiene o establece el comando de carga de la vista de GraphNode.
            </summary>
            <value>
            .en Tells to load the view of the entity GraphNode.
            .es Indica el comando de carga de la vista GraphNode.
            </value>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.CommonModuleNavigationViewModel.ShowEntityMView">
            <summary>
            .en Gets or Sets the command to load the view of the entity EntityM.
            .es Obtiene o establece el comando de carga de la vista de EntityM.
            </summary>
            <value>
            .en Tells to load the view of the entity EntityM.
            .es Indica el comando de carga de la vista EntityM.
            </value>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.CommonModuleNavigationViewModel.ShowMNZView">
            <summary>
            .en Gets or Sets the command to load the view of the entity MNZ.
            .es Obtiene o establece el comando de carga de la vista de MNZ.
            </summary>
            <value>
            .en Tells to load the view of the entity MNZ.
            .es Indica el comando de carga de la vista MNZ.
            </value>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.CommonModuleNavigationViewModel.ShowEntityNView">
            <summary>
            .en Gets or Sets the command to load the view of the entity EntityN.
            .es Obtiene o establece el comando de carga de la vista de EntityN.
            </summary>
            <value>
            .en Tells to load the view of the entity EntityN.
            .es Indica el comando de carga de la vista EntityN.
            </value>
        </member>
        <member name="P:Needel.Common.FrontEnd.WpfModule.CommonModuleNavigationViewModel.ShowEntityZView">
            <summary>
            .en Gets or Sets the command to load the view of the entity EntityZ.
            .es Obtiene o establece el comando de carga de la vista de EntityZ.
            </summary>
            <value>
            .en Tells to load the view of the entity EntityZ.
            .es Indica el comando de carga de la vista EntityZ.
            </value>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.CommonModuleNavigationViewModel.Initialize">
            <summary>
            Inicializa el modelo de vista.
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.CommonModuleRibbonViewModel">
            <summary>
            ViewModel del tool bar ribbon for Common/>.
            </summary>
        </member>
        <member name="T:Needel.Common.FrontEnd.WpfModule.CommonModuleTaskBarViewModel">
            <summary>
            ViewModel para el boton del bounded context Common.
            </summary>
        </member>
        <member name="M:Needel.Common.FrontEnd.WpfModule.CommonModuleTaskBarViewModel.#ctor">
             <summary>
             Inicializa una nueva instancia de la clase <see cref="T:CommonModuleTaskBarViewModel"/>.
             </summary>
            <remarks>
            Constructor de la clase <see cref="T:CommonModuleTaskBarViewModel"/>.
            </remarks>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
