<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnObjectOfType0WasNotAvailableFromThePool" xml:space="preserve">
    <value>No hay objetos del tipo {0} disponibles en el pool</value>
  </data>
  <data name="CanNotDirectlySaveAChildObject" xml:space="preserve">
    <value>No se puede guardar directamente un objeto del tipo Child</value>
  </data>
  <data name="CertificateFileNameFormatNotValidFilePassword" xml:space="preserve">
    <value>Certificate file name format not valid. 'file|password'</value>
  </data>
  <data name="Code0WasNotPresentInDataSetCollection" xml:space="preserve">
    <value>El codigo: {0} no esta presente en la coleccion.</value>
  </data>
  <data name="CodeFieldNameNotSpecifiedUnableToFetchByCode" xml:space="preserve">
    <value>El nombre del campo codigo no esta definido. Imposible realizar la busqueda por codigo.</value>
  </data>
  <data name="CouldNotCreateType" xml:space="preserve">
    <value>No se pudo crear el tipo.</value>
  </data>
  <data name="CouldNotDefineType" xml:space="preserve">
    <value>No se pudo definir el tipo.</value>
  </data>
  <data name="CouldNotGenerateAssembly" xml:space="preserve">
    <value>No se pudo generar el assembly: </value>
  </data>
  <data name="CouldNotGenerateModuleBuilder" xml:space="preserve">
    <value>No se pudo generar el constructor del modulo.</value>
  </data>
  <data name="CreationTimeoutCannotBeNegative" xml:space="preserve">
    <value>creationTimeout debe ser positivo.</value>
  </data>
  <data name="DataLayerServiceCanTBeNull" xml:space="preserve">
    <value>DataLayerService no puede ser nulo.</value>
  </data>
  <data name="ErrorMasterObjectsCanNotSupportChildDeleteMethod" xml:space="preserve">
    <value>Error: los objetos Master Objects no soportan el metodo ChildDelete.</value>
  </data>
  <data name="ErrorReadingField0FormTheDataSource" xml:space="preserve">
    <value>Error al leer el campo: {0} del data source.</value>
  </data>
  <data name="IdentityCanNotBeNull" xml:space="preserve">
    <value>Identity no puede ser nulo</value>
  </data>
  <data name="IEndpointBehaviorTypeSpecifiedMustHaveAPublicEmptyConstructor" xml:space="preserve">
    <value>El IEndpointBehaviorType especificado en el atributo FlatWsdlServiceBehaviorAttribute debe tener un constructor publico y vacio.</value>
  </data>
  <data name="InvalidConnectionStringId" xml:space="preserve">
    <value>Cadena de conexion invalida ({0})</value>
  </data>
  <data name="IsRequired" xml:space="preserve">
    <value>{0} es requerido</value>
  </data>
  <data name="LinqEntityAttributeNotDefined" xml:space="preserve">
    <value>No se ha definido el attributo LinqEntityAttribute.</value>
  </data>
  <data name="MaxPoolSizeCannotBeNegative" xml:space="preserve">
    <value>maxPoolSize debe ser positivo</value>
  </data>
  <data name="MinPoolSizeCannotBeGreaterThanMaxPoolSize" xml:space="preserve">
    <value>minPoolSize no puede ser mayor quemaxPoolSize</value>
  </data>
  <data name="MinPoolSizeCannotBeNegative" xml:space="preserve">
    <value>minPoolSize debe ser positivo</value>
  </data>
  <data name="MustBeGreaterOrEqualThan1" xml:space="preserve">
    <value>{0} debe ser mayor o igual a {1}</value>
  </data>
  <data name="NameCannotBeNull" xml:space="preserve">
    <value>Name nio puede ser nulo.</value>
  </data>
  <data name="ObjectIsNotChildAndCanNotBeSaved" xml:space="preserve">
    <value>El objeto no es Child y no puede ser guardado.</value>
  </data>
  <data name="ObjectIsNotValidAndCanNotBeSaved" xml:space="preserve">
    <value>El objeto no es válido y no puede ser guardado.</value>
  </data>
  <data name="ObjectIsStillBeingEditedAndCanNotBeSaved" xml:space="preserve">
    <value>El objeto un se esta editando y no puede ser guardado</value>
  </data>
  <data name="PageMustBeGreaterOrEqualTo1" xml:space="preserve">
    <value>page debe ser mayor o igual a 1</value>
  </data>
  <data name="Type0CannotBeUnregisteredBecauseThereAreActiveThreadsWaitingForAnObject" xml:space="preserve">
    <value>El tipo {0} no puede ser eliminado del registro ya que existen peticiones pendientes.</value>
  </data>
  <data name="Type0IsNotRegisteredInTheObjectPool" xml:space="preserve">
    <value>El tipo  {0} no se encuentra registrado en el pool.</value>
  </data>
  <data name="TypeCannotBeNull" xml:space="preserve">
    <value>Type no puede ser nulo.</value>
  </data>
  <data name="TypeIsAlreadyRegisteredInTheObjectPool" xml:space="preserve">
    <value>El tipo {0} ya se encuentra registrado en el pool.</value>
  </data>
  <data name="UnableToReadKeyOrIv" xml:space="preserve">
    <value>Error al leer el key o iv.</value>
  </data>
  <data name="UnableToStartProvider" xml:space="preserve">
    <value>Error al inicializar el proveedor.</value>
  </data>
  <data name="ValueIsNotAnEmail" xml:space="preserve">
    <value>El valor de {0} no es un email</value>
  </data>
  <data name="ValueIsNotCorrectlyFormatted" xml:space="preserve">
    <value>El valor de {0} no tiene el formato correcto</value>
  </data>
  <data name="ValueIsNotOfTheCorrectType" xml:space="preserve">
    <value>El valor de {0} no es del tipo de datos correcto</value>
  </data>
  <data name="ValueMustBeBetween1And2" xml:space="preserve">
    <value>El valor de {0} debe estar entre {1} y {2}</value>
  </data>
  <data name="MapperErrorEntityNull" xml:space="preserve">
    <value>Se ha producido un error en el mapeo de los datos de la entidad {0}. Parámetro de entrada nulo.</value>
  </data>
  <data name="DataTransferObjectIsNull" xml:space="preserve">
    <value>El Dto de la entidad {0} no puede ser nulo.</value>
  </data>
  <data name="IsNotTransient" xml:space="preserve">
    <value>La entidad {0} debe ser transient, su id no tiene el valor por defecto.</value>
  </data>
  <data name="PropertyRequired" xml:space="preserve">
    <value>La propiedad {0} en la entidad {0} es obligatoria.</value>
  </data>
  <data name="NoDataById" xml:space="preserve">
    <value>no hay {0} con el id {1}</value>
  </data>
  <data name="CanNotUpdateInexistenceEntity" xml:space="preserve">
    <value>No se puede actualizar la entidad inexistente en {0}</value>
  </data>
  <data name="EspecificationDataTransferObjectIsNull" xml:space="preserve">
    <value>el parametro dto  de especifacición para la entidad  {0} no puede ser nulo.</value>
  </data>
</root>