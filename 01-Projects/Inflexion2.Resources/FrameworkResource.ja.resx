<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Acept" xml:space="preserve">
    <value>受け入れ</value>
  </data>
  <data name="AnObjectOfType0WasNotAvailableFromThePool" xml:space="preserve">
    <value>型 {0} のオブジェクトからできませんでした、プール</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="Canceled" xml:space="preserve">
    <value>{0} キャンセル</value>
  </data>
  <data name="CanNotDeactivate" xml:space="preserve">
    <value>{0} を非アクティブ化することはできません。</value>
  </data>
  <data name="CanNotDelete" xml:space="preserve">
    <value>{0} を削除できません。</value>
  </data>
  <data name="CanNotDirectlySaveAChildObject" xml:space="preserve">
    <value>子オブジェクトを直接保存することができます。</value>
  </data>
  <data name="CanNotUpdateInexistenceEntity" xml:space="preserve">
    <value>存するエンティティ {0} を更新できません。</value>
  </data>
  <data name="CertificateFileNameFormatNotValidFilePassword" xml:space="preserve">
    <value>証明書ファイル名の形式が無効です。' ファイル | パスワード '</value>
  </data>
  <data name="Code0WasNotPresentInDataSetCollection" xml:space="preserve">
    <value>コード: {0} がデータ セットのコレクションに存在しませんでした。</value>
  </data>
  <data name="CodeFieldNameNotSpecifiedUnableToFetchByCode" xml:space="preserve">
    <value>コード フィールド名が指定されていません。コードで取得することができません。</value>
  </data>
  <data name="CollectionCantBeNull" xml:space="preserve">
    <value>{0} のコレクションを null にすることはできません。</value>
  </data>
  <data name="CouldNotCreateType" xml:space="preserve">
    <value>ない CreateType を可能性があります。</value>
  </data>
  <data name="CouldNotDefineType" xml:space="preserve">
    <value>DefineType ないを可能性があります。</value>
  </data>
  <data name="CouldNotGenerateAssembly" xml:space="preserve">
    <value>アセンブリを生成できませんでした。</value>
  </data>
  <data name="CouldNotGenerateModuleBuilder" xml:space="preserve">
    <value>ビルダー モジュールを生成できませんでした。</value>
  </data>
  <data name="CreationTimeoutCannotBeNegative" xml:space="preserve">
    <value>creationTimeout は負の値にすることはできません。</value>
  </data>
  <data name="DataLayerServiceCanTBeNull" xml:space="preserve">
    <value>DataLayerService を null にすることはできません。</value>
  </data>
  <data name="DataTransferObjectIsNull" xml:space="preserve">
    <value>エンティティ {0} Dto を null にすることはできません。</value>
  </data>
  <data name="EmailNotCorrect" xml:space="preserve">
    <value>電子メール {0} は正しくありません。</value>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>エンティティ {0}</value>
  </data>
  <data name="EntityNotActive" xml:space="preserve">
    <value>エンティティ {0} はアクティブではありません。</value>
  </data>
  <data name="EntityRequired" xml:space="preserve">
    <value>エンティティ {0} が必要です。</value>
  </data>
  <data name="ErrorMasterObjectsCanNotSupportChildDeleteMethod" xml:space="preserve">
    <value>エラー: マスターのオブジェクトことができますの ChildDelete メソッドをサポートしていません</value>
  </data>
  <data name="ErrorReadingField0FormTheDataSource" xml:space="preserve">
    <value>エラー読み取りフィールド: {0} フォーム データ ソース</value>
  </data>
  <data name="EspecificationDataTransferObjectIsNull" xml:space="preserve">
    <value>エンティティ {0} の Especification Dto パラメーターを null にすることはできません。</value>
  </data>
  <data name="FieldIsRequired" xml:space="preserve">
    <value>エンティティ {1} のフィールド {0} が必要です。</value>
  </data>
  <data name="FieldNameRequired" xml:space="preserve">
    <value>エンティティ {0} の名前が必要</value>
  </data>
  <data name="Founded" xml:space="preserve">
    <value>{0} 設立</value>
  </data>
  <data name="IdentityCanNotBeNull" xml:space="preserve">
    <value>アイデンティティを null にすることはできません。</value>
  </data>
  <data name="IEndpointBehaviorTypeSpecifiedMustHaveAPublicEmptyConstructor" xml:space="preserve">
    <value>IEndpointBehaviorType FlatWsdlServiceBehaviorAttribute コンス トラクターで指定された空のパブリック コンス トラクターが必要です。</value>
  </data>
  <data name="InvalidConnectionStringId" xml:space="preserve">
    <value>無効な ConnectionStringId ({0})</value>
  </data>
  <data name="IsNotTransient" xml:space="preserve">
    <value>エンティティ {0} が一過性のもの、自分の Id が既定値を持っています。</value>
  </data>
  <data name="IsRequired" xml:space="preserve">
    <value>{0} が必要です。</value>
  </data>
  <data name="LinqEntityAttributeNotDefined" xml:space="preserve">
    <value>LinqEntityAttribute が定義されていません。</value>
  </data>
  <data name="MapperErrorEntityNull" xml:space="preserve">
    <value>エンティティ '{0}' のマッピング エラーです。入力パラメーターの null は使用できません。</value>
  </data>
  <data name="MaxPoolSizeCannotBeNegative" xml:space="preserve">
    <value>maxPoolSize は負の値にすることはできません。</value>
  </data>
  <data name="MinPoolSizeCannotBeGreaterThanMaxPoolSize" xml:space="preserve">
    <value>minPoolSize は maxPoolSize より大きくすることはできません。</value>
  </data>
  <data name="MinPoolSizeCannotBeNegative" xml:space="preserve">
    <value>minPoolSize は、否定することはできません。</value>
  </data>
  <data name="Modify" xml:space="preserve">
    <value>{0} を変更します。</value>
  </data>
  <data name="MustBeGreaterOrEqualThan1" xml:space="preserve">
    <value>{0} は {1} よりも大きいか等しいをある必要があります。</value>
  </data>
  <data name="NameCannotBeNull" xml:space="preserve">
    <value>名前を null にすることはできません。</value>
  </data>
  <data name="NameOfUser" xml:space="preserve">
    <value>ユーザーの名前</value>
  </data>
  <data name="NoDataById" xml:space="preserve">
    <value>この id {1} の {0} がありません。</value>
  </data>
  <data name="Object" xml:space="preserve">
    <value>オブジェクト {0}</value>
  </data>
  <data name="ObjectIsNotChildAndCanNotBeSaved" xml:space="preserve">
    <value>オブジェクトの子ではないと保存できません。</value>
  </data>
  <data name="ObjectIsNotValidAndCanNotBeSaved" xml:space="preserve">
    <value>オブジェクトが無効と保存できません。</value>
  </data>
  <data name="ObjectIsStillBeingEditedAndCanNotBeSaved" xml:space="preserve">
    <value>オブジェクトを編集していると保存できません。</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>わかりました</value>
  </data>
  <data name="PageMustBeGreaterOrEqualTo1" xml:space="preserve">
    <value>ページが 1 以上にする必要があります。</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>パスワード</value>
  </data>
  <data name="PropertyRequired" xml:space="preserve">
    <value>エンティティ {1} のプロパティ {0} が必要です。</value>
  </data>
  <data name="Read" xml:space="preserve">
    <value>読み取り</value>
  </data>
  <data name="Readed" xml:space="preserve">
    <value>{0} を読み込もう</value>
  </data>
  <data name="Repeated" xml:space="preserve">
    <value>{0} が繰り返されます。</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>を保存します。</value>
  </data>
  <data name="Saved" xml:space="preserve">
    <value>{0} の保存</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>検索</value>
  </data>
  <data name="Type0CannotBeUnregisteredBecauseThereAreActiveThreadsWaitingForAnObject" xml:space="preserve">
    <value>型 {0} は、オブジェクトを待機しているアクティブなスレッドがあるので登録を解除できません。</value>
  </data>
  <data name="Type0IsNotRegisteredInTheObjectPool" xml:space="preserve">
    <value>オブジェクト プールの種類 {0} が登録されていません</value>
  </data>
  <data name="TypeCannotBeNull" xml:space="preserve">
    <value>型を null にすることはできません。</value>
  </data>
  <data name="TypeIsAlreadyRegisteredInTheObjectPool" xml:space="preserve">
    <value>型 {0} は既にオブジェクト プールに登録されて</value>
  </data>
  <data name="UnableToReadKeyOrIv" xml:space="preserve">
    <value>キーまたは Id を読み取ることができません。</value>
  </data>
  <data name="UnableToStartProvider" xml:space="preserve">
    <value>プロバイダーを開始できません。</value>
  </data>
  <data name="UnitOfWorkIsNull" xml:space="preserve">
    <value>仕事の単位は null</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>{0} を更新します。</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>ユーザー {0}</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>ユーザー名</value>
  </data>
  <data name="ValueIsNotAnEmail" xml:space="preserve">
    <value>{0} の値が電子メール</value>
  </data>
  <data name="ValueIsNotCorrectlyFormatted" xml:space="preserve">
    <value>{0} 値が正しくフォーマットされていません</value>
  </data>
  <data name="ValueIsNotOfTheCorrectType" xml:space="preserve">
    <value>{0} 値が正しい型の</value>
  </data>
  <data name="ValueMustBeBetween1And2" xml:space="preserve">
    <value>{0} 値は {1} から {2} 間でなければなりません</value>
  </data>
  <data name="flow" xml:space="preserve">
    <value>LeftToRight</value>
  </data>
  <data name="Access" xml:space="preserve">
    <value>アクセス</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>ログイン</value>
  </data>
  <data name="SaveMessage" xml:space="preserve">
    <value>セーブ {0}</value>
  </data>
  <data name="SaveRecord" xml:space="preserve">
    <value>レコードの保存</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>新しい</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>加えます</value>
  </data>
  <data name="AddNewRecord" xml:space="preserve">
    <value>新しいレコードを追加</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>編集</value>
  </data>
  <data name="EditRecord" xml:space="preserve">
    <value>レコード編集</value>
  </data>
  <data name="DeleteRecord" xml:space="preserve">
    <value>レコードを削除します</value>
  </data>
  <data name="Get" xml:space="preserve">
    <value>取得する</value>
  </data>
  <data name="SearchMessage" xml:space="preserve">
    <value>サーチ {0}</value>
  </data>
  <data name="First" xml:space="preserve">
    <value>最初</value>
  </data>
  <data name="FirstPage" xml:space="preserve">
    <value>一ページ目</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>次</value>
  </data>
  <data name="NextPage" xml:space="preserve">
    <value>次のページ</value>
  </data>
  <data name="Paging" xml:space="preserve">
    <value>ページング</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>前</value>
  </data>
  <data name="PreviousPage" xml:space="preserve">
    <value>前のページ</value>
  </data>
  <data name="Last" xml:space="preserve">
    <value>最終</value>
  </data>
  <data name="LastPage" xml:space="preserve">
    <value>最後のページ</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>削除</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>自宅</value>
  </data>
</root>