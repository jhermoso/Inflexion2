<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Acept" xml:space="preserve">
    <value>Acept</value>
  </data>
  <data name="AnObjectOfType0WasNotAvailableFromThePool" xml:space="preserve">
    <value>Um objeto do tipo {0} não estava disponível do pool</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="Canceled" xml:space="preserve">
    <value>{0} cancelada</value>
  </data>
  <data name="CanNotDeactivate" xml:space="preserve">
    <value>O {0} não pode ser desativado.</value>
  </data>
  <data name="CanNotDelete" xml:space="preserve">
    <value>O {0} não pode ser excluído.</value>
  </data>
  <data name="CanNotDirectlySaveAChildObject" xml:space="preserve">
    <value>Não pode salvar diretamente um objeto filho</value>
  </data>
  <data name="CanNotUpdateInexistenceEntity" xml:space="preserve">
    <value>Pode não atualizar a inexistência de entidade {0}.</value>
  </data>
  <data name="CertificateFileNameFormatNotValidFilePassword" xml:space="preserve">
    <value>Formato de nome arquivo certificado não é válido. ' arquivo | senha '</value>
  </data>
  <data name="Code0WasNotPresentInDataSetCollection" xml:space="preserve">
    <value>Código: {0} não estava presente na coleção de conjunto de dados</value>
  </data>
  <data name="CodeFieldNameNotSpecifiedUnableToFetchByCode" xml:space="preserve">
    <value>Nome do campo de código não especificado. Não é possível buscar por código.</value>
  </data>
  <data name="CollectionCantBeNull" xml:space="preserve">
    <value>A coleção de {0} não pode ser nula</value>
  </data>
  <data name="CouldNotCreateType" xml:space="preserve">
    <value>Poderia não CreateType </value>
  </data>
  <data name="CouldNotDefineType" xml:space="preserve">
    <value>Poderia não DefineType </value>
  </data>
  <data name="CouldNotGenerateAssembly" xml:space="preserve">
    <value>Não foi possível gerar o conjunto</value>
  </data>
  <data name="CouldNotGenerateModuleBuilder" xml:space="preserve">
    <value>Não foi possível gerar o construtor de módulo</value>
  </data>
  <data name="CreationTimeoutCannotBeNegative" xml:space="preserve">
    <value>creationTimeout não pode ser negativo</value>
  </data>
  <data name="DataLayerServiceCanTBeNull" xml:space="preserve">
    <value>DataLayerService não pode ser nulo</value>
  </data>
  <data name="DataTransferObjectIsNull" xml:space="preserve">
    <value>A entidade {0} Dto não pode ser nulo</value>
  </data>
  <data name="EmailNotCorrect" xml:space="preserve">
    <value>O e-mail {0} não é correto</value>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>Entidade {0}</value>
  </data>
  <data name="EntityNotActive" xml:space="preserve">
    <value>A entidade {0} não está ativo</value>
  </data>
  <data name="EntityRequired" xml:space="preserve">
    <value>A entidade {0} é necessária</value>
  </data>
  <data name="ErrorMasterObjectsCanNotSupportChildDeleteMethod" xml:space="preserve">
    <value>Erro: Mestre objetos pode não suporte o método ChildDelete</value>
  </data>
  <data name="ErrorReadingField0FormTheDataSource" xml:space="preserve">
    <value>Campo de leitura de erro: {0} formam a fonte de dados</value>
  </data>
  <data name="EspecificationDataTransferObjectIsNull" xml:space="preserve">
    <value>O parâmetro Especification Dto para entidade {0} não pode ser nulo</value>
  </data>
  <data name="FieldIsRequired" xml:space="preserve">
    <value>O campo {0} de {1} a entidade é necessário</value>
  </data>
  <data name="FieldNameRequired" xml:space="preserve">
    <value>O nome da entidade {0} é necessário</value>
  </data>
  <data name="Founded" xml:space="preserve">
    <value>{0} fundado</value>
  </data>
  <data name="IdentityCanNotBeNull" xml:space="preserve">
    <value>Identidade não pode ser nula.</value>
  </data>
  <data name="IEndpointBehaviorTypeSpecifiedMustHaveAPublicEmptyConstructor" xml:space="preserve">
    <value>IEndpointBehaviorType especificado no Construtor FlatWsdlServiceBehaviorAttribute deve ter um construtor público vazio.</value>
  </data>
  <data name="InvalidConnectionStringId" xml:space="preserve">
    <value>ConnectionStringId inválido ({0})</value>
  </data>
  <data name="IsNotTransient" xml:space="preserve">
    <value>A entidade {0} deve ser transitório, sua identificação deve ser o valor padrão.</value>
  </data>
  <data name="IsRequired" xml:space="preserve">
    <value>{0} é necessária</value>
  </data>
  <data name="LinqEntityAttributeNotDefined" xml:space="preserve">
    <value>LinqEntityAttribute não definido.</value>
  </data>
  <data name="MapperErrorEntityNull" xml:space="preserve">
    <value>Erro de mapeamento para a entidade '{0}'. Parâmetro de entrada nulo não permitido.</value>
  </data>
  <data name="MaxPoolSizeCannotBeNegative" xml:space="preserve">
    <value>maxPoolSize não pode ser negativo</value>
  </data>
  <data name="MinPoolSizeCannotBeGreaterThanMaxPoolSize" xml:space="preserve">
    <value>minPoolSize não pode ser superior a maxPoolSize</value>
  </data>
  <data name="MinPoolSizeCannotBeNegative" xml:space="preserve">
    <value>minPoolSize não pode ser negativo</value>
  </data>
  <data name="Modify" xml:space="preserve">
    <value>Modificar {0}</value>
  </data>
  <data name="MustBeGreaterOrEqualThan1" xml:space="preserve">
    <value>{0} deve ser maior ou igual que {1}</value>
  </data>
  <data name="NameCannotBeNull" xml:space="preserve">
    <value>Nome não pode ser nulo.</value>
  </data>
  <data name="NameOfUser" xml:space="preserve">
    <value>Nome de usuário</value>
  </data>
  <data name="NoDataById" xml:space="preserve">
    <value>Não há {0} com esta identificação {1}</value>
  </data>
  <data name="Object" xml:space="preserve">
    <value>Objeto {0}</value>
  </data>
  <data name="ObjectIsNotChildAndCanNotBeSaved" xml:space="preserve">
    <value>Objeto não é criança e não pode ser salvo</value>
  </data>
  <data name="ObjectIsNotValidAndCanNotBeSaved" xml:space="preserve">
    <value>Objeto não é válido e não pode ser salvo</value>
  </data>
  <data name="ObjectIsStillBeingEditedAndCanNotBeSaved" xml:space="preserve">
    <value>Objeto ainda está sendo editado e não pode ser salvo</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Okey</value>
  </data>
  <data name="PageMustBeGreaterOrEqualTo1" xml:space="preserve">
    <value>página deve ser maior ou igual a 1</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Senha</value>
  </data>
  <data name="PropertyRequired" xml:space="preserve">
    <value>A propriedade {0} em {1} entidade é necessário</value>
  </data>
  <data name="Read" xml:space="preserve">
    <value>Leitura</value>
  </data>
  <data name="Readed" xml:space="preserve">
    <value>readed {0}</value>
  </data>
  <data name="Repeated" xml:space="preserve">
    <value>O {0} é repetido.</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Salvar</value>
  </data>
  <data name="Saved" xml:space="preserve">
    <value>{0} Saved</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Pesquisar</value>
  </data>
  <data name="Type0CannotBeUnregisteredBecauseThereAreActiveThreadsWaitingForAnObject" xml:space="preserve">
    <value>O tipo {0} não pode ser cancelado porque há segmentos ativos à espera de um objeto.</value>
  </data>
  <data name="Type0IsNotRegisteredInTheObjectPool" xml:space="preserve">
    <value>O tipo {0} não está registrado no pool de objeto</value>
  </data>
  <data name="TypeCannotBeNull" xml:space="preserve">
    <value>Tipo não pode ser nulo.</value>
  </data>
  <data name="TypeIsAlreadyRegisteredInTheObjectPool" xml:space="preserve">
    <value>O tipo {0} já está registrado na piscina objeto</value>
  </data>
  <data name="UnableToReadKeyOrIv" xml:space="preserve">
    <value>Não é possível ler a chave ou Id</value>
  </data>
  <data name="UnableToStartProvider" xml:space="preserve">
    <value>Não é possível iniciar o provedor</value>
  </data>
  <data name="UnitOfWorkIsNull" xml:space="preserve">
    <value>a unidade de trabalho é nula</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Atualizar {0}</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>Usuário {0}</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>Nome de usuário</value>
  </data>
  <data name="ValueIsNotAnEmail" xml:space="preserve">
    <value>valor de {0} não é um e-mail</value>
  </data>
  <data name="ValueIsNotCorrectlyFormatted" xml:space="preserve">
    <value>valor de {0} não está formatado corretamente</value>
  </data>
  <data name="ValueIsNotOfTheCorrectType" xml:space="preserve">
    <value>valor de {0} não é do tipo correto</value>
  </data>
  <data name="ValueMustBeBetween1And2" xml:space="preserve">
    <value>valor de {0} deve estar compreendida entre {1} e {2}</value>
  </data>
  <data name="flow" xml:space="preserve">
    <value>LeftToRight</value>
  </data>
  <data name="Access" xml:space="preserve">
    <value>Acesso</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="SaveMessage" xml:space="preserve">
    <value>Salvar</value>
  </data>
  <data name="SaveRecord" xml:space="preserve">
    <value>Conservar a ficha</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>Novo</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Adicionar</value>
  </data>
  <data name="AddNewRecord" xml:space="preserve">
    <value>Adicionar novas informações</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Editar</value>
  </data>
  <data name="EditRecord" xml:space="preserve">
    <value>Editar gravar</value>
  </data>
  <data name="DeleteRecord" xml:space="preserve">
    <value>Borrar registro</value>
  </data>
  <data name="Get" xml:space="preserve">
    <value>Obter</value>
  </data>
  <data name="SearchMessage" xml:space="preserve">
    <value>Pesquisa</value>
  </data>
  <data name="First" xml:space="preserve">
    <value>Primeiro</value>
  </data>
  <data name="FirstPage" xml:space="preserve">
    <value>Primeira página</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Próximo</value>
  </data>
  <data name="NextPage" xml:space="preserve">
    <value>Próxima página</value>
  </data>
  <data name="Paging" xml:space="preserve">
    <value>paginação</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>Anterior</value>
  </data>
  <data name="PreviousPage" xml:space="preserve">
    <value>Página anterior</value>
  </data>
  <data name="Last" xml:space="preserve">
    <value>Último</value>
  </data>
  <data name="LastPage" xml:space="preserve">
    <value>Última página</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Eliminar</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
</root>