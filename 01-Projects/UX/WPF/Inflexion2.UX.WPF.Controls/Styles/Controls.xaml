<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ribbon="http://schemas.microsoft.com/winfx/2006/xaml/presentation/ribbon" 
                    xmlns:ribbon1="http://schemas.microsoft.com/winfx/2006/xaml/presentation/shell" 
                    xmlns:System="clr-namespace:System;assembly=mscorlib" 
                    

                    >
    
    <!--
    xmlns:Converters="clr-namespace:Inflexion2.UX.WPF.ValueConverters;assembly=Inflexion2.UX.WPF"
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic" 
       xmlns:Microsoft_Windows_Controls_Ribbon_Primitives="clr-namespace:Microsoft.Windows.Controls.Ribbon.Primitives;assembly=RibbonControlsLibrary"-->

        
    <ResourceDictionary.MergedDictionaries>
        <!--<ResourceDictionary Source="pack://application:,,,/Inflexion2.UX.WPF.Controls;component/Styles/Controls.Buttons.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Inflexion2.UX.WPF.Controls;component/Styles/Controls.CheckBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Inflexion2.UX.WPF.Controls;component/Styles/Controls.ComboBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Inflexion2.UX.WPF.Controls;component/Styles/Controls.PasswordBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Inflexion2.UX.WPF.Controls;component/Styles/Controls.RadioButton.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Inflexion2.UX.WPF.Controls;component/Styles/Controls.TextBlock.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Inflexion2.UX.WPF.Controls;component/Styles/Controls.TextBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Inflexion2.UX.WPF.Controls;component/Styles/Controls.Tooltip.xaml" />-->

        
        <!--<ResourceDictionary Source="pack://application:,,,/Inflexion2.UX.WPF.Controls;component/Styles/Controls.Expander.xaml" />-->
        <!--<ResourceDictionary Source="pack://application:,,,/Inflexion2.UX.WPF.Controls;component/Styles/Fonts.xaml" />-->
        <!--<ResourceDictionary Source="pack://application:,,,/Inflexion2.UX.WPF.Controls;component/Styles/Colours.xaml" />-->
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="ValidationToolTipTemplate">
        <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform" X="-25" />
            </Grid.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                        <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root">
                                <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Background="{DynamicResource ValidationBrush1}" CornerRadius="5" Margin="4,4,-4,-4" />
            <Border Background="{DynamicResource ValidationBrush2}" CornerRadius="4" Margin="3,3,-3,-3" />
            <Border Background="{DynamicResource ValidationBrush3}" CornerRadius="3" Margin="2,2,-2,-2" />
            <Border Background="{DynamicResource ValidationBrush4}" CornerRadius="2" Margin="1,1,-1,-1" />
            <Border Background="{DynamicResource ValidationBrush5}" CornerRadius="2" />
            <Border CornerRadius="2">
                <TextBlock Foreground="{DynamicResource WhiteColorBrush}"
                           MaxWidth="250"
                           Margin="8,4,8,4"
                           TextWrapping="Wrap"
                           Text="{Binding (Validation.Errors)[0].ErrorContent}"
                           UseLayoutRounding="false" />
            </Border>
        </Grid>
    </ControlTemplate>

    <!--<Converters:stringToPathGeometryConverter x:Key="stringToPathGeometryConverter"></Converters:stringToPathGeometryConverter>
    <Converters:StringStateToPathConverter x:Key="stringStateToPathConverter"></Converters:StringStateToPathConverter>-->

  

    <!--************************ EDU 20/11/12 Added Dictionaries *********************-->
    <SolidColorBrush x:Key="TabControlNormalBorderBrush" Color="#8C8E94"/>
    <LinearGradientBrush x:Key="TabItemHotBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#EAF6FD" Offset="0.15"/>
        <GradientStop Color="#D9F0FC" Offset=".5"/>
        <GradientStop Color="#BEE6FD" Offset=".5"/>
        <GradientStop Color="#A7D9F5" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TabItemSelectedBackground" Color="#F9F9F9"/>
    <SolidColorBrush x:Key="TabItemHotBorderBrush" Color="#3C7FB1"/>
    <SolidColorBrush x:Key="TabItemDisabledBackground" Color="#F4F4F4"/>
    <SolidColorBrush x:Key="TabItemDisabledBorderBrush" Color="#FFC9C7BA"/>


    <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#F3F3F3" Offset="0"/>
        <GradientStop Color="#EBEBEB" Offset="0.5"/>
        <GradientStop Color="#DDDDDD" Offset="0.5"/>
        <GradientStop Color="#CDCDCD" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="AccentBrush" Color="#ED752E"/>

    <System:String x:Key="ExpanderString">M 22.5794,20.1213L 44.6587,0.500031L 0.499985,0.500031L 22.5794,20.1213 Z</System:String>
    <System:String x:Key="ScrollDownString">M 22.5794,20.1213L 44.6587,0.500031L 0.499985,0.500031L 22.5794,20.1213 Z</System:String>
    <System:String x:Key="CloseCrossString">M 1.33364,7.335L 7.33501,1.33364M 7.33501,7.33501L 1.33364,1.33364</System:String>

    <SolidColorBrush x:Key="TabBackgroundBrush" Color="White"/>
    <SolidColorBrush x:Key="FooterBrush" Color="#FFE9E9E9"/>
    <SolidColorBrush x:Key="LeftPanelBackgrounBrush" Color="#FFF8F8F8"/>
    <SolidColorBrush x:Key="ContentBackgroundBrush" Color="#FFE9E9E9"/>
    <SolidColorBrush x:Key="ScrollBarBrush" Color="#FFCCCCCC"/>
    <SolidColorBrush x:Key="ScrollBarActiveBrush" Color="#FFCCCCCC"/>
    <SolidColorBrush x:Key="LeftPanelSectionButtonBrush" Color="White"/>
    <SolidColorBrush x:Key="LeftPanelSectionButtonBorderBrush" Color="#FFE9E9E9"/>
    <LinearGradientBrush x:Key="LeftPanelSectionButtonSelectedBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFED752E"/>
        <GradientStop Color="#FFC65821" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="White" Offset="0"/>
        <GradientStop Color="#FFE9E9E9" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonBackgroundPressedBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="White" Offset="0"/>
        <GradientStop Color="#FFB9B9B9" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonBorderBrush" Color="#FFE3E3E3"/>
    <LinearGradientBrush x:Key="ButtonBackgroundOverBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="White" Offset="0"/>
        <GradientStop Color="#FFF4F4F4" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="MainButtonBorderBrush" Color="#FF547921"/>
    <LinearGradientBrush x:Key="MainButtonBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF94C049" Offset="0"/>
        <GradientStop Color="#FF78A237" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonBorderPressedBrush" Color="#FFA2A2A2"/>
    <SolidColorBrush x:Key="ButtonBorderOverBrush" Color="#FFEDEDED"/>
    <SolidColorBrush x:Key="ButtonBorderDisableBrush" Color="#FFDFE0DE"/>
    <SolidColorBrush x:Key="MainButtonBorderOverBrush" Color="#FF547921"/>
    <LinearGradientBrush x:Key="MainButtonBackgroundOverBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFA2CE57" Offset="0"/>
        <GradientStop Color="#FF89B347" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MainButtonBackgroundDisableBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFD3E0BE" Offset="0"/>
        <GradientStop Color="#FFD3E0BE" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MainButtonBackgroundPressedBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF558A01" Offset="1"/>
        <GradientStop Color="#FF75AD15" Offset="0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="MainButtonBorderPressedBrush" Color="#FF265500"/>
    <LinearGradientBrush x:Key="ContentPropertiesTabControlBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFF7F7F7" Offset="1"/>
        <GradientStop Color="White"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ContentTextBoxBorderBrush" Color="#FFE3E3E3"/>
    <SolidColorBrush x:Key="ContentPropertiesTabBorderSelectedBrush" Color="#FFE9E9E9"/>
    <SolidColorBrush x:Key="ContentPropertiesTabBackgroundSelectedBrush" Color="#FFF8F8F8"/>
    <SolidColorBrush x:Key="ContentTabBackgroundBrush" Color="White"/>
    <SolidColorBrush x:Key="ContentTabControlBackgroundBrush" Color="White"/>
    <SolidColorBrush x:Key="ContentPropertiesTabControlBorderBrush" Color="#FFE1E1E1"/>
    <!--************************ EDU 16/11/12 Added *********************-->
    <SolidColorBrush x:Key="RibbonHeaderBackgroundBrush" Color="Pink"/>
    <!-- #FF333333-->
    <LinearGradientBrush x:Key="RibbonBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFE6E6E6"/>
        <GradientStop Color="#FFB3B3B3" Offset="1"/>
    </LinearGradientBrush>
    <!--********************************************************************-->

    
    <!--************************ EDU 20/11/12 Added Controls*********************-->
    <!--******************************** TABCONTROL*********************************-->
    <Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Padding" Value="4,4,4,4"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
        <Setter Property="Background" Value="#F9F9F9"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel" 
                                  Grid.Column="0" 
                                  IsItemsHost="true" 
                                  Margin="0,0,0,0" 
                                  Grid.Row="0" 
                                  KeyboardNavigation.TabIndex="1" 
                                  Panel.ZIndex="1"/>
                        <Border x:Name="ContentPanel" 
                                Background="{DynamicResource ContentTabControlBackgroundBrush}" 
                                Grid.Column="0" 
                                KeyboardNavigation.DirectionalNavigation="Contained" 
                                Grid.Row="1" 
                                KeyboardNavigation.TabIndex="2" 
                                KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" 
                                              ContentSource="SelectedContent" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" 
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="TabItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="3,3,3,1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
 
    <Style x:Key="TabItemContentStyle" TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Padding" Value="6,1,6,1"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="grid" Height="22" Margin="0">
                        <Border HorizontalAlignment="Center" Margin="10,0" VerticalAlignment="Center">
                            <StackPanel Orientation="Horizontal" Height="12">
                                <ContentPresenter x:Name="Content" 
                                                  TextElement.Foreground="#FF808080" 
                                                  TextElement.FontFamily="Segoe UI, Lucida Sans Unicode, Verdana" 
                                                  TextElement.FontSize="{TemplateBinding FontSize}" 
                                                  ContentSource="Header" RecognizesAccessKey="True" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                  HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <Viewbox Stretch="Fill" HorizontalAlignment="Center"
                                         DockPanel.Dock="Right" Width="8" Height="8" VerticalAlignment="Center" Margin="4,0,0,0" >
                                    <Path x:Name="closePath" 
                                          Data="{Binding Converter={StaticResource stringToPathGeometryConverter}, 
                                        Source={StaticResource CloseCrossString}}" Stroke="Gray" StrokeThickness="2"/>
                                </Viewbox>
                                <Viewbox Stretch="Fill" HorizontalAlignment="Center" 
                                         DockPanel.Dock="Right" Width="8" Height="6" 
                                         VerticalAlignment="Center" Margin="6,0,0,0" >
                                    <Path x:Name="expandPath" 
                                          Data="{Binding Converter={StaticResource stringToPathGeometryConverter}, 
                                          Source={StaticResource ExpanderString}}" 
                                          Fill="Gray"/>
                                </Viewbox>
                            </StackPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true"/>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Stroke" TargetName="closePath" Value="Black"/>
                            <Setter Property="Fill" TargetName="expandPath" Value="Black"/>
                            <Setter Property="TextElement.Foreground" TargetName="Content" Value="Black"/>
                            <Setter Property="Background" TargetName="grid" Value="{DynamicResource TabBackgroundBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom"/>
                        <Trigger Property="TabStripPlacement" Value="Left"/>
                        <Trigger Property="TabStripPlacement" Value="Right"/>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Top"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-2,-2,-1"/>
                            <Setter Property="Margin" TargetName="Content" Value="0,0,0,1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Bottom"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-1,-2,-2"/>
                            <Setter Property="Margin" TargetName="Content" Value="0,1,0,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-2,-1,-2"/>
                            <Setter Property="Margin" TargetName="Content" Value="0,0,1,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-1,-2,-2,-2"/>
                            <Setter Property="Margin" TargetName="Content" Value="1,0,0,0"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ContentTabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Padding" Value="4,4,4,4"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
        <Setter Property="Background" Value="#F9F9F9"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <Rectangle HorizontalAlignment="Stretch" Grid.Row="1" VerticalAlignment="Stretch" StrokeThickness="0" Fill="{DynamicResource ContentPropertiesTabControlBackgroundBrush}"/>
                        <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="5,4,5,5" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.Row="1"/>
                        <Border x:Name="ContentPanel" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" BorderBrush="{DynamicResource ContentPropertiesTabControlBorderBrush}" BorderThickness="1">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="2" Opacity="0.25" />
                            </Border.Effect>
                        </Border>
                        <TabPanel x:Name="HeaderPanel" Grid.Column="0" IsItemsHost="true" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" Background="{DynamicResource ContentTabControlBackgroundBrush}"/>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ContentTabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Padding" Value="6,1,6,1"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid Height="30">
                        <Border x:Name="border" BorderBrush="{DynamicResource ContentPropertiesTabBorderSelectedBrush}"
                                BorderThickness="1,1,1,0" Visibility="Hidden" Background="{DynamicResource ContentPropertiesTabBackgroundSelectedBrush}"/>
                        <ContentPresenter x:Name="Content" TextElement.FontFamily="Segoe UI, Lucida Sans Unicode, Verdana" 
                                          TextElement.FontSize="14" 
                                          ContentSource="Header" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          Margin="25,0" HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--********************************************************************-->

    
    <!--************************ EDU 23/11/12 Added Controls*********************-->
    <!--******************************* DATAGRID *********************************-->

    <Style x:Key="ImageThreeStateWithTextButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Tag" Value="mas"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{DynamicResource ButtonBorderBrush}" BorderThickness="1" CornerRadius="5" Background="White">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter TextElement.FontSize="{StaticResource FontSizeS}" TextElement.FontFamily="{StaticResource FontBold}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="8,0,0,0"/>
                            <Image  Grid.Column="1" x:Name="BtnImage" Tag="normal" Height="17" Width="17" RenderOptions.EdgeMode="Aliased" RenderOptions.BitmapScalingMode="NearestNeighbor" Margin="0,0,1,1">
                                <Image.Source>
                                    <MultiBinding Converter="{StaticResource stringStatToPathConverter}">
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Tag" />
                                        <Binding ElementName="BtnImage" Path="Tag"/>
                                    </MultiBinding>
                                </Image.Source>
                            </Image>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BtnImage" Property="Tag"  Value="over"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Tag" TargetName="BtnImage" Value="click"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="SearchTextBoxStyle" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" CornerRadius="5" Height="{TemplateBinding Height}"/>
                        <Border x:Name="Bd" BorderThickness="{TemplateBinding BorderThickness}"  CornerRadius="5" BorderBrush="#FFE3E3E3" Height="{TemplateBinding Height}">
                            <ScrollViewer TextElement.Foreground="{StaticResource FirstFontBrush}" TextElement.FontSize="{StaticResource FontSizeM}" TextElement.FontFamily="{StaticResource FontNormal}" x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="9,5,9,0" VerticalAlignment="Top"/>
                        </Border>
                        <Border BorderThickness="1,1,0,0" CornerRadius="5" BorderBrush="{DynamicResource ContentTextBoxBorderBrush}" Height="{TemplateBinding Height}">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="2" ShadowDepth="1" Opacity="0.3"/>
                            </Border.Effect>
                        </Border>


                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="TextTrimming" Value="None"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontNormal}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeM}"/>
        <Setter Property="Margin" Value="5,9,0,9"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid Height="30">
                        <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="#FFE9E9E9" BorderThickness="0,0,1,1">
                            <ContentPresenter x:Name="contentPresenter" TextElement.FontFamily="{StaticResource FontBold}" TextElement.FontSize="{StaticResource FontSizeM}" TextElement.Foreground="#4C4C4C" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Height="14.4" Width="126.777" VerticalAlignment="Top" Margin="5,3,0,0"/>
                        </Border>
                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True"/>
                        <Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="DataGridHorizontalGridLinesBrush" Color="#FFE9E9E9"/>
    <SolidColorBrush x:Key="DataGridVerticalGridLinesBrush" Color="#FFE9E9E9"/>
    <SolidColorBrush x:Key="DataGridBorderBrush" Color="#FF688CAF"/>
    <SolidColorBrush x:Key="DataGridAlternate1BackgroundBrush" Color="White" />
    <SolidColorBrush x:Key="DataGridAlternate2BackgroundBrush" Color="#FFF8F8F8" />
    <SolidColorBrush x:Key="DataGridSelectedBackgroundBrush" Color="#FFDFECC8" />
    <SolidColorBrush x:Key="{x:Static DataGrid.FocusBorderBrushKey}" Color="#FF000000"/>
    <SolidColorBrush x:Key="DataGridSelectedForegroundBrush" Color="Black" />
    <SolidColorBrush x:Key="DataGridUnselectedForegroundBrush" Color="#FF7F7F7F" />
    
    <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource DataGridBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="RowHeaderWidth" Value="0" />
        <Setter Property="AlternationCount" Value="2" />
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource DataGridHorizontalGridLinesBrush}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource DataGridVerticalGridLinesBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        <DataGridColumnHeadersPresenter 
                                            x:Name="PART_ColumnHeadersPresenter" 
                                            Grid.Column="1" 
                                            Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        <ScrollContentPresenter
                                            x:Name="PART_ScrollContentPresenter" 
                                            CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                                        <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                        <Grid Grid.Column="1" Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                       Grid.Column="1" 
                                                       Maximum="{TemplateBinding ScrollableWidth}" 
                                                       Orientation="Horizontal" 
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DataGridCampoRelevanteColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid Height="30">
                        <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="#FFE9E9E9" BorderThickness="0,0,0,1">
                            <StackPanel Orientation="Horizontal">
                                <ContentPresenter x:Name="contentPresenter" TextElement.FontFamily="{StaticResource FontBold}" TextElement.FontSize="{StaticResource FontSizeM}" TextElement.Foreground="#4C4C4C" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Top" Margin="5,3,0,0"/>
                                <Viewbox Stretch="Fill" HorizontalAlignment="Center" Width="8" Height="8" VerticalAlignment="Top" Margin="3,6,0,0" >
                                    <Path x:Name="closePath" Data="{Binding Converter={StaticResource stringToPathGeometryConverter}, Source={StaticResource CloseCrossString}}" Stroke="Gray" StrokeThickness="2" Grid.Column="1"/>
                                </Viewbox>

                            </StackPanel>
                        </Border>
                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="DataGridRowStyle" TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter Grid.Column="1" 
                                                    ItemsPanel="{TemplateBinding ItemsPanel}" 
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" 
                                                      SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, 
                                                            ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, 
                                                            Converter={x:Static DataGrid.RowDetailsScrollingConverter}, 
                                                            RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                                      Visibility="{TemplateBinding DetailsVisibility}"/>
                            <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                        </SelectiveScrollingGrid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" TargetName="DGR_Border" Value="{StaticResource DataGridSelectedBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="Background" Value="{StaticResource DataGridAlternate1BackgroundBrush}"></Setter>
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" Value="{StaticResource DataGridAlternate2BackgroundBrush}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="TextElement.Foreground" Value="{StaticResource DataGridUnselectedForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="cpresenter" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" OpacityMask="Black"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            <Setter Property="TextElement.Foreground" TargetName="cpresenter" Value="{StaticResource DataGridSelectedForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="DataGridTituloColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid Height="30">
                        <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="#FFE9E9E9" BorderThickness="0,0,1,1">
                            <StackPanel Orientation="Horizontal" Margin="3,5,0,0">
                                <ContentPresenter x:Name="contentPresenter" TextElement.FontFamily="{StaticResource FontBold}" TextElement.FontSize="{StaticResource FontSizeM}" TextElement.Foreground="#4C4C4C" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Top" Margin="5,0,0,0" HorizontalAlignment="Stretch"/>
                                <Viewbox Stretch="Fill" HorizontalAlignment="Left" Width="8" Height="6" VerticalAlignment="Center" Margin="7,0,0,8" >
                                    <Path x:Name="expandPath" Data="{Binding Converter={StaticResource stringToPathGeometryConverter}, Source={StaticResource ExpanderString}}" Fill="Black"/>
                                </Viewbox>
                            </StackPanel>
                        </Border>
                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    
    <Style x:Key="DataGridPrimeraColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid Height="30">
                        <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="#FFE9E9E9" BorderThickness="0,0,1,1">
                            <ContentPresenter x:Name="contentPresenter" TextElement.FontFamily="{StaticResource FontBold}" TextElement.FontSize="{StaticResource FontSizeM}" TextElement.Foreground="#4C4C4C" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Height="14.4" Width="126.777" VerticalAlignment="Top" Margin="5,3,0,0"/>
                        </Border>
                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <SolidColorBrush x:Key="CheckBoxFillNormal" Color="#F4F4F4"/>
    <SolidColorBrush x:Key="CheckBoxStroke" Color="#8E8F8F"/>
    
    <Style x:Key="EmptyCheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CheckRadioFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="StarredCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Image Height="15" Width="15" x:Name="CheckBoxImage" Tag="normal" RenderOptions.BitmapScalingMode="NearestNeighbor">
                        <Image.Source>
                            <MultiBinding Converter="{StaticResource stringStateToPathConverter}">
                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Tag" />
                                <Binding ElementName="CheckBoxImage" Path="Tag"/>
                            </MultiBinding>
                        </Image.Source>
                    </Image>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Tag" TargetName="CheckBoxImage" Value="active"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CheckBoxImage" Property="Tag"  Value="active-highlight"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Tag" TargetName="CheckBoxImage" Value="click"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>

    <Style x:Key="StarredDataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnLoaded1">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="cpresenter">
                                <EasingColorKeyFrame KeyTime="0" Value="#7F7F7F"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" SnapsToDevicePixels="True">
                        <Grid Height="35">
                            <ContentPresenter x:Name="cpresenter" 
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                      OpacityMask="Black"/>
                            <Image x:Name="image" 
                                           Visibility="Collapsed" 
                                           Source="/Inflexion2.UX.WPF.Controls;component/Images/estrella-active-highlighted.png" 
                                           Height="15" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>

                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                            <BeginStoryboard Storyboard="{StaticResource OnLoaded1}"/>
                        </EventTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#FFDFECC8"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            <Setter Property="TextElement.Foreground" TargetName="cpresenter" Value="Black"/>
                            <Setter Property="Visibility" TargetName="image" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="cpresenter" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="cpresenter" Value="#7F7F7F"/>
                            <Setter Property="Visibility" TargetName="image" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="cpresenter" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--**************************************************************************-->


    <Style TargetType="ToolTip" BasedOn="{StaticResource tooltip}" />

    <SolidColorBrush x:Key="BgModal" Color="#B30E1F33"/>

    
    <DropShadowEffect x:Key="ModalDropShadowBrush" Direction="330" Opacity="0.3" ShadowDepth="0" BlurRadius="6"/>

    
    
</ResourceDictionary>
