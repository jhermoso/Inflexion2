<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Inflexion2.NHibernate</name>
    </assembly>
    <members>
        <member name="M:Inflexion2.Domain.NHibernateUnitOfWork.Commit">
            <summary>
            Commit all changes made in  a container.
            </summary>
        </member>
        <member name="M:Inflexion2.Domain.NHibernateUnitOfWork.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Inflexion2.Domain.NHibernateUnitOfWork.RollbackChanges">
            <summary>
            Rollback changes not stored in databse at
            this moment. See references of UnitOfWork pattern
            </summary>
        </member>
        <member name="M:Inflexion2.Domain.NHibernateUnitOfWork.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:uNhAddIns.UserTypes.GenericWellKnownInstanceType`2">
            <summary>
            http://code.google.com/p/unhaddins/
            Esta clase permite persistir una clase generica con otro tipo.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TId">The type of the id.</typeparam>
        </member>
        <member name="M:uNhAddIns.UserTypes.GenericWellKnownInstanceType`2.#ctor(System.Collections.Generic.IEnumerable{`0},System.Func{`0,`1,System.Boolean},System.Func{`0,`1})">
            <summary>
            Base constructor
            </summary>
            <param name="repository">The collection that represent a in-memory repository.</param>
            <param name="findPredicate">The predicate an instance by the persisted value.</param>
            <param name="idGetter">The getter of the persisted value.</param>
        </member>
        <member name="P:uNhAddIns.UserTypes.GenericWellKnownInstanceType`2.SqlTypes">
            <summary>
            The SQL types for the columns mapped by this type.
            </summary>
        </member>
        <member name="T:Inflexion2.Domain.FixedDefaultFlushEventListener">
            <summary>
            Fix for issue: https://hibernate.onjira.com/browse/HHH-2763
            http://stackoverflow.com/questions/3090733/an-nhibernate-audit-trail-that-doesnt-cause-collection-was-not-processed-by-fl
            </summary>
            <param name="session">The session.</param>
        </member>
        <member name="M:Inflexion2.Domain.FixedDefaultFlushEventListener.PerformExecutions(NHibernate.Event.IEventSource)">
            <summary>
            Fix for issue: https://hibernate.onjira.com/browse/HHH-2763
            http://stackoverflow.com/questions/3090733/an-nhibernate-audit-trail-that-doesnt-cause-collection-was-not-processed-by-fl
            </summary>
            <param name="session">The session.</param>
        </member>
        <member name="T:Inflexion2.Domain.AuditFlushEntityEventListener`1">
             <summary>
            
             </summary>
             http://stackoverflow.com/questions/5087888/ipreupdateeventlistener-and-dynamic-update-true
        </member>
        <!-- Badly formed XML comment ignored for member "T:Inflexion2.Domain.TicksAsString" -->
        <member name="M:Inflexion2.Domain.SqlExceptionHandler._ParseConstraintName(System.String)">
            <summary>
            Gets the name of a constraint.
            </summary>
            <value>The name of the constraint.</value>
        </member>
        <member name="T:Inflexion2.Domain.EventDescriptorMap">
            <summary>
            EventDescriptor Map
            </summary>
        </member>
        <member name="M:Inflexion2.Domain.EventDescriptorMap.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Inflexion2.Domain.EventDescriptorMap"/> class.
            </summary>
        </member>
    </members>
</doc>
